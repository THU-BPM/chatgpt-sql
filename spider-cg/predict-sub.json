[
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.country = \"France\"  ",
        "question": "Show name , country , age for all singers from France ?",
        "result": "Name, Country, Age FROM singer WHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > 20  ",
        "question": "Show name , country , age for all singers above age 20 ?",
        "result": "Name, Country, Age\nFROM singer\nWHERE Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "Show name , country , age for all singers above the average age .",
        "result": "Name, Country, Age \nFROM singer \nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "Show name , country , age for all singers who are older than average ?",
        "result": "Name, Country, Age FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "Show name , country , age for all singers who performed in a concert in 2014 ?",
        "result": "singer.Name, singer.Country, singer.Age \nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON concert.concert_ID = singer_in_concert.concert_ID \nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "Show name , country , age for all singers who have a song having ' Hey ' in its name ?",
        "result": "singer.Name, singer.Country, singer.Age \nFROM singer \nWHERE singer.Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "Show name , country , age for all singers who has a song with the word ' Hey ' in its title ?",
        "result": "singer.Name, singer.Country, singer.Age\nFROM singer\nWHERE singer.Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show name , country , age for all singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.country = \"France\"  ",
        "question": "What are the names , countries , and ages for every singer from France ?",
        "result": "Name, Country, Age FROM singer WHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > 20  ",
        "question": "What are the names , countries , and ages for every singer above age 20 ?",
        "result": "Name, Country, Age\nFROM singer\nWHERE Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the names , countries , and ages for every singer above the average age .",
        "result": "Name, Country, Age\nFROM singer\nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the names , countries , and ages for every singer who are older than average ?",
        "result": "Name, Country, Age FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "What are the names , countries , and ages for every singer who performed in a concert in 2014 ?",
        "result": "singer.Name, singer.Country, singer.Age \nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON concert.concert_ID = singer_in_concert.concert_ID \nWHERE concert.Year = 2014",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the names , countries , and ages for every singer who have a song having ' Hey ' in its name ?",
        "result": "Name, Country, Age \nFROM singer \nWHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country , singer.age from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the names , countries , and ages for every singer who has a song with the word ' Hey ' in its title ?",
        "result": "Name, Country, Age FROM singer \nWHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names , countries , and ages for every singer who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.age > 20  ",
        "question": "What is the average , minimum , and maximum age of all singers above age 20 ?",
        "result": "AVG(Age), MIN(Age), MAX(Age)\nFROM singer\nWHERE Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What is the average , minimum , and maximum age of all singers above the average age .",
        "result": "MAX(Age), MIN(Age), AVG(Age) FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What is the average , minimum , and maximum age of all singers who are older than average ?",
        "result": "MAX(Age), MIN(Age), AVG(Age) FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "What is the average , minimum , and maximum age of all singers who performed in a concert in 2014 ?",
        "result": "AVG(singer.Age), MIN(singer.Age), MAX(singer.Age)\nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON singer_in_concert.concert_ID = concert.concert_ID \nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What is the average , minimum , and maximum age of all singers who have a song having ' Hey ' in its name ?",
        "result": "AVG(Age), MIN(Age), MAX(Age)\nFROM singer\nWHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select avg(singer.age) , min(singer.age) , max(singer.age) from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What is the average , minimum , and maximum age of all singers who has a song with the word ' Hey ' in its title ?",
        "result": "AVG(Age), MIN(Age), MAX(Age) \nFROM singer \nWHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the average , minimum , and maximum age of all singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer   order by singer.age desc",
        "question": "What are all distinct countries in descending order of age ?",
        "result": "DISTINCT Country \nFROM singer \nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all distinct countries in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer   order by singer.age desc",
        "question": "What are the different countries with singers ordered by age from the oldest to the youngest .",
        "result": "Country \nFROM singer \nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer   order by singer.age desc",
        "question": "What are the different countries with singers in descending order of age ?",
        "result": "Country FROM singer ORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer where  singer.country = \"France\"  ",
        "question": "What are the different countries with singers from France ?",
        "result": "Country \nFROM singer \nWHERE Country != 'France' \nAND Singer_ID IN (SELECT Singer_ID FROM singer WHERE Country = 'France')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the different countries with singers above the average age .",
        "result": "Country\nFROM singer\nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the different countries with singers who are older than average ?",
        "result": "Country FROM singer\nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "What are the different countries with singers who performed in a concert in 2014 ?",
        "result": "singer.Country \nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON concert.concert_ID = singer_in_concert.concert_ID \nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the different countries with singers who have a song having ' Hey ' in its name ?",
        "result": "singer.Country\nFROM singer\nWHERE singer.Song_Name LIKE '%Hey%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select distinct singer.country from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the different countries with singers who has a song with the word ' Hey ' in its title ?",
        "result": "singer.Country\nFROM singer\nWHERE singer.Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the different countries with singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer   order by singer.age desc",
        "question": "List all song names by singers ordered by age from the oldest to the youngest .",
        "result": "Song_Name \nFROM singer \nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer   order by singer.age desc",
        "question": "List all song names by singers in descending order of age ?",
        "result": "Song_Name \nFROM singer \nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.country = \"France\"  ",
        "question": "List all song names by singers from France ?",
        "result": "Song_Name \nFROM singer \nWHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.age > 20  ",
        "question": "List all song names by singers above age 20 ?",
        "result": "Song_Name \nFROM singer \nWHERE Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "List all song names by singers who performed in a concert in 2014 ?",
        "result": "singer.Song_Name\nFROM singer\nINNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID\nINNER JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID\nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "List all song names by singers who have a song having ' Hey ' in its name ?",
        "result": "Song_Name \nFROM singer \nWHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "List all song names by singers who has a song with the word ' Hey ' in its title ?",
        "result": "Song_Name FROM singer WHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### List all song names by singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer   order by singer.age desc",
        "question": "What are all the song names by singers ordered by age from the oldest to the youngest .",
        "result": "song_name FROM singer\nORDER BY age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer   order by singer.age desc",
        "question": "What are all the song names by singers in descending order of age ?",
        "result": "song_name FROM singer\nORDER BY age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.country = \"France\"  ",
        "question": "What are all the song names by singers from France ?",
        "result": "Song_Name \nFROM singer \nWHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.age > 20  ",
        "question": "What are all the song names by singers above age 20 ?",
        "result": "Song_Name \nFROM singer \nWHERE Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "What are all the song names by singers who performed in a concert in 2014 ?",
        "result": "song_name \nFROM singer \nINNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nINNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID \nWHERE Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are all the song names by singers who have a song having ' Hey ' in its name ?",
        "result": "Song_Name FROM singer WHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.song_name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are all the song names by singers who has a song with the word ' Hey ' in its title ?",
        "result": "singer.Song_Name\nFROM singer\nWHERE singer.Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are all the song names by singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "Show location and name for all stadiums with highest average attendance ?",
        "result": "Location, Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show location and name for all stadiums with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "Show location and name for all stadiums with the highest average attendance ?",
        "result": "Location, Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show location and name for all stadiums with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )  ",
        "question": "Show location and name for all stadiums without any concerts ?",
        "result": "Location, Name \nFROM stadium \nWHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show location and name for all stadiums without any concerts ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.location , stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "Show location and name for all stadiums which some concerts happened in the years of both 2014 and 2015 .",
        "result": "Stadium.Location, Stadium.Name\nFROM Stadium\nINNER JOIN concert ON Stadium.Stadium_ID = concert.Stadium_ID\nWHERE concert.Year = 2014 AND Stadium.Stadium_ID IN (\n  SELECT concert.Stadium_ID\n  FROM concert\n  WHERE concert.Year = 2015\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show location and name for all stadiums which some concerts happened in the years of both 2014 and 2015 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.location , stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "Show location and name for all stadiums that had concerts that occurred in both 2014 and 2015 ?",
        "result": "Location, Name \nFROM stadium \nWHERE Stadium_ID IN (\n  SELECT Stadium_ID \n  FROM concert \n  WHERE Year = 2014 \n  INTERSECT \n  SELECT Stadium_ID \n  FROM concert \n  WHERE Year = 2015 \n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show location and name for all stadiums that had concerts that occurred in both 2014 and 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the locations and names of all stations with highest average attendance ?",
        "result": "Location, Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the locations and names of all stations with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.location , stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the locations and names of all stations with the highest average attendance ?",
        "result": "Location, Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the locations and names of all stations with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What is the name and capacity for the stadium with a capacity between 5000 and 10000 .",
        "result": "Name, Capacity \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What is the name and capacity for the stadium with capacity between 5000 and 10000 ?",
        "result": "Name, Capacity \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium with capacity between 5000 and 10000 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )  ",
        "question": "What is the name and capacity for the stadium without any concerts ?",
        "result": "Name, Capacity \nFROM stadium \nWHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium without any concerts ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 .",
        "result": "stadium.Name, stadium.Capacity \nFROM stadium \nINNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year = 2014 AND stadium.Stadium_ID IN \n(SELECT concert.Stadium_ID FROM concert WHERE Year = 2015)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ?",
        "result": "s.Name, s.Capacity\nFROM stadium s\nWHERE s.Stadium_ID IN (\n    SELECT c.Stadium_ID\n    FROM concert c\n    WHERE c.Year = 2014\n    INTERSECT\n    SELECT c.Stadium_ID\n    FROM concert c\n    WHERE c.Year = 2015\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What is the name and capacity for the stadium with a capacity between 5000 and 10000 .",
        "result": "Name, Capacity \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What is the name and capacity for the stadium with capacity between 5000 and 10000 ?",
        "result": "Name, Capacity\nFROM stadium\nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium with capacity between 5000 and 10000 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )  ",
        "question": "What is the name and capacity for the stadium without any concerts ?",
        "result": "Name, Capacity FROM stadium\nWHERE Stadium_ID NOT IN \n    (SELECT Stadium_ID FROM concert)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium without any concerts ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 .",
        "result": "Stadium.Name, Stadium.Capacity\nFROM Stadium\nWHERE Stadium.Stadium_ID IN (\n    SELECT concert.Stadium_ID\n    FROM concert\n    WHERE concert.Year = 2014\n    INTERSECT\n    SELECT concert.Stadium_ID\n    FROM concert\n    WHERE concert.Year = 2015\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium which some concerts happened in the years of both 2014 and 2015 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ?",
        "result": "s.Name, s.Capacity\nFROM stadium s\nWHERE s.Stadium_ID IN (\n    SELECT c.Stadium_ID\n    FROM concert c\n    WHERE c.Year = 2014\n    INTERSECT\n    SELECT c.Stadium_ID\n    FROM concert c\n    WHERE c.Year = 2015\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity for the stadium that had concerts that occurred in both 2014 and 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year > 2013  group by stadium.stadium_id  order by count(*) desc limit 1 ",
        "question": "Show the stadium name and capacity with most number of concerts after 2013 ?",
        "result": "stadium.Name, stadium.Capacity \nFROM stadium \nJOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year > 2013 \nGROUP BY stadium.Name, stadium.Capacity \nORDER BY COUNT(concert.concert_ID) DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium name and capacity with most number of concerts after 2013 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014  group by stadium.stadium_id  order by count(*) desc limit 1 ",
        "question": "Show the stadium name and capacity with most number of concerts in 2014 ?",
        "result": "stadium.Name, stadium.Capacity \nFROM stadium \nINNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year = 2014 \nGROUP BY stadium.Name \nORDER BY COUNT(concert.concert_ID) DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium name and capacity with most number of concerts in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014  group by stadium.stadium_id  order by count(*) desc limit 1 ",
        "question": "What is the name and capacity of the stadium with the most concerts in year 2014 .",
        "result": "stadium.Name, stadium.Capacity \nFROM stadium \nINNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year = 2014 \nGROUP BY stadium.Name \nORDER BY COUNT(concert.Concert_ID) DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity of the stadium with the most concerts in year 2014 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.capacity from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014  group by stadium.stadium_id  order by count(*) desc limit 1 ",
        "question": "What is the name and capacity of the stadium with the most concerts in 2014 ?",
        "result": "stadium.Name, stadium.Capacity \nFROM stadium \nJOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year = 2014 \nGROUP BY stadium.Stadium_ID \nORDER BY COUNT(concert.concert_ID) DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and capacity of the stadium with the most concerts in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select concert.year from concert where  concert.year = 2014 or concert.year = 2015  ",
        "question": "Which year in year 2014 or 2015 ?",
        "result": "Year FROM concert WHERE Year = 2014 OR Year = 2015;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Which year in year 2014 or 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select concert.year from concert where  concert.year = 2014 or concert.year = 2015  ",
        "question": "What is the year in year 2014 or 2015 ?",
        "result": "2014 OR 2015 AS \"year\"",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the year in year 2014 or 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "Show the stadium names with a capacity between 5000 and 10000 .",
        "result": "Name \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium names with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "Show the stadium names with capacity between 5000 and 10000 ?",
        "result": "Name FROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium names with capacity between 5000 and 10000 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "Show the stadium names with highest average attendance ?",
        "result": "Name\nFROM stadium\nWHERE Average = (\n    SELECT MAX(Average)\n    FROM stadium\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium names with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "Show the stadium names with the highest average attendance ?",
        "result": "Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show the stadium names with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What are the names of the stadiums with a capacity between 5000 and 10000 .",
        "result": "Name \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What are the names of the stadiums with capacity between 5000 and 10000 ?",
        "result": "Name \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums with capacity between 5000 and 10000 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the names of the stadiums with highest average attendance ?",
        "result": "Name FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the names of the stadiums with the highest average attendance ?",
        "result": "Name \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What are the names of the stadiums which some concerts happened in the years of both 2014 and 2015 .",
        "result": "stadium.Name\nFROM stadium\nINNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID\nWHERE concert.Year = 2014 AND stadium.Name IN (\n    SELECT stadium.Name \n    FROM stadium \n    INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \n    WHERE concert.Year = 2015\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums which some concerts happened in the years of both 2014 and 2015 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2014   intersect select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year = 2015  ",
        "question": "What are the names of the stadiums that had concerts that occurred in both 2014 and 2015 ?",
        "result": "DISTINCT stadium.Name \nFROM stadium \nJOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \nWHERE concert.Year = 2014 \nAND stadium.Name IN \n    (SELECT stadium.Name \n     FROM stadium \n     JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID \n     WHERE concert.Year = 2015)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the stadiums that had concerts that occurred in both 2014 and 2015 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.country from singer where  singer.age > 40   order by singer.age desc",
        "question": "Show countries where a singer above age 40 and in descending order of age ?",
        "result": "Country FROM singer\nWHERE Age > 40\nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show countries where a singer above age 40 and in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   except select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year >= 2014  ",
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014 or after .",
        "result": "Name \nFROM stadium \nWHERE Stadium_ID NOT IN \n    (SELECT Stadium_ID \n     FROM concert \n     WHERE Year >= 2014)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Show names for all stadiums except for stadiums having a concert in year 2014 or after . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name from stadium   except select stadium.name from concert join stadium on concert.Stadium_ID = stadium.Stadium_ID where  concert.year >= 2014  ",
        "question": "What are the names of all stadiums that did not have a concert in year 2014 or after .",
        "result": "Name FROM stadium \nWHERE Stadium_ID NOT IN \n(SELECT Stadium_ID FROM concert WHERE Year >= 2014)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of all stadiums that did not have a concert in year 2014 or after . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer   order by singer.age desc",
        "question": "What are the names of the singers ordered by age from the oldest to the youngest .",
        "result": "Name FROM singer ORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer   order by singer.age desc",
        "question": "What are the names of the singers in descending order of age ?",
        "result": "Name FROM singer ORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.country = \"France\"  ",
        "question": "What are the names of the singers from France ?",
        "result": "Name FROM singer WHERE Country='France';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.age > 20  ",
        "question": "What are the names of the singers above age 20 ?",
        "result": "Name FROM singer WHERE Age > 20;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the names of the singers above the average age .",
        "result": "Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What are the names of the singers who are older than average ?",
        "result": "Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the names of the singers who have a song having ' Hey ' in its name ?",
        "result": "Name FROM singer WHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers who have a song having ' Hey ' in its name ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name from singer where  singer.song_name like \"%Hey%\"  ",
        "question": "What are the names of the singers who has a song with the word ' Hey ' in its title ?",
        "result": "Name FROM singer WHERE Song_Name LIKE '%Hey%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names of the singers who has a song with the word ' Hey ' in its title ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer   order by singer.age desc",
        "question": "what is the name and nation of the singer ordered by age from the oldest to the youngest .",
        "result": "Name, Country FROM singer ORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer   order by singer.age desc",
        "question": "what is the name and nation of the singer in descending order of age ?",
        "result": "Name, Country\nFROM singer\nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.country = \"France\"  ",
        "question": "what is the name and nation of the singer from France ?",
        "result": "Name, Country \nFROM singer \nWHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > 20  ",
        "question": "what is the name and nation of the singer above age 20 ?",
        "result": "singer.Name, singer.Country\nFROM singer\nWHERE singer.Age > 20;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "what is the name and nation of the singer above the average age .",
        "result": "singer.Name, singer.Country \nFROM singer \nWHERE singer.Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "what is the name and nation of the singer who are older than average ?",
        "result": "Name, Country FROM singer \nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "what is the name and nation of the singer who performed in a concert in 2014 ?",
        "result": "singer.Name, singer.Country \nFROM singer \nJOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID \nJOIN concert ON concert.concert_ID = singer_in_concert.concert_ID \nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### what is the name and nation of the singer who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer   order by singer.age desc",
        "question": "What is the name and country of origin of every singer ordered by age from the oldest to the youngest .",
        "result": "Name, Country FROM singer ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer ordered by age from the oldest to the youngest . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer   order by singer.age desc",
        "question": "What is the name and country of origin of every singer in descending order of age ?",
        "result": "Name, Country \nFROM singer \nORDER BY Age DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer in descending order of age ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.country = \"France\"  ",
        "question": "What is the name and country of origin of every singer from France ?",
        "result": "Name, Country\nFROM singer\nWHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer from France ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > 20  ",
        "question": "What is the name and country of origin of every singer above age 20 ?",
        "result": "Name, Country \nFROM singer \nWHERE Age > 20;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer above age 20 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What is the name and country of origin of every singer above the average age .",
        "result": "singer.Name, singer.Country \nFROM singer \nWHERE singer.Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer above the average age . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer where  singer.age > (select avg(singer.age) from singer  )  ",
        "question": "What is the name and country of origin of every singer who are older than average ?",
        "result": "Name, Country \nFROM singer \nWHERE Age > (SELECT AVG(Age) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer who are older than average ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select singer.name , singer.country from singer_in_concert join singer on singer_in_concert.Singer_ID = singer.Singer_ID join concert on singer_in_concert.concert_ID = concert.concert_ID where  concert.year = 2014  ",
        "question": "What is the name and country of origin of every singer who performed in a concert in 2014 ?",
        "result": "singer.Name, singer.Country\nFROM singer\nINNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID\nINNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID\nWHERE concert.Year = 2014;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What is the name and country of origin of every singer who performed in a concert in 2014 ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "Find the name and location of the stadiums with a capacity between 5000 and 10000 .",
        "result": "Name, Location \nFROM stadium \nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Find the name and location of the stadiums with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium   order by stadium.average desc limit 1 ",
        "question": "Find the name and location of the stadiums with highest average attendance ?",
        "result": "Name, Location FROM stadium\nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Find the name and location of the stadiums with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium   order by stadium.average desc limit 1 ",
        "question": "Find the name and location of the stadiums with the highest average attendance ?",
        "result": "stadium.Name, stadium.Location\nFROM stadium\nWHERE stadium.Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Find the name and location of the stadiums with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )  ",
        "question": "Find the name and location of the stadiums without any concerts ?",
        "result": "stadium.Name, stadium.Location\nFROM stadium\nWHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### Find the name and location of the stadiums without any concerts ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium where  stadium.capacity between 5000 and 10000  ",
        "question": "What are the names and locations of the stadiums with a capacity between 5000 and 10000 .",
        "result": "Name, Location\nFROM stadium\nWHERE Capacity BETWEEN 5000 AND 10000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names and locations of the stadiums with a capacity between 5000 and 10000 . \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the names and locations of the stadiums with highest average attendance ?",
        "result": "Name, Location \nFROM stadium \nWHERE Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names and locations of the stadiums with highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium   order by stadium.average desc limit 1 ",
        "question": "What are the names and locations of the stadiums with the highest average attendance ?",
        "result": "stadium.Name, stadium.Location \nFROM stadium \nWHERE stadium.Average = (SELECT MAX(Average) FROM stadium)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names and locations of the stadiums with the highest average attendance ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select stadium.name , stadium.location from stadium where  stadium.stadium_id not in (select concert.Stadium_ID from concert  )  ",
        "question": "What are the names and locations of the stadiums without any concerts ?",
        "result": "stadium.Name, stadium.Location\nFROM stadium\nLEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID\nWHERE concert.concert_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the names and locations of the stadiums without any concerts ? \n SELECT"
    },
    {
        "db_id": "concert_singer",
        "query": "select count(*) from concert where  concert.year = 2014 or concert.year = 2015  ",
        "question": "What are the number of concerts occurred in 2014 or 2015 ?",
        "result": "COUNT(*) FROM concert WHERE Year IN (2014, 2015);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# stadium(Stadium_ID,Location,Name,Capacity,Highest,Lowest,Average)\n;# singer(Singer_ID,Name,Country,Song_Name,Song_release_year,Age,Is_male)\n;# concert(concert_ID,concert_Name,Theme,Stadium_ID,Year)\n;# singer_in_concert(concert_ID,Singer_ID)\n.# \n ### What are the number of concerts occurred in 2014 or 2015 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "Find the number of pets that are raised by female students ( with sex F ) .",
        "result": "COUNT(*) \nFROM Pets \nINNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID \nINNER JOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.Sex = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of pets that are raised by female students ( with sex F ) . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "Find the number of pets are raised by female students ?",
        "result": "COUNT(*) \nFROM Has_Pet \nWHERE StuID IN \n    (SELECT StuID FROM Student WHERE Sex = 'Female')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of pets are raised by female students ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pet_age > 1  ",
        "question": "Find the number of pets whose age is older than 1 .",
        "result": "COUNT(*) FROM Pets WHERE pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of pets whose age is older than 1 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pet_age > 1  ",
        "question": "Find the number of pets who is older than 1 ?",
        "result": "COUNT(*) FROM Pets WHERE pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of pets who is older than 1 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "How many pets that are raised by female students ( with sex F ) .",
        "result": "COUNT(*) \nFROM Has_Pet \nJOIN Student ON Has_Pet.StuID = Student.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Student.Sex = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets that are raised by female students ( with sex F ) . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "How many pets are raised by female students ?",
        "result": "COUNT(DISTINCT Has_Pet.PetID)\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Student.Sex = 'Female'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets are raised by female students ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pet_age > 1  ",
        "question": "How many pets whose age is older than 1 .",
        "result": "COUNT(*) FROM Pets WHERE pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets whose age is older than 1 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pet_age > 1  ",
        "question": "How many pets who is older than 1 ?",
        "result": "COUNT(*) FROM Pets WHERE pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets who is older than 1 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID where  student.lname = \"Smith\"  ",
        "question": "How many pets are owned by students whose last name is ' Smith ' .",
        "result": "COUNT(*) FROM Pets\nWHERE PetID IN (\n  SELECT PetID FROM Has_Pet\n  WHERE StuID IN (\n    SELECT StuID FROM Student\n    WHERE LName = 'Smith'\n  )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets are owned by students whose last name is ' Smith ' . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from has_pet join student on Has_Pet.StuID = Student.StuID where  student.lname = \"Smith\"  ",
        "question": "How many pets are owned by students whose last name is ' Smith ' ?",
        "result": "COUNT(*) FROM Has_Pet \nINNER JOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.LName = 'Smith'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many pets are owned by students whose last name is ' Smith ' ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.weight > 10  ",
        "question": "Find the number of dog pets whose weight is heavier than 10 .",
        "result": "COUNT(*) \nFROM Pets \nWHERE PetType = 'dog' AND weight > 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of dog pets whose weight is heavier than 10 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.weight > 10  ",
        "question": "Find the number of dog pets have a greater weight than 10 ?",
        "result": "COUNT(*) \nFROM Pets \nWHERE PetType = 'dog' AND weight > 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of dog pets have a greater weight than 10 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.pet_age > 1  ",
        "question": "Find the number of dog pets whose age is older than 1 .",
        "result": "COUNT(*) FROM Pets WHERE PetType='dog' AND pet_age>1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of dog pets whose age is older than 1 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.pet_age > 1  ",
        "question": "Find the number of dog pets who is older than 1 ?",
        "result": "COUNT(*) FROM Pets WHERE PetType = 'dog' AND pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the number of dog pets who is older than 1 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.weight > 10  ",
        "question": "How many dog pets whose weight is heavier than 10 .",
        "result": "COUNT(*) FROM Pets WHERE PetType='dog' AND weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many dog pets whose weight is heavier than 10 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.weight > 10  ",
        "question": "How many dog pets have a greater weight than 10 ?",
        "result": "COUNT(*) FROM Pets WHERE PetType = 'dog' AND weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many dog pets have a greater weight than 10 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.pet_age > 1  ",
        "question": "How many dog pets whose age is older than 1 .",
        "result": "COUNT(*) FROM Has_Pet \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType = 'dog' AND Pets.pet_age > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many dog pets whose age is older than 1 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select count(*) from pets where  pets.pettype = \"dog\" and pets.pet_age > 1  ",
        "question": "How many dog pets who is older than 1 ?",
        "result": "COUNT(*) \nFROM Has_Pet \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE PetType = 'dog' AND pet_age > 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### How many dog pets who is older than 1 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select distinct student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name of students who do not have any pet .",
        "result": "Fname \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name of students who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select distinct student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name of students who do not own any pets ?",
        "result": "Student.Fname \nFROM Student \nWHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name of students who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select distinct student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What are the first names of every student who do not have any pet .",
        "result": "FName FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What are the first names of every student who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select distinct student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What are the first names of every student who do not own any pets ?",
        "result": "Fname\nFROM Student\nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What are the first names of every student who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name of students who do not have any pet .",
        "result": "Student.FName\nFROM Student\nWHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name of students who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name of students who do not own any pets ?",
        "result": "Fname FROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name of students who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.stuid from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the id of students who do not have any pet .",
        "result": "Student.StuID \nFROM Student \nLEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nWHERE Has_Pet.PetID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id of students who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.stuid from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the id of students who do not own any pets ?",
        "result": "Student.StuID\nFROM Student\nWHERE Student.StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id of students who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.stuid from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What are the ids of the students who do not have any pet .",
        "result": "Student.StuID \nFROM Student \nLEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nWHERE Has_Pet.StuID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What are the ids of the students who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.stuid from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What are the ids of the students who do not own any pets ?",
        "result": "Student.StuID \nFROM Student \nLEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nWHERE Has_Pet.PetID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What are the ids of the students who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from pets where  pets.weight > 10  ",
        "question": "Find the id and weight of all pets whose weight is heavier than 10 .",
        "result": "Pets.PetID, Pets.weight\nFROM Pets\nWHERE Pets.weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id and weight of all pets whose weight is heavier than 10 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from pets where  pets.weight > 10  ",
        "question": "Find the id and weight of all pets have a greater weight than 10 ?",
        "result": "Pets.PetID, Pets.weight \nFROM Pets \nWHERE Pets.weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id and weight of all pets have a greater weight than 10 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "Find the id and weight of all pets that are raised by female students ( with sex F ) .",
        "result": "Pets.PetID, Pets.weight \nFROM Pets \nINNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID \nINNER JOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.Sex = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id and weight of all pets that are raised by female students ( with sex F ) . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "Find the id and weight of all pets are raised by female students ?",
        "result": "Pets.PetID, Pets.weight\nFROM Pets\nINNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID\nINNER JOIN Student ON Has_Pet.StuID = Student.StuID\nWHERE Student.Sex = 'female'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id and weight of all pets are raised by female students ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from pets where  pets.weight > 10  ",
        "question": "What is the id and weight of every pet whose weight is heavier than 10 .",
        "result": "Pets.PetID, Pets.weight \nFROM Pets \nWHERE Pets.weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the id and weight of every pet whose weight is heavier than 10 . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from pets where  pets.weight > 10  ",
        "question": "What is the id and weight of every pet have a greater weight than 10 ?",
        "result": "Pets.PetID, Pets.weight\nFROM Pets\nWHERE Pets.weight > 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the id and weight of every pet have a greater weight than 10 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "What is the id and weight of every pet that are raised by female students ( with sex F ) .",
        "result": "Pets.PetID, Pets.weight \nFROM Pets \nINNER JOIN Has_Pet ON Has_Pet.PetID = Pets.PetID \nINNER JOIN Student ON Student.StuID = Has_Pet.StuID \nWHERE Student.Sex = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the id and weight of every pet that are raised by female students ( with sex F ) . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select pets.petid , pets.weight from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  student.sex = \"F\"  ",
        "question": "What is the id and weight of every pet are raised by female students ?",
        "result": "Pets.PetID, Pets.weight \nFROM Pets \nJOIN Has_Pet ON Has_Pet.PetID = Pets.PetID \nJOIN Student ON Student.StuID = Has_Pet.StuID \nWHERE Student.Sex = 'female'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the id and weight of every pet are raised by female students ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select has_pet.petid from has_pet join student on Has_Pet.StuID = Student.StuID where  student.age > 20  ",
        "question": "Find the id of the pet owned by student that have an age greater than 20 ?",
        "result": "Pets.PetID \nFROM \n    Pets \n    JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID \n    JOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE \n    Pets.pet_age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the id of the pet owned by student that have an age greater than 20 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select has_pet.petid from has_pet join student on Has_Pet.StuID = Student.StuID where  student.age > 20  ",
        "question": "What is the id of the pet owned by the student that have an age greater than 20 ?",
        "result": "Pets.PetID \nFROM Pets \nJOIN Has_Pet ON Pets.PetID = Has_Pet.PetID \nJOIN Student ON Has_Pet.StuID = Student.StuID \nWHERE Student.Age > 20",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the id of the pet owned by the student that have an age greater than 20 ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "Find the first name and gender of student who have cat or dog pet .",
        "result": "Student.Fname, Student.Sex \nFROM Student \nINNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who have cat or dog pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "Find the first name and gender of student who has a cat or dog as a pet ?",
        "result": "Student.Fname, Student.Sex\nFROM Student\nINNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who has a cat or dog as a pet ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"   intersect select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"dog\"  ",
        "question": "Find the first name and gender of student who have both cat and dog pets .",
        "result": "Student.Fname, Student.Sex\nFROM Student\nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nJOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType = 'cat' AND Student.StuID IN (\n    SELECT Has_Pet.StuID\n    FROM Has_Pet\n    JOIN Pets ON Has_Pet.PetID = Pets.PetID\n    WHERE Pets.PetType = 'dog'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who have both cat and dog pets . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  )   ",
        "question": "Find the first name and gender of student who do not have a cat pet .",
        "result": "Fname, Sex \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who do not have a cat pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student   except select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  ",
        "question": "Find the first name and gender of student who do not have a cat pet .",
        "result": "Fname, Sex \nFROM Student \nWHERE StuID NOT IN \n    (SELECT StuID FROM Has_Pet \n    INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID \n    WHERE PetType = 'cat');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who do not have a cat pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student   except select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  ",
        "question": "Find the first name and gender of student who do not own cat as pets ?",
        "result": "Student.Fname, Student.Sex\nFROM Student\nWHERE Student.StuID NOT IN (\n  SELECT Has_Pet.StuID\n  FROM Has_Pet\n  INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID\n  WHERE Pets.PetType = 'cat'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who do not own cat as pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name and gender of student who do not have any pet .",
        "result": "Student.Fname, Student.Sex\nFROM Student\nWHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "Find the first name and gender of student who do not own any pets ?",
        "result": "Student.Fname, Student.Sex \nFROM Student \nWHERE Student.StuID NOT IN \n(SELECT Has_Pet.StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the first name and gender of student who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "What is the first name and gender of the all the students who have cat or dog pet .",
        "result": "Fname, Sex FROM Student\nWHERE StuID IN \n(SELECT StuID FROM Has_Pet \nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE PetType = 'cat' OR PetType = 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who have cat or dog pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "What is the first name and gender of the all the students who has a cat or dog as a pet ?",
        "result": "Student.FName, Student.Sex \nFROM Student \nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who has a cat or dog as a pet ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"   intersect select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"dog\"  ",
        "question": "What is the first name and gender of the all the students who have both cat and dog pets .",
        "result": "Fname, Sex \nFROM Student \nWHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN \n                (SELECT PetID FROM Pets WHERE PetType = 'cat') \n              INTERSECT \n              SELECT StuID FROM Has_Pet WHERE PetID IN \n                (SELECT PetID FROM Pets WHERE PetType = 'dog'))",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who have both cat and dog pets . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  )   ",
        "question": "What is the first name and gender of the all the students who do not have a cat pet .",
        "result": "Fname, Sex FROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'));",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who do not have a cat pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student   except select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  ",
        "question": "What is the first name and gender of the all the students who do not have a cat pet .",
        "result": "Fname, Sex \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who do not have a cat pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student   except select student.fname , student.sex from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"  ",
        "question": "What is the first name and gender of the all the students who do not own cat as pets ?",
        "result": "Fname, Sex FROM Student \nWHERE StuID NOT IN \n(SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who do not own cat as pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What is the first name and gender of the all the students who do not have any pet .",
        "result": "Fname, Sex FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who do not have any pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select student.fname , student.sex from student where  student.stuid not in (select Student.StuID from student join has_pet on Student.StuID = Has_Pet.StuID  )   ",
        "question": "What is the first name and gender of the all the students who do not own any pets ?",
        "result": "FName, Sex \nFROM Student \nWHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the first name and gender of the all the students who do not own any pets ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "Find the average age of students who have cat or dog pet .",
        "result": "AVG(Student.Age)\nFROM Student\nINNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the average age of students who have cat or dog pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "Find the average age of students who has a cat or dog as a pet ?",
        "result": "AVG(Student.Age) \nFROM Student \nJOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nJOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the average age of students who has a cat or dog as a pet ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from student where  student.stuid in (select Has_Pet.StuID from has_pet join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"   intersect select Has_Pet.StuID from has_pet join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"dog\"   ) ",
        "question": "Find the average age of students who have both cat and dog pets .",
        "result": "AVG(Age) FROM Student WHERE StuID IN \n(SELECT StuID FROM Has_Pet WHERE PetID IN \n(SELECT PetID FROM Pets WHERE PetType = 'cat')\nINTERSECT\nSELECT StuID FROM Has_Pet WHERE PetID IN \n(SELECT PetID FROM Pets WHERE PetType = 'dog')\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### Find the average age of students who have both cat and dog pets . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "What is the average age for all students who have cat or dog pet .",
        "result": "AVG(Age) \nFROM Student \nINNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID \nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID \nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the average age for all students who have cat or dog pet . \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from has_pet join student on Has_Pet.StuID = Student.StuID join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\" or pets.pettype = \"dog\"  ",
        "question": "What is the average age for all students who has a cat or dog as a pet ?",
        "result": "AVG(Student.Age)\nFROM Student\nINNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID\nINNER JOIN Pets ON Has_Pet.PetID = Pets.PetID\nWHERE Pets.PetType IN ('cat', 'dog')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the average age for all students who has a cat or dog as a pet ? \n SELECT"
    },
    {
        "db_id": "pets_1",
        "query": "select avg(student.age) from student where  student.stuid in (select Has_Pet.StuID from has_pet join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"cat\"   intersect select Has_Pet.StuID from has_pet join pets on Has_Pet.PetID = Pets.PetID where  pets.pettype = \"dog\"   ) ",
        "question": "What is the average age for all students who have both cat and dog pets .",
        "result": "AVG(Age)\nFROM Student\nWHERE StuID IN (\n  SELECT StuID FROM Has_Pet WHERE PetID IN (\n    SELECT PetID FROM Pets WHERE PetType = 'cat'\n    INTERSECT\n    SELECT PetID FROM Pets WHERE PetType = 'dog'\n  )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Student(StuID,LName,Fname,Age,Sex,Major,Advisor,city_code)\n;# Has_Pet(StuID,PetID)\n;# Pets(PetID,PetType,pet_age,weight)\n.# \n ### What is the average age for all students who have both cat and dog pets . \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "Which model of the car whose weight is below the average weight .",
        "result": "Model \nFROM car_names \nJOIN cars_data ON car_names.MakeId = cars_data.Id \nWHERE Weight < (SELECT AVG(Weight) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which model of the car whose weight is below the average weight . \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "Which model of the car with a weight smaller than the average ?",
        "result": "Model \nFROM car_names \nINNER JOIN cars_data ON car_names.MakeId = cars_data.Id \nWHERE Weight < (SELECT AVG(Weight) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which model of the car with a weight smaller than the average ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "What is the model of the car whose weight is below the average weight .",
        "result": "Model \nFROM model_list \nWHERE ModelId IN (\n    SELECT MakeId \n    FROM car_names \n    WHERE MakeId IN (\n        SELECT Id \n        FROM car_makers \n        WHERE Id IN (\n            SELECT DISTINCT Country \n            FROM countries \n            WHERE Continent = 'Europe'\n        )\n    )\n) AND ModelId IN (\n    SELECT Id \n    FROM cars_data \n    WHERE Weight < (\n        SELECT AVG(Weight) \n        FROM cars_data\n    )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the model of the car whose weight is below the average weight . \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "What is the model of the car with a weight smaller than the average ?",
        "result": "model_list.Model\nFROM model_list\nINNER JOIN car_names ON model_list.ModelId = car_names.Model\nINNER JOIN cars_data ON car_names.MakeId = cars_data.Id\nWHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the model of the car with a weight smaller than the average ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct car_makers.maker from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"france\"  ",
        "question": "Find the name of the makers are there in france ?",
        "result": "Maker FROM car_makers WHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Find the name of the makers are there in france ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct car_makers.maker from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"france\"  ",
        "question": "What is the name of the different car makers are there in france ?",
        "result": "Maker FROM car_makers WHERE Country = 'france'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the name of the different car makers are there in france ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "Which distinct car models are produced in the usa ?",
        "result": "DISTINCT Model\nFROM model_list\nINNER JOIN car_names ON model_list.ModelId = car_names.ModelId\nINNER JOIN car_makers ON car_names.MakeId = car_makers.Id\nWHERE car_makers.Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which distinct car models are produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "Which distinct car models produced in the usa ?",
        "result": "DISTINCT Model \nFROM model_list \nINNER JOIN car_makers ON model_list.Maker = car_makers.Maker \nWHERE car_makers.Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which distinct car models produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "Which distinct car models were produced by the maker with full name American Motor Company ?",
        "result": "DISTINCT model_list.Model \nFROM car_makers \nJOIN model_list ON car_makers.Maker = model_list.Maker \nWHERE car_makers.FullName = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which distinct car models were produced by the maker with full name American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct model_list.model from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "Which distinct car models created by the car maker American Motor Company ?",
        "result": "DISTINCT Model\nFROM model_list\nWHERE Maker = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which distinct car models created by the car maker American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname having  count(*) >= 3 ",
        "question": "What is the name of the country with at least 3 manufacturers ?",
        "result": "countries.CountryName \nFROM \ncountries \nINNER JOIN car_makers ON countries.CountryId = car_makers.Country \nGROUP BY countries.CountryId \nHAVING COUNT(DISTINCT car_makers.Id) >= 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the name of the country with at least 3 manufacturers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname from countries   except select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  ",
        "question": "What is the name of the country where there is not a single car maker ?",
        "result": "CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the name of the country where there is not a single car maker ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname from countries   except select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  ",
        "question": "What is the name of the country with no car makers ?",
        "result": "countries.CountryName\nFROM countries\nLEFT JOIN car_makers ON countries.CountryId = car_makers.Country\nWHERE car_makers.Id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the name of the country with no car makers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the accelerate of the car with 4 cylinders ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the accelerate of the car with 4 cylinders ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the accelerate of the car with horsepower more than 150 ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the accelerate of the car with a horsepower greater than 150 ?",
        "result": "Accelerate FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.year < 1980  ",
        "question": "What is the accelerate of the car before 1980 ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.year < 1980  ",
        "question": "What is the accelerate of the car produced before 1980 ?",
        "result": "Accelerate FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the accelerate of the car have more than 4 cylinders ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the accelerate of the car with more than 4 cylinders ?",
        "result": "Accelerate \nFROM cars_data \nWHERE Cylinders > 4 \nORDER BY Accelerate DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.year = 1980  ",
        "question": "What is the accelerate of the car were produced in 1980 ?",
        "result": "Accelerate FROM cars_data WHERE Year = 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the accelerate of the car with the largest accelerate ?",
        "result": "MAX(Accelerate) FROM cars_data",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the accelerate of the car with the greatest accelerate ?",
        "result": "Accelerate \nFROM cars_data \nORDER BY Accelerate DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data   order by cars_data.accelerate asc limit 1 ",
        "question": "What is the accelerate of the car with the least accelerate have ?",
        "result": "MIN(Accelerate) FROM cars_data;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with the least accelerate have ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the accelerate of the car with the largest horsepower ?",
        "result": "Accelerate FROM cars_data \nWHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.accelerate from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the accelerate of the car has over 6 cylinders ?",
        "result": "Accelerate FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the accelerate of the car has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = \"1970\"  ",
        "question": "How many car makers that produced some cars in the year of 1970 ?",
        "result": "COUNT(DISTINCT car_makers.Id) \nFROM car_makers \nINNER JOIN car_names ON car_makers.Id = car_names.MakeId \nINNER JOIN model_list ON car_names.Model = model_list.Model \nINNER JOIN cars_data ON model_list.ModelId = cars_data.Id \nWHERE cars_data.Year = 1970",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car makers that produced some cars in the year of 1970 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = \"1970\"  ",
        "question": "How many car makers who produced a car in 1970 ?",
        "result": "COUNT(DISTINCT Country) FROM car_makers \nINNER JOIN cars_data ON car_makers.Id = cars_data.Id \nWHERE Year = 1970",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car makers who produced a car in 1970 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980  ",
        "question": "How many car models are the produced after 1980 ?",
        "result": "COUNT(*) FROM model_list\nWHERE Maker IN (SELECT Maker FROM car_makers WHERE Country IN \n                (SELECT CountryName FROM countries WHERE Continent = 'North America')) \nAND ModelId IN (SELECT MakeId FROM car_names) \nAND ModelId IN (SELECT Id FROM cars_data WHERE Year > 1980)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models are the produced after 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "How many car models were produced by the maker with full name American Motor Company ?",
        "result": "COUNT(model_list.ModelId) \nFROM model_list \nJOIN car_makers ON model_list.Maker = car_makers.Maker AND car_makers.FullName = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models were produced by the maker with full name American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "How many car models created by the car maker American Motor Company ?",
        "result": "COUNT(*) FROM model_list WHERE Maker = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models created by the car maker American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980  ",
        "question": "What is the count of the car models are the produced after 1980 ?",
        "result": "COUNT(*) FROM model_list \nINNER JOIN cars_data ON model_list.ModelId = cars_data.Id \nWHERE cars_data.Year > 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the count of the car models are the produced after 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "What is the count of the car models were produced by the maker with full name American Motor Company ?",
        "result": "COUNT(*) FROM model_list WHERE Maker = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the count of the car models were produced by the maker with full name American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id where  car_makers.fullname = \"American Motor Company\"  ",
        "question": "What is the count of the car models created by the car maker American Motor Company ?",
        "result": "COUNT(*) FROM model_list \nWHERE Maker = 'American Motor Company'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the count of the car models created by the car maker American Motor Company ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars make amc hornet sportabout (sw) ?",
        "result": "AVG(MPG) \nFROM cars_data \nINNER JOIN car_names ON cars_data.Id = car_names.MakeId \nWHERE car_names.Make = 'amc hornet sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars on 1974 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars in 1974 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars with horsepower more than 150 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars with a horsepower greater than 150 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars before 1980 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars produced before 1980 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars have more than 4 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars with more than 4 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars were produced in 1980 ?",
        "result": "AVG(MPG) \nFROM cars_data \nWHERE Year=1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the average miles per gallon ( mpg ) of the cars has over 6 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon ( mpg ) of the cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the average miles per gallon of all the cars make amc hornet sportabout (sw) ?",
        "result": "AVG(MPG) FROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nWHERE car_names.Model = 'Hornet Sportabout (sw)' AND car_names.Maker = 'AMC'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average miles per gallon of all the cars on 1974 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average miles per gallon of all the cars in 1974 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average miles per gallon of all the cars with horsepower more than 150 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average miles per gallon of all the cars with a horsepower greater than 150 ?",
        "result": "AVG(MPG) \nFROM cars_data \nWHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the average miles per gallon of all the cars before 1980 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year < 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the average miles per gallon of all the cars produced before 1980 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average miles per gallon of all the cars have more than 4 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average miles per gallon of all the cars with more than 4 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the average miles per gallon of all the cars were produced in 1980 ?",
        "result": "AVG(MPG) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.mpg) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the average miles per gallon of all the cars has over 6 cylinders ?",
        "result": "AVG(MPG) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average miles per gallon of all the cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   intersect select cars_data.weight from cars_data where  cars_data.cylinders = 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Edispl = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   intersect select cars_data.weight from cars_data where  cars_data.cylinders = 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders IN (4,8) AND Cylinders = 8",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with horsepower more than 150 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with a horsepower greater than 150 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Horsepower>150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.year < 1980   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders produced before 1980 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.cylinders > 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders have more than 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders > 4 AND Cylinders = 8",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.cylinders > 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with more than 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders > 4 AND Cylinders = 8;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.year = 1980   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders were produced in 1980 ?",
        "result": "MIN(Weight) FROM cars_data\nWHERE Cylinders = 8 AND Year = 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.weight > 3000 and cars_data.weight < 4000   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders weighing no less than 3000 and no more than 4000 ?",
        "result": "MIN(Weight) \nFROM cars_data \nWHERE Cylinders = 8 \nAND Weight BETWEEN 3000 AND 4000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders weighing no less than 3000 and no more than 4000 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with the largest accelerate ?",
        "result": "MIN(Weight) FROM cars_data \nWHERE Cylinders = 8 AND Accelerate = (SELECT MAX(Accelerate) FROM cars_data WHERE Cylinders = 8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with the greatest accelerate ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Accelerate = (SELECT MAX(Accelerate) FROM cars_data WHERE Cylinders = 8);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.accelerate asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders does the version with least accelerate have ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Accelerate = (SELECT MIN(Accelerate) FROM cars_data WHERE Cylinders=8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders does the version with least accelerate have ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with the largest horsepower ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Horsepower=(SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders=8);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders with the most horsepower ?",
        "result": "MIN(Weight) \nFROM cars_data \nWHERE Cylinders = 8 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.cylinders > 6   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders has over 6 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders > 6 AND Cylinders < 8",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 or cars_data.year < 1980   order by cars_data.weight asc limit 1 ",
        "question": "What is the smallest weight of the car produced with 8 cylinders or produced before 1980 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year < 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the smallest weight of the car produced with 8 cylinders or produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   intersect select cars_data.weight from cars_data where  cars_data.cylinders = 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Id IN \n (SELECT Id FROM cars_data WHERE Cylinders = 4)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   intersect select cars_data.weight from cars_data where  cars_data.cylinders = 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ?",
        "result": "MIN(Weight) FROM cars_data \nWHERE Cylinders = 8 AND Id IN \n(SELECT Id FROM cars_data WHERE Cylinders = 4)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with horsepower more than 150 ?",
        "result": "MIN(Weight) FROM cars_data \nWHERE Cylinders = 8 AND Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with a horsepower greater than 150 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Horsepower>150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.year < 1980   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced before 1980 ?",
        "result": "MIN(Weight) \nFROM cars_data \nWHERE Cylinders = 8 \nAND Year < 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.cylinders > 4   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with more than 4 cylinders ?",
        "result": "MIN(Weight) \nFROM cars_data \nWHERE Cylinders = 8 AND Cylinders > 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8 and cars_data.weight > 3000 and cars_data.weight < 4000   order by cars_data.weight asc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced weighing no less than 3000 and no more than 4000 ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Weight >= 3000 AND Weight <= 4000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced weighing no less than 3000 and no more than 4000 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with the largest accelerate ?",
        "result": "MIN(Weight) \nFROM cars_data \nWHERE Cylinders = 8 \nAND Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.accelerate desc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with the greatest accelerate ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Accelerate = (SELECT MAX(Accelerate) FROM cars_data WHERE Cylinders = 8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with the largest horsepower ?",
        "result": "MIN(Weight) FROM cars_data \nWHERE Cylinders = 8 AND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders = 8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.weight from cars_data where  cars_data.cylinders = 8   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the minimum weight of the car with 8 cylinders produced with the most horsepower ?",
        "result": "MIN(Weight) FROM cars_data WHERE Cylinders=8 AND Horsepower=(SELECT MAX(Horsepower) FROM cars_data WHERE Cylinders=8)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the minimum weight of the car with 8 cylinders produced with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) > 2 ",
        "question": "What are the names and ids of all countries has more than 2 car makers ?",
        "result": "countries.CountryId, countries.CountryName \n FROM countries \n JOIN car_makers ON countries.CountryId = car_makers.Country \n GROUP BY countries.CountryId \n HAVING COUNT(DISTINCT car_makers.Id) > 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all countries has more than 2 car makers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) > 2 ",
        "question": "What are the names and ids of all countries with more than 2 car makers ?",
        "result": "countries.CountryId, countries.CountryName \nFROM countries \nINNER JOIN car_makers ON countries.CountryId = car_makers.Country \nGROUP BY countries.CountryId \nHAVING COUNT(DISTINCT car_makers.Id) > 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all countries with more than 2 car makers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname , countries.countryid from countries   except select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId  ",
        "question": "What are the names and ids of all countries where there is not a single car maker ?",
        "result": "countries.CountryId, countries.CountryName \nFROM countries \nLEFT JOIN car_makers ON countries.CountryName = car_makers.Country \nWHERE car_makers.Id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all countries where there is not a single car maker ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname , countries.countryid from countries   except select countries.countryname , countries.countryid from car_makers join countries on car_makers.Country = countries.CountryId  ",
        "question": "What are the names and ids of all countries with no car makers ?",
        "result": "countries.CountryId, countries.CountryName \nFROM countries \nLEFT JOIN car_makers \nON countries.CountryName = car_makers.Country \nWHERE car_makers.Id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all countries with no car makers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the number of the cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*) \nFROM car_makers \nJOIN model_list ON car_makers.Id = model_list.Maker \nJOIN car_names ON model_list.ModelId = car_names.Model \nWHERE Maker = \"amc\" AND Model = \"hornet sportabout (sw)\"",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of the cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of the cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of the cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of the cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of the cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of the cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the number of the cars have more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the number of the cars with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the number of the cars were produced in 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the number of the cars has over 6 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of the cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the number of cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*) FROM car_names \nJOIN model_list ON car_names.Model = model_list.Model\nJOIN car_makers ON car_makers.Id = model_list.Maker\nWHERE car_names.Make = 'amc' AND car_makers.Maker = 'hornet sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year=1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the number of cars have more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the number of cars with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the number of cars were produced in 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the number of cars has over 6 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the average horsepower of the cars make amc hornet sportabout (sw) ?",
        "result": "AVG(Horsepower) \nFROM cars_data \nWHERE Id = (SELECT MakeId FROM car_names WHERE Model = 'Hornet Sportabout (sw)' AND Maker = 'AMC')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the average horsepower of the cars with 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the average horsepower of the cars with 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders=4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average horsepower of the cars on 1974 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average horsepower of the cars in 1974 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average horsepower of the cars with horsepower more than 150 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average horsepower of the cars with a horsepower greater than 150 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average horsepower of the cars have more than 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average horsepower of the cars with more than 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the average horsepower of the cars were produced in 1980 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Year=1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the average horsepower of the cars has over 6 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower of the cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the average horsepower for all cars make amc hornet sportabout (sw) ?",
        "result": "AVG(Horsepower) FROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nJOIN model_list ON car_names.Model = model_list.Model \nJOIN car_makers ON model_list.Maker = car_makers.Maker \nWHERE car_makers.FullName = 'AMC Hornet Sportabout (sw)';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the average horsepower for all cars with 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the average horsepower for all cars with 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average horsepower for all cars on 1974 ?",
        "result": "AVG(Horsepower) \nFROM cars_data \nWHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the average horsepower for all cars in 1974 ?",
        "result": "AVG(Horsepower) \nFROM cars_data \nWHERE Year=1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average horsepower for all cars with horsepower more than 150 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the average horsepower for all cars with a horsepower greater than 150 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average horsepower for all cars have more than 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders > 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the average horsepower for all cars with more than 4 cylinders ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Cylinders > 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the average horsepower for all cars were produced in 1980 ?",
        "result": "AVG(Horsepower) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select avg(cars_data.horsepower) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the average horsepower for all cars has over 6 cylinders ?",
        "result": "AVG(Horsepower) \nFROM cars_data \nWHERE Cylinders > 6",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the average horsepower for all cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "Which model with a weight smaller than the average ?",
        "result": "Model\nFROM model_list\nWHERE ModelId IN (\n    SELECT MakeId\n    FROM car_names\n    JOIN cars_data ON car_names.Model = cars_data.Id\n    WHERE Weight < (\n        SELECT AVG(Weight)\n        FROM cars_data\n    )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### Which model with a weight smaller than the average ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_names.model from cars_data join car_names on cars_data.Id = car_names.MakeId where  cars_data.weight < (select avg(cars_data.Weight) from cars_data  )  ",
        "question": "What model with a weight smaller than the average ?",
        "result": "Model \nFROM model_list \nWHERE ModelId IN (\n    SELECT MakeId \n    FROM car_names \n    WHERE MakeId IN (\n        SELECT Id \n        FROM car_makers \n        WHERE Id IN (\n            SELECT DISTINCT Maker \n            FROM cars_data \n            WHERE Weight < (\n                SELECT AVG(Weight) \n                FROM cars_data\n            )\n        )\n    )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What model with a weight smaller than the average ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "How many cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*)\nFROM car_makers cm\nJOIN model_list ml ON cm.Id = ml.Maker\nJOIN car_names cn ON ml.ModelId = cn.Model\nJOIN cars_data cd ON cn.MakeId = cd.Id\nWHERE cm.Maker = 'amc' AND ml.Model = 'hornet sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "How many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "How many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "How many cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year=1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "How many cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "How many cars with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "How many cars with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "How many cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "How many cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1980  ",
        "question": "How many cars were produced in 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 6  ",
        "question": "How many cars has over 6 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the number of cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*) FROM car_names\nINNER JOIN model_list ON car_names.Model = model_list.Model\nINNER JOIN car_makers ON car_names.MakeId = car_makers.Id\nWHERE Maker = 'AMC' AND Model = 'Hornet Sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the number of cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "What is the number of cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the number of cars with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the number of cars with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "What is the number of cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1980  ",
        "question": "What is the number of cars were produced in 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the number of cars has over 6 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "how many cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*) FROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nWHERE car_names.Model = 'Hornet Sportabout (sw)' AND car_names.Maker = 'AMC'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "how many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "how many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "how many cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "how many cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "how many cars with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "how many cars with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "how many cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "how many cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "how many cars have more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "how many cars with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 6  ",
        "question": "how many cars has over 6 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### how many cars has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980  ",
        "question": "How many car models are the produced after 1980 ?",
        "result": "COUNT(*) FROM model_list \nINNER JOIN cars_data ON model_list.ModelId = cars_data.Id \nWHERE cars_data.Year > 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models are the produced after 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "How many car models are produced in the usa ?",
        "result": "COUNT(*) FROM model_list \nWHERE Maker IN (SELECT Maker FROM car_makers WHERE Country = 'USA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models are produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "How many car models produced in the usa ?",
        "result": "COUNT(*) FROM model_list \nWHERE Maker IN (SELECT Maker FROM car_makers WHERE Country = 'USA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many car models produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model where  cars_data.year > 1980  ",
        "question": "What is the number of car models are the produced after 1980 ?",
        "result": "COUNT(*) FROM model_list\nWHERE Maker IN (SELECT Maker FROM car_makers WHERE Country IN (SELECT CountryName FROM countries WHERE Continent='Europe'))\nAND ModelId IN (SELECT MakeId FROM car_names)\nAND MakeId IN (SELECT Id FROM cars_data WHERE Year > 1980)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of car models are the produced after 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "What is the number of car models are produced in the usa ?",
        "result": "COUNT(*) \nFROM model_list \nWHERE Maker IN (SELECT Maker FROM car_makers WHERE Country = 'usa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of car models are produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from model_list join car_makers on model_list.Maker = car_makers.Id join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"usa\"  ",
        "question": "What is the number of car models produced in the usa ?",
        "result": "COUNT(*) FROM model_list WHERE Maker IN (SELECT Maker FROM car_makers WHERE Country = 'usa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of car models produced in the usa ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_makers.fullname , car_makers.id from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = \"1970\"  ",
        "question": "What are the names and ids of all makers that produced some cars in the year of 1970 ?",
        "result": "Id, Maker\nFROM car_makers\nWHERE Id IN (\n    SELECT MakeId\n    FROM car_names\n    JOIN cars_data ON car_names.Model = cars_data.Id\n    WHERE Year = 1970\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all makers that produced some cars in the year of 1970 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_makers.fullname , car_makers.id from cars_data join car_names on cars_data.Id = car_names.MakeId join model_list on car_names.Model = model_list.Model join car_makers on model_list.Maker = car_makers.Id where  cars_data.year = \"1970\"  ",
        "question": "What are the names and ids of all makers who produced a car in 1970 ?",
        "result": "car_makers.Id, car_makers.Maker\nFROM car_makers\nINNER JOIN car_names ON car_makers.Id = car_names.MakeId\nINNER JOIN model_list ON car_names.Model = model_list.Model\nINNER JOIN cars_data ON car_names.Make = cars_data.Id\nWHERE cars_data.Year = 1970;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all makers who produced a car in 1970 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select car_makers.fullname , car_makers.id from car_makers join countries on car_makers.Country = countries.CountryId where  countries.countryname = \"france\"  ",
        "question": "What are the names and ids of all makers are there in france ?",
        "result": "Id, Maker FROM car_makers WHERE Country = 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names and ids of all makers are there in france ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.cylinders = 4  ",
        "question": "In which years cars were produced with 4 cylinders ?",
        "result": "Year FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.cylinders = 4  ",
        "question": "In which years cars were produced with 4 cylinders ?",
        "result": "Year FROM cars_data WHERE Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.year = 1974  ",
        "question": "In which years cars were produced on 1974 ?",
        "result": "Year FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.year = 1974  ",
        "question": "In which years cars were produced in 1974 ?",
        "result": "Year\nFROM cars_data\nWHERE Year = 1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.horsepower > 150  ",
        "question": "In which years cars were produced with horsepower more than 150 ?",
        "result": "Year \nFROM cars_data \nWHERE Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.horsepower > 150  ",
        "question": "In which years cars were produced with a horsepower greater than 150 ?",
        "result": "Year \nFROM cars_data \nWHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.cylinders > 4  ",
        "question": "In which years cars were produced with more than 4 cylinders ?",
        "result": "Year FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data   order by cars_data.accelerate desc limit 1 ",
        "question": "In which years cars were produced with the largest accelerate ?",
        "result": "Year\nFROM cars_data\nWHERE Accelerate = (\n    SELECT MAX(Accelerate) \n    FROM cars_data\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data   order by cars_data.accelerate desc limit 1 ",
        "question": "In which years cars were produced with the greatest accelerate ?",
        "result": "Year \nFROM cars_data \nWHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "In which years cars were produced with the largest horsepower ?",
        "result": "Year\nFROM cars_data\nWHERE Horsepower = (\n    SELECT MAX(Horsepower)\n    FROM cars_data\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "In which years cars were produced with the most horsepower ?",
        "result": "Year FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### In which years cars were produced with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.cylinders = 4  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ?",
        "result": "DISTINCT Year FROM cars_data\nWHERE Weight < 4000 AND Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.cylinders = 4  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ?",
        "result": "Year FROM cars_data WHERE Weight < 4000 AND Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.year = 1974  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and on 1974 ?",
        "result": "Year \nFROM cars_data \nWHERE Weight < 4000 AND Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.year = 1974  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and in 1974 ?",
        "result": "Year FROM cars_data WHERE Weight < 4000 AND Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.horsepower > 150  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with horsepower more than 150 ?",
        "result": "Year FROM cars_data\nWHERE Weight < 4000 AND Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.horsepower > 150  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with a horsepower greater than 150 ?",
        "result": "Year FROM cars_data \nWHERE Weight < 4000 AND Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000 and cars_data.cylinders > 4  ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with more than 4 cylinders ?",
        "result": "DISTINCT Year \nFROM cars_data \nWHERE Weight < 4000 AND Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000   order by cars_data.accelerate desc limit 1 ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with the largest accelerate ?",
        "result": "DISTINCT Year FROM cars_data \nWHERE Weight < 4000 \nORDER BY Accelerate DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000   order by cars_data.accelerate desc limit 1 ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with the greatest accelerate ?",
        "result": "Year \nFROM cars_data \nWHERE Weight < 4000 \nORDER BY Accelerate DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000   order by cars_data.horsepower desc limit 1 ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with the largest horsepower ?",
        "result": "Year FROM cars_data WHERE Weight < 4000 ORDER BY Horsepower DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select distinct cars_data.year from cars_data where  cars_data.weight < 4000   order by cars_data.horsepower desc limit 1 ",
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and with the most horsepower ?",
        "result": "DISTINCT Year \nFROM cars_data \nWHERE Weight < 4000 \nAND Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Weight < 4000)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the different years in which there were cars produced that weighed less than 4000 and with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the horsepower of the car make amc hornet sportabout (sw) ?",
        "result": "cars_data.Horsepower\nFROM \ncars_data\nJOIN car_names ON cars_data.Id = car_names.MakeId\nWHERE\ncar_names.Model = 'hornet sportabout (sw)'\nAND car_names.Maker = 'amc'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the horsepower of the car with 4 cylinders ?",
        "result": "Horsepower \nFROM \ncars_data \nWHERE \nCylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the horsepower of the car with 4 cylinders ?",
        "result": "Horsepower FROM cars_data WHERE Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1974  ",
        "question": "What is the horsepower of the car on 1974 ?",
        "result": "Horsepower FROM cars_data WHERE Year=1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1974  ",
        "question": "What is the horsepower of the car in 1974 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the horsepower of the car with horsepower more than 150 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the horsepower of the car with a horsepower greater than 150 ?",
        "result": "Horsepower FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year < 1980  ",
        "question": "What is the horsepower of the car before 1980 ?",
        "result": "Horsepower FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year < 1980  ",
        "question": "What is the horsepower of the car produced before 1980 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Year < 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the horsepower of the car have more than 4 cylinders ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the horsepower of the car with more than 4 cylinders ?",
        "result": "MAX(Horsepower) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1980  ",
        "question": "What is the horsepower of the car were produced in 1980 ?",
        "result": "Horsepower FROM cars_data WHERE Year=1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.accelerate asc limit 1 ",
        "question": "What is the horsepower of the car with the least accelerate have ?",
        "result": "cars_data.Horsepower \nFROM cars_data \nWHERE cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the least accelerate have ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the horsepower of the car with the largest horsepower ?",
        "result": "MAX(Horsepower) FROM cars_data;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the horsepower of the car with the most horsepower ?",
        "result": "MAX(Horsepower) FROM cars_data",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the horsepower of the car has over 6 cylinders ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Cylinders > 6",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "What is the horsepower of the car make amc hornet sportabout (sw) ?",
        "result": "cars_data.Horsepower\nFROM car_makers\nJOIN model_list ON car_makers.Id = model_list.Maker\nJOIN car_names ON model_list.ModelId = car_names.Model\nJOIN cars_data ON car_names.MakeId = cars_data.Id\nWHERE car_makers.Maker = 'amc' AND car_names.Model = 'hornet sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the horsepower of the car with 4 cylinders ?",
        "result": "Horsepower FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders = 4  ",
        "question": "What is the horsepower of the car with 4 cylinders ?",
        "result": "Horsepower \nFROM \ncars_data \nWHERE \nCylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1974  ",
        "question": "What is the horsepower of the car on 1974 ?",
        "result": "Horsepower FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1974  ",
        "question": "What is the horsepower of the car in 1974 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Year = 1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the horsepower of the car with horsepower more than 150 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.horsepower > 150  ",
        "question": "What is the horsepower of the car with a horsepower greater than 150 ?",
        "result": "Horsepower FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year < 1980  ",
        "question": "What is the horsepower of the car before 1980 ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Year < 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year < 1980  ",
        "question": "What is the horsepower of the car produced before 1980 ?",
        "result": "Horsepower FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the horsepower of the car have more than 4 cylinders ?",
        "result": "Horsepower FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 4  ",
        "question": "What is the horsepower of the car with more than 4 cylinders ?",
        "result": "Horsepower \nFROM cars_data \nWHERE Cylinders > 4 \nORDER BY Horsepower DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.year = 1980  ",
        "question": "What is the horsepower of the car were produced in 1980 ?",
        "result": "Horsepower FROM cars_data WHERE Year=1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.accelerate asc limit 1 ",
        "question": "What is the horsepower of the car with the least accelerate have ?",
        "result": "cars_data.Horsepower \nFROM cars_data \nWHERE Accelerate = (SELECT MIN(Accelerate) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the least accelerate have ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the horsepower of the car with the largest horsepower ?",
        "result": "MAX(Horsepower) FROM cars_data",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data   order by cars_data.horsepower desc limit 1 ",
        "question": "What is the horsepower of the car with the most horsepower ?",
        "result": "Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car with the most horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.horsepower from cars_data where  cars_data.cylinders > 6  ",
        "question": "What is the horsepower of the car has over 6 cylinders ?",
        "result": "Horsepower FROM cars_data WHERE Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the horsepower of the car has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "For model volvo , how many cylinders does the car make amc hornet sportabout (sw) ?",
        "result": "cars_data.Cylinders \nFROM car_names \nJOIN model_list ON car_names.Model = model_list.Model \nJOIN car_makers ON car_names.MakeId = car_makers.Id \nJOIN cars_data ON car_names.MakeId = cars_data.Id \nWHERE car_makers.Maker = 'AMC' \nAND model_list.Model = 'Hornet Sportabout (sw)' \nAND car_makers.FullName LIKE '%Volvo%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.cylinders = 4  ",
        "question": "For model volvo , how many cylinders does the car with 4 cylinders ?",
        "result": "cars_data.Cylinders\nFROM cars_data\nJOIN car_names ON cars_data.Id = car_names.MakeId\nJOIN model_list ON car_names.Model = model_list.Model\nJOIN car_makers ON model_list.Maker = car_makers.Maker\nWHERE car_makers.FullName LIKE '%Volvo%' AND cars_data.Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.cylinders = 4  ",
        "question": "For model volvo , how many cylinders does the car with 4 cylinders ?",
        "result": "cars_data.Cylinders \nFROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nJOIN model_list ON car_names.Model = model_list.Model \nJOIN car_makers ON model_list.Maker = car_makers.Maker \nWHERE car_makers.FullName LIKE '%volvo%' AND cars_data.Cylinders = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.horsepower > 150  ",
        "question": "For model volvo , how many cylinders does the car with horsepower more than 150 ?",
        "result": "cars_data.Cylinders FROM cars_data \nJOIN car_names ON cars_data.Id = car_names.MakeId \nJOIN model_list ON car_names.Model = model_list.Model \nJOIN car_makers ON model_list.Maker = car_makers.Maker \nWHERE car_makers.FullName = 'Volvo' AND cars_data.Horsepower > 150",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.horsepower > 150  ",
        "question": "For model volvo , how many cylinders does the car with a horsepower greater than 150 ?",
        "result": "Cylinders \nFROM cars_data \nWHERE Horsepower > 150 \nAND Id IN (\n    SELECT Id \n    FROM car_names \n    WHERE Model = 'volvo'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.year < 1980  ",
        "question": "For model volvo , how many cylinders does the car before 1980 ?",
        "result": "Cylinders \nFROM cars_data \nWHERE Year < 1980 \nAND Id IN (\n    SELECT Id \n    FROM car_names \n    WHERE Model = 'volvo'\n) \nORDER BY Year DESC \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.year < 1980  ",
        "question": "For model volvo , how many cylinders does the car produced before 1980 ?",
        "result": "cars_data.Cylinders\nFROM cars_data\nINNER JOIN car_names ON cars_data.Id = car_names.MakeId\nINNER JOIN model_list ON car_names.Model = model_list.Model\nWHERE model_list.Maker = 'volvo' AND cars_data.Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.cylinders > 4  ",
        "question": "For model volvo , how many cylinders does the car have more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data \nWHERE ModelId IN (\n    SELECT ModelId FROM model_list WHERE Maker = 'volvo'\n) AND Cylinders > 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.cylinders > 4  ",
        "question": "For model volvo , how many cylinders does the car with more than 4 cylinders ?",
        "result": "MAX(Cylinders) FROM cars_data \nINNER JOIN car_names ON cars_data.Id = car_names.MakeId \nINNER JOIN model_list ON car_names.Model = model_list.Model \nINNER JOIN car_makers ON model_list.Maker = car_makers.Maker \nWHERE car_makers.FullName LIKE '%Volvo%' AND Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.year = 1980  ",
        "question": "For model volvo , how many cylinders does the car were produced in 1980 ?",
        "result": "cars_data.Cylinders \nFROM \ncars_data \nINNER JOIN \ncar_names \nON cars_data.Id = car_names.MakeId \nINNER JOIN \nmodel_list \nON car_names.Model = model_list.Model \nWHERE \nmodel_list.Maker = 'volvo' \nAND cars_data.Year = 1980",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\"   order by cars_data.accelerate desc limit 1 ",
        "question": "For model volvo , how many cylinders does the car with the largest accelerate ?",
        "result": "cars_data.Cylinders \nFROM \n    cars_data \nINNER JOIN \n    car_names ON cars_data.Id = car_names.MakeId \nINNER JOIN \n    model_list ON car_names.Model = model_list.Model \nWHERE \n    model_list.Maker = 'volvo' AND cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with the largest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\"   order by cars_data.accelerate desc limit 1 ",
        "question": "For model volvo , how many cylinders does the car with the greatest accelerate ?",
        "result": "cars_data.Cylinders\nFROM cars_data\nINNER JOIN car_names ON cars_data.Id = car_names.MakeId\nWHERE car_names.Model = 'volvo'\nORDER BY cars_data.Accelerate DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with the greatest accelerate ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\"   order by cars_data.horsepower desc limit 1 ",
        "question": "For model volvo , how many cylinders does the car with the largest horsepower ?",
        "result": "MAX(cars_data.Horsepower), cars_data.Cylinders\nFROM cars_data\nINNER JOIN car_names ON cars_data.Id = car_names.MakeId\nINNER JOIN model_list ON car_names.Model = model_list.Model\nINNER JOIN car_makers ON model_list.Maker = car_makers.Maker\nWHERE car_makers.FullName = 'Volvo'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car with the largest horsepower ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.cylinders > 6  ",
        "question": "For model volvo , how many cylinders does the car has over 6 cylinders ?",
        "result": "COUNT(*) \nFROM cars_data \nWHERE ModelId IN (\n  SELECT ModelId FROM model_list WHERE Maker = 'volvo'\n) AND Cylinders > 6;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For model volvo , how many cylinders does the car has over 6 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" and cars_data.year = 1974  ",
        "question": "For a volvo model , how many cylinders on 1974 ?",
        "result": "Cylinders \nFROM cars_data \nWHERE Id IN (\n  SELECT Id \n  FROM car_names \n  WHERE Model = 'Volvo'\n) \nAND Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For a volvo model , how many cylinders on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.cylinders from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.model = \"volvo\" or cars_data.year < 1980  ",
        "question": "For a volvo model , how many cylinders or produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data \nWHERE MakeId IN (SELECT Id FROM car_names WHERE Model = 'volvo') \nAND Cylinders > 0 \nAND Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### For a volvo model , how many cylinders or produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  )   ",
        "question": "How many cars have a larger accelerate than the car with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data\nWHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Cylinders = 4 ORDER BY Accelerate DESC LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have a larger accelerate than the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  )   ",
        "question": "How many cars have a larger accelerate than the car with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Cylinders = 4 ORDER BY Accelerate DESC LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have a larger accelerate than the car with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  )   ",
        "question": "How many cars have a larger accelerate than the car with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data\nWHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower > 150 ORDER BY Accelerate DESC LIMIT 1);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have a larger accelerate than the car with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  )   ",
        "question": "How many cars have a larger accelerate than the car with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower > 150 ORDER BY Horsepower DESC LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have a larger accelerate than the car with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders > 4  )   ",
        "question": "How many cars have a larger accelerate than the car with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data\nWHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Cylinders > 4)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have a larger accelerate than the car with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  )   ",
        "question": "What is the number of cars with a greater accelerate than the one with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data \nWHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Cylinders = 4 LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a greater accelerate than the one with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders = 4  )   ",
        "question": "What is the number of cars with a greater accelerate than the one with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data\nWHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Cylinders = 4);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a greater accelerate than the one with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  )   ",
        "question": "What is the number of cars with a greater accelerate than the one with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower > 150 ORDER BY Accelerate DESC LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a greater accelerate than the one with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.horsepower > 150  )   ",
        "question": "What is the number of cars with a greater accelerate than the one with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower > 150 ORDER BY Accelerate DESC LIMIT 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a greater accelerate than the one with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.accelerate > (select cars_data.accelerate from cars_data where  cars_data.cylinders > 4  )   ",
        "question": "What is the number of cars with a greater accelerate than the one with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Cylinders > 4)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of cars with a greater accelerate than the one with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) >= 1 ",
        "question": "How many countries with at least one car maker ?",
        "result": "COUNT(DISTINCT countries.CountryId)\nFROM countries\nJOIN car_makers ON countries.CountryName = car_makers.Country;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many countries with at least one car maker ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryid having  count(*) >= 1 ",
        "question": "What is the number of countries with at least one car maker ?",
        "result": "COUNT(DISTINCT countries.CountryId) \nFROM countries \nINNER JOIN car_makers ON countries.CountryName = car_makers.Country",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the number of countries with at least one car maker ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data join car_names on cars_data.Id = car_names.MakeId where  car_names.make = \"amc hornet sportabout (sw)\"  ",
        "question": "How many cars make amc hornet sportabout (sw) ?",
        "result": "COUNT(*) \nFROM car_makers cm \nJOIN model_list ml ON cm.Id = ml.Maker \nJOIN car_names cn ON ml.ModelId = cn.Model \nWHERE cn.Make = 'amc hornet sportabout (sw)'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars make amc hornet sportabout (sw) ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "How many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders = 4  ",
        "question": "How many cars with 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders=4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "How many cars on 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1974  ",
        "question": "How many cars in 1974 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1974;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "How many cars with horsepower more than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.horsepower > 150  ",
        "question": "How many cars with a horsepower greater than 150 ?",
        "result": "COUNT(*) FROM cars_data WHERE Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "How many cars before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year < 1980  ",
        "question": "How many cars produced before 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year < 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars produced before 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "How many cars have more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars have more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.cylinders > 4  ",
        "question": "How many cars with more than 4 cylinders ?",
        "result": "COUNT(*) FROM cars_data WHERE Cylinders > 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select count(*) from cars_data where  cars_data.year = 1980  ",
        "question": "How many cars were produced in 1980 ?",
        "result": "COUNT(*) FROM cars_data WHERE Year = 1980;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### How many cars were produced in 1980 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8   intersect select cars_data.mpg from cars_data where  cars_data.cylinders = 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Edispl = 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8   intersect select cars_data.mpg from cars_data where  cars_data.cylinders = 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND MPG IN (SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8) UNION SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 4 AND MPG IN (SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 4)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 and cars_data.year = 1974   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders on 1974 ?",
        "result": "MAX(MPG) \nFROM cars_data \nWHERE Cylinders=8 AND Year=1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 and cars_data.year = 1974   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders in 1974 ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders=8 AND Year=1974",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders with horsepower more than 150 ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 and cars_data.horsepower > 150   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders with a horsepower greater than 150 ?",
        "result": "MAX(MPG) \nFROM cars_data \nWHERE Cylinders = 8 AND Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 and cars_data.cylinders > 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum miles per gallon of the car with 8 cylinders with more than 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders > 4 AND Cylinders = 8;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum miles per gallon of the car with 8 cylinders with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.cylinders = 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.cylinders = 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Cylinders = 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or with 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.year = 1974   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or on 1974 ?",
        "result": "MAX(MPG) FROM cars_data WHERE (Cylinders=8 OR Year=1974)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or on 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.year = 1974   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or in 1974 ?",
        "result": "MAX(MPG) FROM cars_data WHERE (Cylinders = 8 OR Year = 1974)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or in 1974 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.horsepower > 150   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or with horsepower more than 150 ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders = 8 OR Horsepower > 150;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or with horsepower more than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.horsepower > 150   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or with a horsepower greater than 150 ?",
        "result": "MAX(MPG) FROM cars_data WHERE (Cylinders=8 OR Horsepower>150)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or with a horsepower greater than 150 ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select cars_data.mpg from cars_data where  cars_data.cylinders = 8 or cars_data.cylinders > 4   order by cars_data.mpg desc limit 1 ",
        "question": "What is the maximum mpg of the cars that had 8 cylinders or with more than 4 cylinders ?",
        "result": "MAX(MPG) FROM cars_data WHERE Cylinders >= 8 OR Cylinders > 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What is the maximum mpg of the cars that had 8 cylinders or with more than 4 cylinders ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname having  count(*) >= 3 ",
        "question": "What are the name of the countries with at least 3 manufacturers ?",
        "result": "countries.CountryName \nFROM countries \nJOIN car_makers ON countries.CountryId = car_makers.Country \nGROUP BY countries.CountryId \nHAVING COUNT(DISTINCT car_makers.Maker) >= 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the name of the countries with at least 3 manufacturers ? \n SELECT"
    },
    {
        "db_id": "car_1",
        "query": "select countries.countryname from car_makers join countries on car_makers.Country = countries.CountryId  group by countries.countryname having  count(*) >= 3 ",
        "question": "What are the names of the countries with at least 3 manufacturers ?",
        "result": "countries.CountryName \nFROM \ncountries \nINNER JOIN car_makers ON countries.CountryId = car_makers.Country \nGROUP BY \ncountries.CountryName \nHAVING \nCOUNT(DISTINCT car_makers.Id) >= 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# continents(ContId,Continent)\n;# countries(CountryId,CountryName,Continent)\n;# car_makers(Id,Maker,FullName,Country)\n;# model_list(ModelId,Maker,Model)\n;# car_names(MakeId,Model,Make)\n;# cars_data(Id,MPG,Cylinders,Edispl,Horsepower,Weight,Accelerate,Year)\n.# \n ### What are the names of the countries with at least 3 manufacturers ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Which country in ' USA ' .",
        "result": "Country \nFROM airports \nWHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which country in ' USA ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Which country in the USA ?",
        "result": "Country FROM airports WHERE CountryAbbrev = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which country in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.country from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which country with abbreviation ' UAL ' .",
        "result": "Country \nFROM \nairlines \nWHERE \nAbbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which country with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Which country in the USA .",
        "result": "Country FROM airports WHERE CountryAbbrev='USA' AND City='USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which country in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation from airlines where  airlines.country = \"USA\"  ",
        "question": "Which abbreviation in ' USA ' .",
        "result": "Abbreviation FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which abbreviation in ' USA ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation from airlines where  airlines.country = \"USA\"  ",
        "question": "Which abbreviation in the USA ?",
        "result": "Abbreviation \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which abbreviation in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which abbreviation with abbreviation ' UAL ' .",
        "result": "Abbreviation FROM airlines WHERE Abbreviation = 'UAL' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which abbreviation with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation from airlines where  airlines.country = \"USA\"  ",
        "question": "Which abbreviation in the USA .",
        "result": "Abbreviation \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which abbreviation in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "List all airline names and their abbreviations does Airline ' JetBlue Airways ' belong to ?",
        "result": "Airline, Abbreviation \nFROM airlines; \n\nJetBlue Airways may or may not belong to the list depending on whether it exists in the airlines table or not. The query only lists all existing airline names and their abbreviations.",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List all airline names and their abbreviations does Airline ' JetBlue Airways ' belong to ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "List all airline names and their abbreviations corresponds to JetBlue Airways ?",
        "result": "Airline, Abbreviation \nFROM airlines \nWHERE Airline = 'JetBlue Airways'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List all airline names and their abbreviations corresponds to JetBlue Airways ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "List all airline names and their abbreviations has abbreviation ' UAL ' ?",
        "result": "Airline, Abbreviation \nFROM airlines \nWHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List all airline names and their abbreviations has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "List all airline names and their abbreviations with abbreviation ' UAL ' .",
        "result": "Airline, Abbreviation \nFROM airlines \nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List all airline names and their abbreviations with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "What are the airline names and abbreviations for airlines has abbreviation ' UAL ' ?",
        "result": "Airline, Abbreviation\nFROM airlines\nWHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the airline names and abbreviations for airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "What are the airline names and abbreviations for airlines with abbreviation ' UAL ' .",
        "result": "Airline, Abbreviation\nFROM airlines\nWHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the airline names and abbreviations for airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline , airlines.abbreviation from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline , airlines.abbreviation from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "What are the airline names and abbreviations for airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airlines.Airline, Airlines.Abbreviation\nFROM Airlines\nINNER JOIN flights ON Airlines.Airline = flights.Airline\nWHERE flights.SourceAirport IN ('APG', 'CVO')\nAND flights.DestAirport IN ('APG', 'CVO')\nGROUP BY Airlines.Airline\nHAVING COUNT(DISTINCT flights.SourceAirport) = 2 AND COUNT(DISTINCT flights.DestAirport) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the airline names and abbreviations for airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.airportname = \"Alton\"  ",
        "question": "List the airport code and name is the Alton airport at ?",
        "result": "AirportCode, AirportName FROM airports WHERE City='Alton';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List the airport code and name is the Alton airport at ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "List the airport code and name with code ' AKO ' .",
        "result": "AirportCode, AirportName \nFROM airports \nWHERE AirportCode = 'AKO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List the airport code and name with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "List the airport code and name at City ' Aberdeen ' ?",
        "result": "AirportCode, AirportName\nFROM airports\nWHERE City = 'Aberdeen'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List the airport code and name at City ' Aberdeen ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "List the airport code and name in Aberdeen ?",
        "result": "AirportCode, AirportName\nFROM airports\nWHERE City = 'Aberdeen';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### List the airport code and name in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.airportname = \"Alton\"  ",
        "question": "Give the airport code and airport name corresonding is the Alton airport at ?",
        "result": "AirportCode, AirportName FROM airports WHERE City = 'Alton';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airport code and airport name corresonding is the Alton airport at ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "Give the airport code and airport name corresonding with code ' AKO ' .",
        "result": "AirportCode, AirportName FROM airports WHERE AirportCode = 'AKO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airport code and airport name corresonding with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportcode , airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "Give the airport code and airport name corresonding in Aberdeen ?",
        "result": "AirportCode, AirportName FROM airports\nWHERE City = 'Aberdeen';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airport code and airport name corresonding in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline in ' USA ' .",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline in ' USA ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline in the USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline in the USA .",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airline that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airline \nFROM airlines \nWHERE \n    Airline IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG') AND \n    Airline IN (SELECT Airline FROM flights WHERE DestAirport = 'CVO');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airline that have at least 10 flights .",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n    SELECT Airline \n    FROM flights \n    GROUP BY Airline \n    HAVING COUNT(*) >= 10\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airline have at least 10 flights ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n    SELECT Airline \n    FROM flights \n    GROUP BY Airline \n    HAVING COUNT(*) >= 10\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airline that have fewer than 200 flights .",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n  SELECT Airline \n  FROM flights \n  GROUP BY Airline \n  HAVING COUNT(*) < 200\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airline have less than 200 flights ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n    SELECT Airline \n    FROM flights \n    GROUP BY Airline \n    HAVING COUNT(*) < 200\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Give the airline does Airline ' JetBlue Airways ' belong to ?",
        "result": "Airline FROM airlines WHERE Airline = 'JetBlue Airways';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline does Airline ' JetBlue Airways ' belong to ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Give the airline in ' USA ' .",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline in ' USA ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Give the airline in the USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Give the airline are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Give the airline in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Give the airline that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN Flights ON Airlines.Abbreviation = Flights.Airline \nWHERE Flights.SourceAirport IN ('APG', 'CVO') \nAND Flights.DestAirport IN ('APG', 'CVO') \nGROUP BY Airlines.Airline \nHAVING COUNT(DISTINCT Flights.SourceAirport) = 2 AND COUNT(DISTINCT Flights.DestAirport) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Give the airline that have at least 10 flights .",
        "result": "Airline FROM flights \nGROUP BY Airline \nHAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Give the airline have at least 10 flights ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n  SELECT Airline \n  FROM flights \n  GROUP BY Airline \n  HAVING COUNT(*) >= 10\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Give the airline that have fewer than 200 flights .",
        "result": "Airline FROM airlines \nWHERE uid IN (\n    SELECT Airline FROM flights\n    GROUP BY Airline\n    HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Give the airline have less than 200 flights ?",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n    SELECT Airline\n    FROM flights\n    GROUP BY Airline\n    HAVING COUNT(*) < 200\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the airline have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "How many airlines has abbreviation ' UAL ' ?",
        "result": "COUNT(*) FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "How many airlines with abbreviation ' UAL ' .",
        "result": "COUNT(*) FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.airline in (select flights.Airline from flights where  flights.sourceairport = \"APG\"   intersect select flights.Airline from flights where  flights.sourceairport = \"CVO\"   ) ",
        "question": "How many airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "COUNT(DISTINCT Airline) \nFROM flights \nWHERE SourceAirport = 'APG' AND DestAirport = 'CVO' \nAND Airline IN (\n    SELECT Airline \n    FROM flights \n    WHERE SourceAirport = 'APG'\n) \nAND Airline IN (\n    SELECT Airline \n    FROM flights \n    WHERE SourceAirport = 'CVO'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Return the number of airlines does Airline ' JetBlue Airways ' belong to ?",
        "result": "COUNT(DISTINCT uid) FROM airlines WHERE Airline = 'JetBlue Airways'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of airlines does Airline ' JetBlue Airways ' belong to ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Return the number of airlines has abbreviation ' UAL ' ?",
        "result": "COUNT(*) FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Return the number of airlines with abbreviation ' UAL ' .",
        "result": "COUNT(*) FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines where  airlines.airline in (select flights.Airline from flights where  flights.sourceairport = \"APG\"   intersect select flights.Airline from flights where  flights.sourceairport = \"CVO\"   ) ",
        "question": "Return the number of airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "COUNT(DISTINCT airlines.Airline)\nFROM airlines\nINNER JOIN flights ON airlines.Airline = flights.Airline\nWHERE flights.SourceAirport = 'APG' AND flights.DestAirport = 'CVO'\nINTERSECT\nSELECT COUNT(DISTINCT airlines.Airline)\nFROM airlines\nINNER JOIN flights ON airlines.Airline = flights.Airline\nWHERE flights.SourceAirport = 'CVO' AND flights.DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.city , airports.country from airports where  airports.city = \"Anthony\"  ",
        "question": "Which city and country in the city of Anthony .",
        "result": "City, Country\nFROM airports\nWHERE City = 'Anthony'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which city and country in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.city , airports.country from airports where  airports.airportcode = \"AKO\"  ",
        "question": "Which city and country with code ' AKO ' .",
        "result": "City, Country FROM airports WHERE AirportCode='AKO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which city and country with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.city , airports.country from airports where  airports.city = \"Aberdeen\"  ",
        "question": "Which city and country in Aberdeen ?",
        "result": "City, Country FROM airports WHERE AirportCode = 'ABZ';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which city and country in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Anthony\"  ",
        "question": "Return the name of the airport in the city of Anthony .",
        "result": "AirportName FROM airports WHERE City = 'Anthony'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the name of the airport in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportname = \"Alton\"  ",
        "question": "Return the name of the airport is the Alton airport at ?",
        "result": "AirportName \nFROM airports \nWHERE AirportCode = 'Alton';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the name of the airport is the Alton airport at ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "Return the name of the airport in Aberdeen ?",
        "result": "AirportName \nFROM airports \nWHERE City='Aberdeen';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the name of the airport in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode not in (select flights.SourceAirport from flights  ) and airports.airportcode not in (select flights.DestAirport from flights  )  ",
        "question": "Return the name of the airport which do not have any flight in and out .",
        "result": "AirportName \nFROM airports \nWHERE AirportCode NOT IN (SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the name of the airport which do not have any flight in and out . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode not in (select flights.SourceAirport from flights  ) and airports.airportcode not in (select flights.DestAirport from flights  )  ",
        "question": "Return the name of the airport do not have departing or arriving flights ?",
        "result": "AirportName FROM airports \nWHERE AirportCode NOT IN \n(SELECT DISTINCT SourceAirport FROM flights UNION SELECT DISTINCT DestAirport FROM flights);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the name of the airport do not have departing or arriving flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Anthony\"  ",
        "question": "What are airport names in the city of Anthony .",
        "result": "AirportName \nFROM airports \nWHERE City = 'Anthony';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are airport names in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "What are airport names with code ' AKO ' .",
        "result": "AirportName \nFROM airports \nWHERE AirportCode = 'AKO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are airport names with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Anthony\"  ",
        "question": "What are the names of airports in the city of Anthony .",
        "result": "AirportName \nFROM airports \nWHERE City = 'Anthony'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the names of airports in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "What are the names of airports with code ' AKO ' .",
        "result": "AirportName FROM airports WHERE AirportCode = 'AKO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the names of airports with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode not in (select flights.SourceAirport from flights  ) and airports.airportcode not in (select flights.DestAirport from flights  )  ",
        "question": "What are the names of airports which do not have any flight in and out .",
        "result": "Airports.AirportName\nFROM Airports\nLEFT JOIN flights ON flights.SourceAirport = Airports.AirportCode OR flights.DestAirport = Airports.AirportCode\nWHERE flights.Airline IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the names of airports which do not have any flight in and out . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode not in (select flights.SourceAirport from flights  ) and airports.airportcode not in (select flights.DestAirport from flights  )  ",
        "question": "What are the names of airports do not have departing or arriving flights ?",
        "result": "AirportName FROM airports\nWHERE AirportCode NOT IN \n(SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are the names of airports do not have departing or arriving flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"ATO\"  ",
        "question": "Count the number of flights have destination ATO ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport='ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"ATO\"  ",
        "question": "Count the number of flights into ATO .",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'ATO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Count the number of flights does airline ' JetBlue Airways ' have ?",
        "result": "COUNT(*) \nFROM flights \nWHERE Airline = 'JetBlue Airways';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "Count the number of flights arriving at Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "Count the number of flights landing at APG .",
        "result": "COUNT(*) FROM flights\nWHERE DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights departing from ' APG ' .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights departing from ' APG ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "How many flights does airline ' JetBlue Airways ' have ?",
        "result": "COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights departing from Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights departing from Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights leaving from APG .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights leaving from APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "How many flights arriving at Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "How many flights landing at APG .",
        "result": "COUNT(*) FROM flights\nWHERE DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Count the number of flights departing from ' APG ' .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights departing from ' APG ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Count the number of flights does airline ' JetBlue Airways ' have ?",
        "result": "COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Count the number of flights departing from Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights departing from Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Count the number of flights leaving from APG .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport='APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights leaving from APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "Count the number of flights arriving at Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "Count the number of flights landing at APG .",
        "result": "COUNT(*) FROM flights\nWHERE DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights departing from ' APG ' .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights departing from ' APG ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"ATO\"  ",
        "question": "How many flights have destination ATO ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"ATO\"  ",
        "question": "How many flights into ATO .",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights departing from Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights departing from Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.sourceairport = \"APG\"  ",
        "question": "How many flights leaving from APG .",
        "result": "COUNT(*) FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights leaving from APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "How many flights arriving at Airport ' APG ' ?",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from flights where  flights.destairport = \"APG\"  ",
        "question": "How many flights landing at APG .",
        "result": "COUNT(*) FROM flights WHERE DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.sourceairport = \"AHD\"  ",
        "question": "How many ' United Airlines ' flights leaving from AHD Airport .",
        "result": "COUNT(*) FROM flights\nWHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many ' United Airlines ' flights leaving from AHD Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.sourceairport = \"AHD\"  ",
        "question": "How many ' United Airlines ' flights with source airport AHD ?",
        "result": "COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many ' United Airlines ' flights with source airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.destairport = \"AHD\"  ",
        "question": "How many ' United Airlines ' flights with destination airport AHD ?",
        "result": "COUNT(*) FROM flights\nWHERE Airline = 'United Airlines' AND DestAirport = 'AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### How many ' United Airlines ' flights with destination airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.sourceairport = \"AHD\"  ",
        "question": "Count the number of United Airlines flights leaving from AHD Airport .",
        "result": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND SourceAirport = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of United Airlines flights leaving from AHD Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.sourceairport = \"AHD\"  ",
        "question": "Count the number of United Airlines flights with source airport AHD ?",
        "result": "COUNT(*) FROM flights WHERE Airline='United Airlines' AND SourceAirport='AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of United Airlines flights with source airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.destairport = \"AHD\"  ",
        "question": "Count the number of United Airlines flights with destination airport AHD ?",
        "result": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND DestAirport = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Count the number of United Airlines flights with destination airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.destairport = \"ASY\"  ",
        "question": "Return the number of United Airlines flights go to Airport ' ASY ' ?",
        "result": "COUNT(*) FROM flights \nWHERE Airline = 'United Airlines' AND DestAirport = 'ASY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of United Airlines flights go to Airport ' ASY ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.destairport = \"ASY\"  ",
        "question": "Return the number of United Airlines flights arriving in ASY Airport .",
        "result": "COUNT(*) \nFROM flights \nWHERE Airline='United Airlines' AND DestAirport='ASY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of United Airlines flights arriving in ASY Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select count(*) from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"United Airlines\" and flights.destairport = \"AHD\"  ",
        "question": "Return the number of United Airlines flights with destination airport AHD ?",
        "result": "COUNT(*) FROM flights WHERE Airline='United Airlines' AND DestAirport='AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Return the number of United Airlines flights with destination airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline in the USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airline has abbreviation ' UAL ' ?",
        "result": "Airline \nFROM airlines \nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airline with abbreviation ' UAL ' .",
        "result": "Airline FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airline in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airline that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airline \nFROM airlines \nWHERE uid IN \n  (SELECT Airline \n  FROM flights \n  WHERE SourceAirport = 'APG' \n    AND Airline IN \n      (SELECT Airline \n      FROM flights \n      WHERE SourceAirport = 'CVO' \n        AND Airline IN \n          (SELECT uid FROM airlines)))",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airline that have at least 10 flights .",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) >= 10\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airline have at least 10 flights ?",
        "result": "Airline FROM flights \nGROUP BY Airline \nHAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airline that have fewer than 200 flights .",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n  SELECT Airline \n  FROM flights \n  GROUP BY Airline \n  HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airline have less than 200 flights ?",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n    SELECT Airline\n    FROM flights\n    GROUP BY Airline\n    HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airline have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "What airline in the USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "What airline has abbreviation ' UAL ' ?",
        "result": "Airline FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "What airline with abbreviation ' UAL ' .",
        "result": "Airline FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "What airline are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "What airline in the USA .",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "What airline that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airline \nFROM flights \nWHERE SourceAirport = 'APG' \nAND Airline IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO') \nAND DestAirport = 'CVO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "What airline that have at least 10 flights .",
        "result": "Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "What airline have at least 10 flights ?",
        "result": "Airline \nFROM flights \nGROUP BY Airline \nHAVING COUNT(*) >= 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "What airline that have fewer than 200 flights .",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n    SELECT Airline \n    FROM flights \n    GROUP BY Airline \n    HAVING COUNT(*) < 200 \n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "What airline have less than 200 flights ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (SELECT Airline FROM flights GROUP BY Airline HAVING COUNT(*) < 200);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What airline have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Find the abbreviation and country of the airline in the USA ?",
        "result": "Abbreviation, Country \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find the abbreviation and country of the airline has abbreviation ' UAL ' ?",
        "result": "Abbreviation, Country \nFROM airlines \nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find the abbreviation and country of the airline with abbreviation ' UAL ' .",
        "result": "Abbreviation, Country \nFROM airlines \nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Find the abbreviation and country of the airline are from USA ?",
        "result": "Abbreviation, Country FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines where  airlines.country = \"USA\"  ",
        "question": "Find the abbreviation and country of the airline in the USA .",
        "result": "Abbreviation, Country\nFROM airlines\nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Find the abbreviation and country of the airline that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "airlines.Abbreviation, airlines.Country \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'APG' AND flights.DestAirport = 'CVO'\nINTERSECT\nSELECT airlines.Abbreviation, airlines.Country \nFROM airlines \nJOIN flights ON airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'CVO' AND flights.DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find the abbreviation and country of the airline that have at least 10 flights .",
        "result": "Abbreviation, Country FROM airlines\nWHERE uid IN (\n    SELECT airlines.uid FROM airlines\n    JOIN flights ON airlines.Airline = flights.Airline\n    GROUP BY airlines.uid\n    HAVING COUNT(*) >= 10\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find the abbreviation and country of the airline have at least 10 flights ?",
        "result": "Abbreviation, Country\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) >= 10\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find the abbreviation and country of the airline that have fewer than 200 flights .",
        "result": "Abbreviation, Country FROM airlines \nWHERE uid IN (\n  SELECT Airline FROM flights \n  GROUP BY Airline \n  HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.abbreviation , airlines.country from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find the abbreviation and country of the airline have less than 200 flights ?",
        "result": "Abbreviation, Country\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) < 200\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the abbreviation and country of the airline have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have a flight go to Airport ' ASY ' ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n  SELECT Airline \n  FROM flights \n  WHERE DestAirport = 'ASY'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight go to Airport ' ASY ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have a flight arriving in ASY Airport .",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN flights \nON Airlines.Abbreviation = flights.Airline \nJOIN airports \nON airports.AirportCode = flights.DestAirport \nWHERE airports.AirportCode = 'ASY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight arriving in ASY Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"AHD\"  ",
        "question": "Which airlines have a flight with destination airport AHD ?",
        "result": "Airlines.Airline \nFROM \n  Airlines \n  INNER JOIN flights ON Airlines.Abbreviation = flights.Airline \n  INNER JOIN airports ON flights.DestAirport = airports.AirportCode \nWHERE \n  airports.AirportCode = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight with destination airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airlines have a flight from both APG and CVO airports ?",
        "result": "Airline \nFROM airlines \nWHERE Airline IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG') \nAND Airline IN (SELECT Airline FROM flights WHERE SourceAirport = 'CVO')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight from both APG and CVO airports ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have a flight go to Airport ' ASY ' ?",
        "result": "Airline\nFROM airlines\nINNER JOIN flights ON airlines.Airline = flights.Airline\nINNER JOIN airports ON flights.DestAirport = airports.AirportCode\nWHERE airports.AirportCode = 'ASY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight go to Airport ' ASY ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have a flight arriving in ASY Airport .",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN Flights ON Airlines.Abbreviation = Flights.Airline \nJOIN Airports ON Flights.DestAirport = Airports.AirportCode \nWHERE Airports.AirportCode = 'ASY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight arriving in ASY Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"AHD\"  ",
        "question": "Which airlines have a flight leaving from AHD Airport .",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN Flights ON Airlines.Abbreviation = Flights.Airline \nINNER JOIN Airports ON Flights.SourceAirport = Airports.AirportCode \nWHERE Airports.AirportCode = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight leaving from AHD Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"AHD\"  ",
        "question": "Which airlines have a flight with source airport AHD ?",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN Flights ON Airlines.Abbreviation = Flights.Airline \nWHERE Flights.SourceAirport = 'AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight with source airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airlines have a flight from both APG and CVO airports ?",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN flights ON Airlines.Airline = flights.Airline \nWHERE flights.SourceAirport IN ('APG', 'CVO') AND flights.DestAirport IN ('APG', 'CVO') \nGROUP BY Airlines.Airline \nHAVING COUNT(DISTINCT flights.SourceAirport) = 2 AND COUNT(DISTINCT flights.DestAirport) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have a flight from both APG and CVO airports ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines has abbreviation ' UAL ' ?",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines with abbreviation ' UAL ' .",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines are from USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find all airlines that have at least 10 flights .",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN Flights ON Airlines.Abbreviation = Flights.Airline \nGROUP BY Airlines.Airline \nHAVING COUNT(Flights.FlightNo) >= 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find all airlines have at least 10 flights ?",
        "result": "Airlines.Airline \nFROM \nAirlines \nINNER JOIN flights \nON Airlines.Abbreviation = flights.Airline \nGROUP BY Airlines.Airline \nHAVING COUNT(*) >= 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find all airlines that have fewer than 200 flights .",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find all airlines have less than 200 flights ?",
        "result": "Airline FROM airlines \nWHERE uid IN (\n    SELECT Airline FROM flights\n    GROUP BY Airline\n    HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have departing flights go to Airport ' ASY ' ?",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN flights ON Airlines.Abbreviation = flights.Airline \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode = 'ASY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have departing flights go to Airport ' ASY ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"ASY\"  ",
        "question": "Which airlines have departing flights arriving in ASY Airport .",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN Flights ON Airlines.Abbreviation = Flights.Airline \nJOIN Airports ON Flights.DestAirport = Airports.AirportCode \nWHERE Airports.AirportCode = 'ASY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have departing flights arriving in ASY Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"AHD\"  ",
        "question": "Which airlines have departing flights leaving from AHD Airport .",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN flights ON Airlines.Airline = flights.Airline \nINNER JOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode = 'AHD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have departing flights leaving from AHD Airport . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"AHD\"  ",
        "question": "Which airlines have departing flights with source airport AHD ?",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN Flights ON Airlines.Abbreviation = Flights.Airline \nWHERE Flights.SourceAirport = 'AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have departing flights with source airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.destairport = \"AHD\"  ",
        "question": "Which airlines have departing flights with destination airport AHD ?",
        "result": "airlines.Airline \nFROM airlines \nINNER JOIN flights ON airlines.Abbreviation = flights.Airline \nWHERE flights.DestAirport = 'AHD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have departing flights with destination airport AHD ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines has abbreviation ' UAL ' ?",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines with abbreviation ' UAL ' .",
        "result": "* \nFROM airlines \nWHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines are from USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA .",
        "result": "Airline FROM airlines WHERE Country='USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Find all airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airline \nFROM airlines \nWHERE uid IN (\n    SELECT Airline \n    FROM flights \n    WHERE SourceAirport = 'APG'\n) AND uid IN (\n    SELECT Airline \n    FROM flights \n    WHERE SourceAirport = 'CVO'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find all airlines that have fewer than 200 flights .",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) < 200\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Find all airlines have less than 200 flights ?",
        "result": "Airline FROM airlines \nWHERE uid IN (\n  SELECT Airline FROM flights \n  GROUP BY Airline \n  HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines in the USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airlines has abbreviation ' UAL ' ?",
        "result": "Airline\nFROM airlines\nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airlines with abbreviation ' UAL ' .",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airlines.Airline \nFROM Airlines \nJOIN flights ON Airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'APG' \nAND flights.DestAirport = 'CVO' \nINTERSECT \nSELECT Airlines.Airline \nFROM Airlines \nJOIN flights ON Airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'CVO' \nAND flights.DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airlines that have fewer than 200 flights .",
        "result": "Airline FROM airlines \nWHERE uid IN (SELECT Airline FROM flights \nGROUP BY Airline HAVING COUNT(*) < 200);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines that have fewer than 200 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) < 200 ",
        "question": "Which airlines have less than 200 flights ?",
        "result": "Airline\nFROM airlines\nWHERE uid IN (\n  SELECT Airline\n  FROM flights\n  GROUP BY Airline\n  HAVING COUNT(*) < 200\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have less than 200 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines has abbreviation ' UAL ' ?",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Find all airlines with abbreviation ' UAL ' .",
        "result": "* FROM airlines WHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines are from USA ?",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Find all airlines in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Find all airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "airlines.Airline \nFROM airlines \nINNER JOIN flights ON airlines.Abbreviation = flights.Airline \nWHERE flights.SourceAirport = 'APG' AND flights.DestAirport = 'CVO'\nINTERSECT\nSELECT airlines.Airline \nFROM airlines \nINNER JOIN flights ON airlines.Abbreviation = flights.Airline \nWHERE flights.SourceAirport = 'CVO' AND flights.DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find all airlines that have at least 10 flights .",
        "result": "Airline FROM flights GROUP BY Airline HAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Find all airlines have at least 10 flights ?",
        "result": "Airline \nFROM airlines \nINNER JOIN flights \nON airlines.Abbreviation = flights.Airline \nGROUP BY Airline \nHAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find all airlines have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines in the USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines in the USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airlines has abbreviation ' UAL ' ?",
        "result": "Airline\nFROM airlines\nWHERE Abbreviation = 'UAL';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines has abbreviation ' UAL ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.abbreviation = \"UAL\"  ",
        "question": "Which airlines with abbreviation ' UAL ' .",
        "result": "Airline \nFROM airlines \nWHERE Abbreviation = 'UAL'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines with abbreviation ' UAL ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines are from USA ?",
        "result": "Airline \nFROM airlines \nWHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines are from USA ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines where  airlines.country = \"USA\"  ",
        "question": "Which airlines in the USA .",
        "result": "Airline FROM airlines WHERE Country = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines in the USA . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"APG\"   intersect select airlines.airline from airlines join flights on airlines.uid = flights.Airline where  flights.sourceairport = \"CVO\"  ",
        "question": "Which airlines that have flights from both airports ' APG ' and ' CVO ' .",
        "result": "Airlines.Airline \nFROM Airlines \nINNER JOIN flights ON Airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'APG' AND flights.DestAirport = 'CVO' \nINTERSECT \nSELECT Airlines.Airline \nFROM Airlines \nINNER JOIN flights ON Airlines.Airline = flights.Airline \nWHERE flights.SourceAirport = 'CVO' AND flights.DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines that have flights from both airports ' APG ' and ' CVO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airlines that have at least 10 flights .",
        "result": "Airline FROM flights\nGROUP BY Airline\nHAVING COUNT(*) >= 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines that have at least 10 flights . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airlines.airline from airlines join flights on airlines.uid = flights.Airline  group by airlines.airline having  count(*) > 10 ",
        "question": "Which airlines have at least 10 flights ?",
        "result": "Airline \nFROM airlines \nWHERE uid IN (SELECT Airline FROM flights \n              GROUP BY Airline \n              HAVING COUNT(*) >= 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airlines have at least 10 flights ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "What are flight numbers of flights have destination ATO ?",
        "result": "FlightNo \nFROM flights \nWHERE DestAirport = 'ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "What are flight numbers of flights into ATO .",
        "result": "FlightNo FROM flights WHERE DestAirport='ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "What are flight numbers of flights does airline ' JetBlue Airways ' have ?",
        "result": "FlightNo \nFROM flights \nWHERE Airline = 'JetBlue Airways'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"APG\"  ",
        "question": "What are flight numbers of flights arriving at Airport ' APG ' ?",
        "result": "flights.FlightNo \nFROM flights \nINNER JOIN airports \nON flights.DestAirport = airports.AirportCode \nWHERE airports.AirportCode = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"APG\"  ",
        "question": "What are flight numbers of flights landing at APG .",
        "result": "flights.FlightNo \nFROM flights \nINNER JOIN airports ON flights.DestAirport = airports.AirportCode \nWHERE airports.AirportName = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "Give the flight numbers of flights have destination ATO ?",
        "result": "FlightNo FROM flights WHERE DestAirport = 'ATO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "Give the flight numbers of flights into ATO .",
        "result": "FlightNo \nFROM flights \nWHERE DestAirport = 'ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Give the flight numbers of flights does airline ' JetBlue Airways ' have ?",
        "result": "FlightNo \nFROM flights \nWHERE Airline = 'JetBlue Airways'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"APG\"  ",
        "question": "Give the flight numbers of flights arriving at Airport ' APG ' ?",
        "result": "FlightNo FROM flights WHERE DestAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights arriving at Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"APG\"  ",
        "question": "Give the flight numbers of flights landing at APG .",
        "result": "FlightNo FROM flights WHERE DestAirport = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights landing at APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "What are flight numbers of flights departing from ' APG ' .",
        "result": "flights.FlightNo \nFROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights departing from ' APG ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "What are flight numbers of flights have destination ATO ?",
        "result": "FlightNo\nFROM flights\nWHERE DestAirport = 'ATO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "What are flight numbers of flights into ATO .",
        "result": "FlightNo \nFROM flights \nWHERE DestAirport = 'ATO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "What are flight numbers of flights does airline ' JetBlue Airways ' have ?",
        "result": "FlightNo FROM flights WHERE Airline = 'JetBlue Airways';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "What are flight numbers of flights departing from Airport ' APG ' ?",
        "result": "flights.FlightNo\nFROM flights\nINNER JOIN airports ON flights.SourceAirport = airports.AirportCode\nWHERE airports.AirportCode = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights departing from Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "What are flight numbers of flights leaving from APG .",
        "result": "flights.FlightNo \nFROM flights \nJOIN airports ON flights.SourceAirport = airports.AirportCode \nWHERE airports.AirportCode = 'APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### What are flight numbers of flights leaving from APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Give the flight numbers of flights departing from ' APG ' .",
        "result": "FlightNo FROM flights WHERE SourceAirport='APG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights departing from ' APG ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "Give the flight numbers of flights have destination ATO ?",
        "result": "FlightNo \nFROM flights \nWHERE DestAirport = 'ATO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights have destination ATO ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.destairport = \"ATO\"  ",
        "question": "Give the flight numbers of flights into ATO .",
        "result": "FlightNo \nFROM flights \nWHERE DestAirport = 'ATO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights into ATO . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from airlines join flights on airlines.uid = flights.Airline where  airlines.airline = \"JetBlue Airways\"  ",
        "question": "Give the flight numbers of flights does airline ' JetBlue Airways ' have ?",
        "result": "FlightNo \nFROM flights \nWHERE Airline = 'JetBlue Airways'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights does airline ' JetBlue Airways ' have ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Give the flight numbers of flights departing from Airport ' APG ' ?",
        "result": "FlightNo FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights departing from Airport ' APG ' ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select flights.flightno from flights where  flights.sourceairport = \"APG\"  ",
        "question": "Give the flight numbers of flights leaving from APG .",
        "result": "FlightNo FROM flights WHERE SourceAirport = 'APG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Give the flight numbers of flights leaving from APG . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Anthony\"  ",
        "question": "Find the name of airports in the city of Anthony .",
        "result": "AirportName FROM airports WHERE City='Anthony';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the name of airports in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportname = \"Alton\"  ",
        "question": "Find the name of airports is the Alton airport at ?",
        "result": "AirportName \nFROM airports \nWHERE City = 'Alton' AND AirportName LIKE '%airport%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the name of airports is the Alton airport at ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "Find the name of airports with code ' AKO ' .",
        "result": "AirportName \nFROM airports \nWHERE AirportCode = 'AKO'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the name of airports with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "Find the name of airports in Aberdeen ?",
        "result": "AirportName FROM airports WHERE City = 'Aberdeen';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Find the name of airports in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Anthony\"  ",
        "question": "Which airports in the city of Anthony .",
        "result": "AirportCode, AirportName \nFROM airports \nWHERE City = 'Anthony'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airports in the city of Anthony . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.airportcode = \"AKO\"  ",
        "question": "Which airports with code ' AKO ' .",
        "result": "* FROM airports WHERE AirportCode = 'AKO';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airports with code ' AKO ' . \n SELECT"
    },
    {
        "db_id": "flight_2",
        "query": "select airports.airportname from airports where  airports.city = \"Aberdeen\"  ",
        "question": "Which airports in Aberdeen ?",
        "result": "AirportName FROM airports WHERE City = 'Aberdeen';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# airlines(uid,Airline,Abbreviation,Country)\n;# airports(City,AirportCode,AirportName,Country,CountryAbbrev)\n;# flights(Airline,FlightNo,SourceAirport,DestAirport)\n.# \n ### Which airports in Aberdeen ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.age < 30  ",
        "question": "List the names of employees under age 30 come from ?",
        "result": "Name FROM employee WHERE Age < 30;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### List the names of employees under age 30 come from ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "List the names of employees who never won any award in the evaluation .",
        "result": "employee.Name\nFROM employee\nWHERE employee.Employee_ID NOT IN \n(SELECT evaluation.Employee_ID FROM evaluation)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### List the names of employees who never won any award in the evaluation . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "List the names of employees who never received any evaluation ?",
        "result": "Employee_ID, Name\nFROM employee\nWHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### List the names of employees who never received any evaluation ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.city from employee  group by employee.city having  count(*) > 1  order by employee.age asc",
        "question": "Which cities do more than one employee and sort in ascending order of age .",
        "result": "employee.City \nFROM employee \nGROUP BY employee.City \nHAVING COUNT(employee.Employee_ID) > 1 \nORDER BY employee.Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Which cities do more than one employee and sort in ascending order of age . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.city from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  group by employee.city having  count(*) > 1 ",
        "question": "Which cities do more than one employee who never won any award in the evaluation .",
        "result": "employee.City\nFROM employee\nWHERE employee.Employee_ID NOT IN (\n    SELECT evaluation.Employee_ID\n    FROM evaluation\n)\nGROUP BY employee.City\nHAVING COUNT(DISTINCT employee.Employee_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Which cities do more than one employee who never won any award in the evaluation . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.city from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  group by employee.city having  count(*) > 1 ",
        "question": "Which cities do more than one employee who never received any evaluation ?",
        "result": "employee.City\nFROM employee\nWHERE employee.Employee_ID NOT IN (SELECT evaluation.Employee_ID FROM evaluation)\nGROUP BY employee.City\nHAVING COUNT(employee.Employee_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Which cities do more than one employee who never received any evaluation ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.manager_name , shop.district from shop   order by shop.number_products desc",
        "question": "Find the manager name and district of the shop in descending order of number of products .",
        "result": "shop.Manager_name, shop.District \nFROM shop \nORDER BY shop.Number_products DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the manager name and district of the shop in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.manager_name , shop.district from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  )  ",
        "question": "Find the manager name and district of the shop that do not hire any employee .",
        "result": "shop.Manager_name, shop.District\nFROM shop\nLEFT JOIN hiring ON shop.Shop_ID = hiring.Shop_ID\nWHERE hiring.Employee_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the manager name and district of the shop that do not hire any employee . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.manager_name , shop.district from shop   order by shop.number_products desc",
        "question": "What are the manager name and district of the shop in descending order of number of products .",
        "result": "shop.Manager_name, shop.District\nFROM shop\nORDER BY shop.Number_products DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What are the manager name and district of the shop in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.manager_name , shop.district from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  )  ",
        "question": "What are the manager name and district of the shop that do not hire any employee .",
        "result": "shop.Manager_name, shop.District\nFROM shop\nWHERE shop.Shop_ID NOT IN (\n    SELECT DISTINCT hiring.Shop_ID\n    FROM hiring\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What are the manager name and district of the shop that do not hire any employee . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name , shop.location , shop.district from shop   order by shop.number_products desc limit 1 ",
        "question": "Return the name , location and district of all shops whose number of products is the largest .",
        "result": "shop.Name, shop.Location, shop.District \nFROM shop \nWHERE shop.Number_products = (\n    SELECT MAX(Number_products) \n    FROM shop\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Return the name , location and district of all shops whose number of products is the largest . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name , shop.location , shop.district from shop   order by shop.number_products desc limit 1 ",
        "question": "Return the name , location and district of all shops that sells the largest number of products ?",
        "result": "shop.Name, shop.Location, shop.District\nFROM shop\nWHERE shop.Number_products = (SELECT MAX(Number_products) FROM shop)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Return the name , location and district of all shops that sells the largest number of products ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name , shop.location , shop.district from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  )  ",
        "question": "Return the name , location and district of all shops that do not hire any employee .",
        "result": "Name, Location, District FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Return the name , location and district of all shops that do not hire any employee . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc",
        "question": "Find the names of stores in descending order of number of products .",
        "result": "Name FROM shop ORDER BY Number_products DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the names of stores in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee   order by employee.age asc",
        "question": "find the name of employee and sort in ascending order of age .",
        "result": "Name FROM employee ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### find the name of employee and sort in ascending order of age . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.age < 30  ",
        "question": "find the name of employee under age 30 come from ?",
        "result": "Name \nFROM employee \nWHERE Age < 30",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### find the name of employee under age 30 come from ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "find the name of employee who never won any award in the evaluation .",
        "result": "employee.Name \nFROM employee \nWHERE employee.Employee_ID NOT IN \n(SELECT evaluation.Employee_ID FROM evaluation)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### find the name of employee who never won any award in the evaluation . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "find the name of employee who never received any evaluation ?",
        "result": "Employee_ID, Name\nFROM employee\nWHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### find the name of employee who never received any evaluation ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee   order by employee.age asc",
        "question": "Find the name of the employee and sort in ascending order of age .",
        "result": "Name FROM employee ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the employee and sort in ascending order of age . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.age < 30  ",
        "question": "Find the name of the employee under age 30 come from ?",
        "result": "Name\nFROM employee\nWHERE Age < 30",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the employee under age 30 come from ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "Find the name of the employee who never won any award in the evaluation .",
        "result": "Employee.Name\nFROM employee\nLEFT JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID\nWHERE evaluation.Employee_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the employee who never won any award in the evaluation . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.employee_id not in (select evaluation.Employee_ID from evaluation  )  ",
        "question": "Find the name of the employee who never received any evaluation ?",
        "result": "employee.Name\nFROM employee\nWHERE employee.Employee_ID NOT IN (\n  SELECT evaluation.Employee_ID\n  FROM evaluation\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the employee who never received any evaluation ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee   order by employee.age asc",
        "question": "Find the names of employees and sort in ascending order of age .",
        "result": "Name FROM employee ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the names of employees and sort in ascending order of age . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.age < 30  ",
        "question": "Find the names of employees under age 30 come from ?",
        "result": "Name FROM employee WHERE Age < 30",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the names of employees under age 30 come from ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee   order by employee.age asc",
        "question": "What are the names of the employees and sort in ascending order of age .",
        "result": "Name FROM employee ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What are the names of the employees and sort in ascending order of age . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select employee.name from employee where  employee.age < 30  ",
        "question": "What are the names of the employees under age 30 come from ?",
        "result": "Name FROM employee WHERE Age < 30;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What are the names of the employees under age 30 come from ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc limit 1 ",
        "question": "What is the name of the shop whose number of products is the largest .",
        "result": "Name FROM shop ORDER BY Number_products DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What is the name of the shop whose number of products is the largest . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc limit 1 ",
        "question": "What is the name of the shop that sells the largest number of products ?",
        "result": "Name FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What is the name of the shop that sells the largest number of products ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc",
        "question": "What is the name of the shop in descending order of number of products .",
        "result": "Name FROM shop ORDER BY Number_products DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What is the name of the shop in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop where  shop.shop_id not in (select hiring.Shop_ID from hiring  )  ",
        "question": "What is the name of the shop that do not hire any employee .",
        "result": "Name FROM shop \nWHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### What is the name of the shop that do not hire any employee . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc limit 1 ",
        "question": "Find the name of the shops whose number of products is the largest .",
        "result": "Name FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the shops whose number of products is the largest . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc limit 1 ",
        "question": "Find the name of the shops that sells the largest number of products ?",
        "result": "shop.Name \nFROM shop \nWHERE shop.Number_products = (SELECT MAX(shop.Number_products) FROM shop)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the shops that sells the largest number of products ? \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.name from shop   order by shop.number_products desc",
        "question": "Find the name of the shops in descending order of number of products .",
        "result": "Name FROM shop ORDER BY Number_products DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the name of the shops in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.district from shop where  shop.number_products < 3000   order by shop.number_products desc",
        "question": "Which district has both stores with less than 3000 products and in descending order of number of products .",
        "result": "shop.District \nFROM shop \nWHERE shop.Number_products < 3000 \nORDER BY shop.Number_products DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Which district has both stores with less than 3000 products and in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "employee_hire_evaluation",
        "query": "select shop.district from shop where  shop.number_products < 3000   order by shop.number_products desc",
        "question": "Find the districts in which there are both shops selling less than 3000 products and in descending order of number of products .",
        "result": "DISTINCT District \nFROM shop \nWHERE Number_products < 3000 \nAND District IN (\n  SELECT District \n  FROM shop \n  WHERE Number_products < 3000 \n  GROUP BY District \n  HAVING COUNT(*) > 1\n)\nORDER BY Number_products DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# employee(Employee_ID,Name,Age,City)\n;# shop(Shop_ID,Name,Location,District,Number_products,Manager_name)\n;# hiring(Shop_ID,Employee_ID,Start_from,Is_full_time)\n;# evaluation(Employee_ID,Year_awarded,Bonus)\n.# \n ### Find the districts in which there are both shops selling less than 3000 products and in descending order of number of products . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "What is the document name and template id for document named ' Robbin CV ' ?",
        "result": "Documents.Document_Name, Documents.Template_ID\nFROM Documents\nWHERE Documents.Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document name and template id for document named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "What is the document name and template id for document with the name Robbin CV .",
        "result": "Documents.Document_Name, Templates.Template_ID\n FROM Documents\n INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID\n WHERE Documents.Document_Name = 'Robbin CV';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document name and template id for document with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What is the document name and template id for document are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_Name, Templates.Template_ID\nFROM Documents\nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID\nWHERE Templates.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document name and template id for document are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What is the document name and template id for document that use the PPT template type .",
        "result": "Documents.Document_Name, Documents.Template_ID\nFROM Documents\nJOIN Templates ON Documents.Template_ID = Templates.Template_ID\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document name and template id for document that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "What is the document name and template id for document that use templates with the code BK ?",
        "result": "Documents.Document_Name, Documents.Template_ID \n FROM Documents \n INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \n WHERE Templates.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document name and template id for document that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Return the names and template ids for documents named ' Robbin CV ' ?",
        "result": "Templates.Template_ID, Documents.Document_Name\nFROM Templates\nJOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Robbin CV';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the names and template ids for documents named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Return the names and template ids for documents with the name Robbin CV .",
        "result": "Documents.Document_Name, Documents.Template_ID \nFROM Documents \nWHERE Documents.Document_Name = 'Robbin CV';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the names and template ids for documents with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the names and template ids for documents are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_Name, Documents.Template_ID\nFROM Documents\nINNER JOIN Templates\nON Documents.Template_ID = Templates.Template_ID\nWHERE Templates.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the names and template ids for documents are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the names and template ids for documents that use the PPT template type .",
        "result": "Documents.Document_Name, Documents.Template_ID \nFROM Documents \nJOIN Templates ON Documents.Template_ID = Templates.Template_ID \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the names and template ids for documents that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name , documents.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "Return the names and template ids for documents that use templates with the code BK ?",
        "result": "Documents.Document_Name, Templates.Template_ID \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nWHERE Templates.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the names and template ids for documents that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents where  documents.document_description like \"%w%\"  ",
        "question": "What is the document id , template id and description for document with description with the letter ' w ' in it ?",
        "result": "Documents.Document_ID, Documents.Template_ID, Documents.Document_Description\nFROM Documents\nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id , template id and description for document with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents where  documents.document_description like \"%w%\"  ",
        "question": "What is the document id , template id and description for document that contain the letter w in their description .",
        "result": "Documents.Document_ID, Documents.Template_ID, Documents.Document_Description \nFROM Documents \nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id , template id and description for document that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What is the document id , template id and description for document are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_ID, Documents.Template_ID, Documents.Document_Description \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id , template id and description for document are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What is the document id , template id and description for document that use the PPT template type .",
        "result": "Documents.Document_ID, Documents.Template_ID, Ref_Template_Types.Template_Type_Description\nFROM Documents \nJOIN Templates ON Documents.Template_ID = Templates.Template_ID \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id , template id and description for document that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "What is the document id , template id and description for document that use templates with the code BK ?",
        "result": "Documents.Document_ID, Templates.Template_ID, Documents.Document_Description \n FROM Documents \n JOIN Templates ON Documents.Template_ID = Templates.Template_ID \n WHERE Templates.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id , template id and description for document that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents where  documents.document_description like \"%w%\"  ",
        "question": "Return the document id , template id , and description for the document with description with the letter ' w ' in it ?",
        "result": "Documents.Document_ID, Templates.Template_ID, Documents.Document_Description \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the document id , template id , and description for the document with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents where  documents.document_description like \"%w%\"  ",
        "question": "Return the document id , template id , and description for the document that contain the letter w in their description .",
        "result": "Documents.Document_ID, Documents.Template_ID, Documents.Document_Description\nFROM Documents\nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the document id , template id , and description for the document that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the document id , template id , and description for the document are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_ID, Documents.Template_ID, Ref_Template_Types.Template_Type_Description \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the document id , template id , and description for the document are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the document id , template id , and description for the document that use the PPT template type .",
        "result": "Documents.Document_ID, Documents.Template_ID, Ref_Template_Types.Template_Type_Description\nFROM Documents\nJOIN Templates ON Documents.Template_ID = Templates.Template_ID\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description = 'PPT';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the document id , template id , and description for the document that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.template_id , documents.document_description from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "Return the document id , template id , and description for the document that use templates with the code BK ?",
        "result": "Documents.Document_ID, Templates.Template_ID, Ref_Template_Types.Template_Type_Description \nFROM Documents \nJOIN Templates ON Documents.Template_ID = Templates.Template_ID \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the document id , template id , and description for the document that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_description like \"%w%\"  ",
        "question": "How many documents with description with the letter ' w ' in it ?",
        "result": "COUNT(*) FROM Documents WHERE Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many documents with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_description like \"%w%\"  ",
        "question": "How many documents that contain the letter w in their description .",
        "result": "COUNT(*) FROM Documents WHERE Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many documents that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "How many documents named ' Robbin CV ' ?",
        "result": "COUNT(*) FROM Documents WHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many documents named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "How many documents with the name Robbin CV .",
        "result": "COUNT(*) FROM Documents WHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many documents with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "How many documents that use templates with the code BK ?",
        "result": "COUNT(DISTINCT Documents.Document_ID) \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many documents that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_description like \"%w%\"  ",
        "question": "Count the number of documents with description with the letter ' w ' in it ?",
        "result": "COUNT(*) FROM Documents WHERE Document_Description LIKE '%w%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of documents with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_description like \"%w%\"  ",
        "question": "Count the number of documents that contain the letter w in their description .",
        "result": "COUNT(*) FROM Documents WHERE Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of documents that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Count the number of documents named ' Robbin CV ' ?",
        "result": "COUNT(*) FROM Documents WHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of documents named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Count the number of documents with the name Robbin CV .",
        "result": "COUNT(*) FROM Documents WHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of documents with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "Count the number of documents that use templates with the code BK ?",
        "result": "COUNT(DISTINCT Documents.Document_ID) \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of documents that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates   except select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the id and type code for the template not used by any document .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Templates \nLEFT JOIN Documents \nON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Template_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates   except select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the id and type code for the template that are not used in any documents ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \n FROM Templates \n LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n WHERE Documents.Document_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the id and type code for the template with template type code PP or PPT ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \n FROM Templates \n WHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the id and type code for the template that have the code PP or PPT .",
        "result": "Template_ID, Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "What is the id and type code for the template have template type code CV ?",
        "result": "Template_ID, Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What is the id and type code for the template with version number later than 5 ?",
        "result": "Template_ID, Template_Type_Code \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What is the id and type code for the template with a version number greater than 5 .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What is the id and type code for the template used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What is the id and type code for the template that is used by a document named Data base .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "What is the id and type code for the template with the description ' Presentation ' .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \n FROM Templates \n JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \n WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the id and type code for the template with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates   except select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the id and type code of the template not used by any document .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Template_ID NOT IN (\n    SELECT DISTINCT Documents.Template_ID\n    FROM Documents\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates   except select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the id and type code of the template that are not used in any documents ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Templates \nWHERE Templates.Template_ID NOT IN \n    (SELECT DISTINCT Template_ID FROM Documents)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the id and type code of the template with template type code PP or PPT ?",
        "result": "Template_ID, Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the id and type code of the template that have the code PP or PPT .",
        "result": "Template_ID, Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the id and type code of the template have template type code CV ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \n FROM Templates \n WHERE Templates.Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the id and type code of the template with version number later than 5 ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Templates \nWHERE Templates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the id and type code of the template with a version number greater than 5 .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the id and type code of the template used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID, Templates.Template_Type_Code \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the id and type code of the template that is used by a document named Data base .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code\nFROM Templates\nJOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id , templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "Return the id and type code of the template with the description ' Presentation ' .",
        "result": "Templates.Template_ID, Templates.Template_Type_Code\nFROM Templates\nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and type code of the template with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.template_id from documents where  documents.document_description like \"%w%\"  ",
        "question": "Show ids for all templates with description with the letter ' w ' in it ?",
        "result": "Templates.Template_ID\nFROM Templates\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Show ids for all templates named ' Robbin CV ' ?",
        "result": "Templates.Template_ID\nFROM Templates\nWHERE Templates.Template_Details = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Show ids for all templates with the name Robbin CV .",
        "result": "Templates.Template_ID\nFROM Templates\nWHERE Templates.Template_Details LIKE '%Robbin CV%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.template_id from documents where  documents.document_description like \"%w%\"  ",
        "question": "What are the template ids of any templates with description with the letter ' w ' in it ?",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Details LIKE '% w %';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the template ids of any templates with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.template_id from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "What are the template ids of any templates with the name Robbin CV .",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Details LIKE '%Robbin CV%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the template ids of any templates with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Show ids for all templates with template type code PP or PPT ?",
        "result": "Template_ID \nFROM \nTemplates \nWHERE \nTemplate_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Show ids for all templates that have the code PP or PPT .",
        "result": "Template_ID FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Show ids for all templates have template type code CV ?",
        "result": "Templates.Template_ID \nFROM Templates \nWHERE Templates.Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Show ids for all templates with version number later than 5 ?",
        "result": "Templates.Template_ID \nFROM Templates \nWHERE Templates.Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Show ids for all templates with a version number greater than 5 .",
        "result": "Template_ID \nFROM Templates \nWHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Show ids for all templates used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID\nFROM Templates\nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Show ids for all templates that is used by a document named Data base .",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents \nON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "Show ids for all templates with the description ' Presentation ' .",
        "result": "Templates.Template_ID \nFROM Templates \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show ids for all templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What are the ids for templates with template type code PP or PPT ?",
        "result": "Templates.Template_ID\nFROM Templates\nWHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What are the ids for templates that have the code PP or PPT .",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"CV\"  ",
        "question": "What are the ids for templates have template type code CV ?",
        "result": "Template_ID FROM Templates WHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "What are the ids for templates with version number later than 5 ?",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "What are the ids for templates with a version number greater than 5 .",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What are the ids for templates used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What are the ids for templates that is used by a document named Data base .",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "What are the ids for templates with the description ' Presentation ' .",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Ref_Template_Types \nON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids for templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "What are the ids of templates not used by any document .",
        "result": "Templates.Template_ID \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "What are the ids of templates that are not used in any documents ?",
        "result": "Templates.Template_ID \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"CV\"  ",
        "question": "What are the ids of templates have template type code CV ?",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "What are the ids of templates with version number later than 5 ?",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "What are the ids of templates with a version number greater than 5 .",
        "result": "Template_ID \nFROM \nTemplates \nWHERE \nVersion_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What are the ids of templates used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID\nFROM Templates\nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What are the ids of templates that is used by a document named Data base .",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "What are the ids of templates with the description ' Presentation ' .",
        "result": "Template_ID FROM Templates \nWHERE Template_Type_Code IN \n    (SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Presentation')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "Return the ids of templates not used by any document .",
        "result": "Templates.Template_ID \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Template_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "Return the ids of templates that are not used in any documents ?",
        "result": "Templates.Template_ID\nFROM Templates\nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Template_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the ids of templates have template type code CV ?",
        "result": "Template_ID FROM Templates WHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Return the ids of templates with version number later than 5 ?",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Return the ids of templates with a version number greater than 5 .",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the ids of templates used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID \nFROM \nTemplates \nINNER JOIN \nDocuments ON Templates.Template_ID = Documents.Template_ID \nWHERE \nDocuments.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the ids of templates that is used by a document named Data base .",
        "result": "Templates.Template_ID \nFROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "Return the ids of templates with the description ' Presentation ' .",
        "result": "Template_ID FROM Templates\nWHERE Template_Type_Code IN (\n    SELECT Template_Type_Code FROM Ref_Template_Types\n    WHERE Template_Type_Description = 'Presentation'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids of templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "How many templates with template type code PP or PPT ?",
        "result": "COUNT(*) FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "How many templates that have the code PP or PPT .",
        "result": "COUNT(*) FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from templates where  templates.version_number > 5  ",
        "question": "How many templates with version number later than 5 ?",
        "result": "COUNT(*) FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from templates where  templates.version_number > 5  ",
        "question": "How many templates with a version number greater than 5 .",
        "result": "COUNT(*) FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "How many templates used by document with the name ' Data base ' ?",
        "result": "COUNT(T.Template_ID)\nFROM Templates T\nJOIN Documents D ON T.Template_ID = D.Template_ID\nWHERE D.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "How many templates that is used by a document named Data base .",
        "result": "COUNT(DISTINCT Templates.Template_ID) \nFROM Templates \nJOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "How many templates with the description ' Presentation ' .",
        "result": "COUNT(*) FROM Templates \nINNER JOIN Ref_Template_Types \nON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates   except select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the version number and template type code for the template not used by any document .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates   except select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the version number and template type code for the template that are not used in any documents ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Template_ID NOT IN \n(SELECT Template_ID FROM Documents)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the version number and template type code for the template with template type code PP or PPT ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \n FROM Templates \n WHERE Templates.Template_Type_Code = 'PP' OR Templates.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the version number and template type code for the template that have the code PP or PPT .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \n FROM Templates \n WHERE Templates.Template_Type_Code IN ('PP', 'PPT');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "What is the version number and template type code for the template have template type code CV ?",
        "result": "Version_Number, Template_Type_Code \n FROM Templates \n WHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What is the version number and template type code for the template used by document with the name ' Data base ' ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code\nFROM Templates\nJOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "What is the version number and template type code for the template that is used by a document named Data base .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \n FROM Templates \n INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID \n WHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "What is the version number and template type code for the template with the description ' Presentation ' .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nINNER JOIN Ref_Template_Types \nON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the version number and template type code for the template with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates   except select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the version numbers and template type codes of templates not used by any document .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates   except select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the version numbers and template type codes of templates that are not used in any documents ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nLEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the version numbers and template type codes of templates with template type code PP or PPT ?",
        "result": "Version_Number, Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the version numbers and template type codes of templates that have the code PP or PPT .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the version numbers and template type codes of templates have template type code CV ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nWHERE Templates.Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the version numbers and template type codes of templates used by document with the name ' Data base ' ?",
        "result": "Templates.Version_Number, Templates.Template_Type_Code\nFROM Templates\nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the version numbers and template type codes of templates that is used by a document named Data base .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code\nFROM Templates\nJOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.version_number , templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "Return the version numbers and template type codes of templates with the description ' Presentation ' .",
        "result": "Templates.Version_Number, Templates.Template_Type_Code \nFROM Templates \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the version numbers and template type codes of templates with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Which template type code with template type code PP or PPT ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Which template type code with version number later than 5 ?",
        "result": "Template_Type_Code \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Which template type code with a version number greater than 5 .",
        "result": "Template_Type_Code \nFROM \nTemplates \nWHERE \nVersion_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "Which template type code with less than three templates .",
        "result": "Template_Type_Code\nFROM Ref_Template_Types\nWHERE Template_Type_Code IN (\n  SELECT Template_Type_Code\n  FROM Templates\n  GROUP BY Template_Type_Code\n  HAVING COUNT(*) < 3\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code with less than three templates . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Which template type code that are not used by any document .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code that are not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the type code of the template type with template type code PP or PPT ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the type code of the template type have template type code CV ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the type code of the template type with version number later than 5 ?",
        "result": "Template_Type_Code FROM Templates WHERE Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the type code of the template type with a version number greater than 5 .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nJOIN Templates \nON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "Return the type code of the template type that have fewer than 3 templates ?",
        "result": "Template_Type_Code\nFROM Ref_Template_Types\nWHERE Template_Type_Code NOT IN (\n  SELECT Template_Type_Code\n  FROM Templates\n  GROUP BY Template_Type_Code\n  HAVING COUNT(*) >= 3\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type that have fewer than 3 templates ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the type code of the template type that are not used for any document ?",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nWHERE Ref_Template_Types.Template_Type_Code NOT IN \n    (SELECT Templates.Template_Type_Code FROM Templates \n     INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type that are not used for any document ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Show all template type codes with template type code PP or PPT ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Show all template type codes have template type code CV ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'CV';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Show all template type codes with version number later than 5 ?",
        "result": "Template_Type_Code, Version_Number \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Show all template type codes with a version number greater than 5 .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nINNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Show all template type codes that are not used by any document .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Template_Type_Code IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes that are not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What are the codes of template types with template type code PP or PPT ?",
        "result": "Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code IN ('PP','PPT');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What are the codes of template types with version number later than 5 ?",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nINNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What are the codes of template types with a version number greater than 5 .",
        "result": "Template_Type_Code FROM Templates WHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What are the codes of template types that are not used for any document ?",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types that are not used for any document ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the template type code of the template not used by any document .",
        "result": "Ref_Template_Types.Template_Type_Code\nFROM Ref_Template_Types\nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code\nWHERE Templates.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "What is the template type code of the template that are not used in any documents ?",
        "result": "Ref_Template_Types.Template_Type_Code\nFROM Ref_Template_Types\nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code\nWHERE Templates.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the template type code of the template with template type code PP or PPT ?",
        "result": "Template_Type_Code \nFROM Templates \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What is the template type code of the template that have the code PP or PPT .",
        "result": "Template_Type_Code FROM Templates \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "What is the template type code of the template have template type code CV ?",
        "result": "Template_Type_Code FROM Templates WHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What is the template type code of the template with version number later than 5 ?",
        "result": "Templates.Template_Type_Code \nFROM Templates \nWHERE Templates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What is the template type code of the template with a version number greater than 5 .",
        "result": "Template_Type_Code\nFROM Templates\nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "What is the template type code of the template with the description ' Presentation ' .",
        "result": "Templates.Template_Type_Code \nFROM \nTemplates \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE \nRef_Template_Types.Template_Type_Description = 'Presentation';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the template type code of the template with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the template type code of the template not used by any document .",
        "result": "Ref_Template_Types.Template_Type_Code\nFROM Ref_Template_Types\nWHERE Ref_Template_Types.Template_Type_Code NOT IN \n(SELECT Templates.Template_Type_Code FROM Templates \nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the template type code of the template that are not used in any documents ?",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Template_Type_Code IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the template type code of the template with template type code PP or PPT ?",
        "result": "Template_Type_Code\nFROM Templates\nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the template type code of the template that have the code PP or PPT .",
        "result": "Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Template_Type_Code IN ('PP', 'PPT');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the template type code of the template have template type code CV ?",
        "result": "Template_Type_Code FROM Templates WHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the template type code of the template with version number later than 5 ?",
        "result": "Templates.Template_Type_Code\nFROM Templates\nWHERE Templates.Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Return the template type code of the template with a version number greater than 5 .",
        "result": "Template_Type_Code\nFROM \nTemplates\nWHERE \nVersion_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates join ref_template_types on Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code where  ref_template_types.template_type_description = \"Presentation\"  ",
        "question": "Return the template type code of the template with the description ' Presentation ' .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM \nRef_Template_Types \nINNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE \nRef_Template_Types.Template_Type_Description = 'Presentation'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type code of the template with the description ' Presentation ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents where  documents.document_description like \"%w%\"  ",
        "question": "What are the names of documents with description with the letter ' w ' in it ?",
        "result": "Documents.Document_Name \nFROM Documents \nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents where  documents.document_description like \"%w%\"  ",
        "question": "What are the names of documents that contain the letter w in their description .",
        "result": "Documents.Document_Name \nFROM Documents \nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "What are the names of documents named ' Robbin CV ' ?",
        "result": "Document_Name FROM Documents WHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "What are the names of documents with the name Robbin CV .",
        "result": "Document_Name \nFROM Documents \nWHERE Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What are the names of documents are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_Name \nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "What are the names of documents that use the PPT template type .",
        "result": "Documents.Document_Name\nFROM Documents\nJOIN Templates ON Documents.Template_ID = Templates.Template_ID\nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code\nWHERE Ref_Template_Types.Template_Type_Description = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the names of documents that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "Which template type code with less than three templates .",
        "result": "Template_Type_Code\nFROM Templates\nGROUP BY Template_Type_Code\nHAVING COUNT(*) < 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code with less than three templates . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Which template type code that are not used by any document .",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nWHERE Ref_Template_Types.Template_Type_Code NOT IN (\n    SELECT Templates.Template_Type_Code \n    FROM Templates \n    INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Which template type code that are not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "Return the code of the template type that have fewer than 3 templates ?",
        "result": "Template_Type_Code \nFROM \nRef_Template_Types \nWHERE \nTemplate_Type_Code IN (SELECT Template_Type_Code FROM Templates GROUP BY Template_Type_Code HAVING COUNT(*) < 3)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the code of the template type that have fewer than 3 templates ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates   except select templates.template_type_code from documents join templates on Documents.Template_ID = Templates.Template_ID  ",
        "question": "Return the code of the template type that are not used for any document ?",
        "result": "Ref_Template_Types.Template_Type_Code \nFROM Ref_Template_Types \nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Templates.Template_Type_Code IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the code of the template type that are not used for any document ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Show all template type codes with template type code PP or PPT ?",
        "result": "Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Show all template type codes have template type code CV ?",
        "result": "Template_Type_Code\nFROM Ref_Template_Types\nWHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Show all template type codes with version number later than 5 ?",
        "result": "Template_Type_Code, Version_Number \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "Show all template type codes with a version number greater than 5 .",
        "result": "Template_Type_Code \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "Show all template type codes with less than three templates .",
        "result": "Ref_Template_Types.Template_Type_Code\nFROM Ref_Template_Types\nLEFT JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code\nGROUP BY Ref_Template_Types.Template_Type_Code\nHAVING COUNT(Templates.Template_ID) < 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all template type codes with less than three templates . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "What are the codes of template types with template type code PP or PPT ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What are the codes of template types with version number later than 5 ?",
        "result": "Template_Type_Code FROM Templates \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates where  templates.version_number > 5  ",
        "question": "What are the codes of template types with a version number greater than 5 .",
        "result": "Template_Type_Code \nFROM \nRef_Template_Types \nINNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE \nTemplates.Version_Number > 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_type_code from templates  group by templates.template_type_code having  count(*) < 3 ",
        "question": "What are the codes of template types that have fewer than 3 templates ?",
        "result": "Template_Type_Code \nFROM Ref_Template_Types \nWHERE Template_Type_Code NOT IN (\n    SELECT Template_Type_Code \n    FROM Templates \n    GROUP BY Template_Type_Code \n    HAVING COUNT(*) >= 3\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the codes of template types that have fewer than 3 templates ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select ref_template_types.template_type_description from ref_template_types where  ref_template_types.template_type_description = \"Book\"  ",
        "question": "Return the template type description of the template type with the description ' Book ' .",
        "result": "Ref_Template_Types.Template_Type_Description \nFROM Ref_Template_Types \nWHERE Ref_Template_Types.Template_Type_Description = 'Book'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the template type description of the template type with the description ' Book ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select ref_template_types.template_type_code from ref_template_types where  ref_template_types.template_type_code = \"AD\"  ",
        "question": "Return the type code of the template type with the code AD .",
        "result": "Template_Type_Code\nFROM Ref_Template_Types\nWHERE Template_Type_Code = 'AD';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the type code of the template type with the code AD . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "Return the ids corresponding to templates not used by any document .",
        "result": "Templates.Template_ID\nFROM Templates\nLEFT JOIN Documents\nON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Template_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates not used by any document . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates   except select documents.template_id from documents  ",
        "question": "Return the ids corresponding to templates that are not used in any documents ?",
        "result": "Templates.Template_ID \nFROM Templates \nLEFT JOIN Documents \nON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates that are not used in any documents ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the ids corresponding to templates with template type code PP or PPT ?",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates with template type code PP or PPT ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"PP\" or templates.template_type_code = \"PPT\"  ",
        "question": "Return the ids corresponding to templates that have the code PP or PPT .",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Type_Code IN ('PP', 'PPT')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates that have the code PP or PPT . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.template_type_code = \"CV\"  ",
        "question": "Return the ids corresponding to templates have template type code CV ?",
        "result": "Template_ID \nFROM Templates \nWHERE Template_Type_Code = 'CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates have template type code CV ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Return the ids corresponding to templates with version number later than 5 ?",
        "result": "Template_ID FROM Templates WHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates with version number later than 5 ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from templates where  templates.version_number > 5  ",
        "question": "Return the ids corresponding to templates with a version number greater than 5 .",
        "result": "Template_ID \nFROM Templates \nWHERE Version_Number > 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates with a version number greater than 5 . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the ids corresponding to templates used by document with the name ' Data base ' ?",
        "result": "Templates.Template_ID \nFROM Templates \nJOIN Documents ON Templates.Template_ID = Documents.Template_ID \nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates used by document with the name ' Data base ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select templates.template_id from documents join templates on Documents.Template_ID = Templates.Template_ID where  documents.document_name = \"Data base\"  ",
        "question": "Return the ids corresponding to templates that is used by a document named Data base .",
        "result": "Templates.Template_ID\nFROM Templates\nINNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID\nWHERE Documents.Document_Name = 'Data base'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the ids corresponding to templates that is used by a document named Data base . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "How many paragraphs for the document with name ' Welcome to NY ' .",
        "result": "COUNT(*) \nFROM Paragraphs p \nJOIN Documents d ON p.Document_ID = d.Document_ID \nWHERE d.Document_Name = 'Welcome to NY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many paragraphs for the document with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "How many paragraphs for the document with the name ' Customer reviews ' ?",
        "result": "COUNT(*) FROM Paragraphs \nWHERE Document_ID = (\n   SELECT Document_ID FROM Documents\n   WHERE Document_Name = 'Customer reviews'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many paragraphs for the document with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs where  paragraphs.paragraph_id in (select Paragraphs.Paragraph_ID from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select Paragraphs.Paragraph_ID from paragraphs where  paragraphs.paragraph_text = \"Ireland\"   ) ",
        "question": "How many paragraphs for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "COUNT(*) \nFROM Paragraphs \nWHERE Document_ID IN \n    (SELECT Document_ID \n     FROM Paragraphs \n     WHERE Paragraph_Text LIKE '%Brazil%') \nAND Document_ID IN \n    (SELECT Document_ID \n     FROM Paragraphs \n     WHERE Paragraph_Text LIKE '%Ireland%');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### How many paragraphs for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "Count the number of paragraphs with text ' Korea ' .",
        "result": "COUNT(*) FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of paragraphs with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "Count the number of paragraphs that includes the text ' Korea ' ?",
        "result": "COUNT(*) FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of paragraphs that includes the text ' Korea ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select count(*) from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "Count the number of paragraphs in the document titled ' Welcome to NY ' ?",
        "result": "COUNT(*) FROM Paragraphs \nWHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Welcome to NY')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Count the number of paragraphs in the document titled ' Welcome to NY ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "Show paragraph details for paragraph in the document named ' Summer Show ' .",
        "result": "Paragraphs.* FROM Paragraphs\nINNER JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID\nWHERE Documents.Document_Name = 'Summer Show'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show paragraph details for paragraph in the document named ' Summer Show ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "Show paragraph details for paragraph in the document titled ' Welcome to NY ' ?",
        "result": "Paragraphs.*\nFROM Paragraphs\nINNER JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID\nWHERE Documents.Document_Name = 'Welcome to NY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show paragraph details for paragraph in the document titled ' Welcome to NY ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs   order by paragraphs.document_id asc",
        "question": "Show paragraph details for paragraph ordered by id .",
        "result": "* FROM Paragraphs ORDER BY Paragraph_ID;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show paragraph details for paragraph ordered by id . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.other_details from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Show paragraph details for paragraph with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Paragraph_ID, Document_ID, Paragraph_Text, Other_Details\nFROM Paragraphs\nWHERE Paragraph_Text IN ('Brazil', 'Ireland')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show paragraph details for paragraph with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "What are the details for the paragraph in the document named ' Summer Show ' .",
        "result": "Paragraph_Text, Other_Details \nFROM Paragraphs \nWHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the details for the paragraph in the document named ' Summer Show ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "What are the details for the paragraph in the document titled ' Welcome to NY ' ?",
        "result": "Paragraph_Text, Other_Details\nFROM Paragraphs\nINNER JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID\nWHERE Documents.Document_Name = 'Welcome to NY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the details for the paragraph in the document titled ' Welcome to NY ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.other_details from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.other_details from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "What are the details for the paragraph with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Paragraph_ID, Document_ID, Paragraph_Text, Other_Details \n FROM Paragraphs \n WHERE Paragraph_Text IN ('Brazil', 'Ireland')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the details for the paragraph with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "Show all paragraph ids and texts for the document with name ' Summer Show ' ?",
        "result": "Paragraph_ID, Paragraph_Text \nFROM Paragraphs \nWHERE Document_ID = (SELECT Document_ID \n                     FROM Documents \n                     WHERE Document_Name = 'Summer Show')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all paragraph ids and texts for the document with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "Show all paragraph ids and texts for the document with the name ' Customer reviews ' ?",
        "result": "Paragraph_ID, Paragraph_Text\nFROM Paragraphs\nWHERE Document_ID = (\n  SELECT Document_ID \n  FROM Documents \n  WHERE Document_Name = 'Customer reviews'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all paragraph ids and texts for the document with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Show all paragraph ids and texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "Paragraph_ID, Paragraph_Text \n FROM \n Paragraphs \n WHERE \n Document_ID IN \n (SELECT Document_ID \n FROM \n Paragraphs \n WHERE \n Paragraph_Text LIKE '%Brazil%' \n INTERSECT \n SELECT Document_ID \n FROM \n Paragraphs \n WHERE \n Paragraph_Text LIKE '%Ireland%')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all paragraph ids and texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "What are the ids and texts of paragraphs in the document named ' Summer Show ' .",
        "result": "Paragraph_ID, Paragraph_Text \nFROM Paragraphs \nWHERE Document_ID = (SELECT Document_ID FROM Documents WHERE Document_Name = 'Summer Show')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids and texts of paragraphs in the document named ' Summer Show ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "What are the ids and texts of paragraphs with text ' Korea ' .",
        "result": "Paragraph_ID, Paragraph_Text \nFROM Paragraphs \nWHERE Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids and texts of paragraphs with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_id , paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "What are the ids and texts of paragraphs that includes the text ' Korea ' ?",
        "result": "Paragraph_ID, Paragraph_Text \nFROM Paragraphs \nWHERE Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids and texts of paragraphs that includes the text ' Korea ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_text from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "What are the paragraph texts for the document with name ' Summer Show ' ?",
        "result": "Paragraph_Text \nFROM Paragraphs \nINNER JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID \nWHERE Documents.Document_Name = 'Summer Show'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the paragraph texts for the document with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_text from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "What are the paragraph texts for the document with name ' Welcome to NY ' .",
        "result": "Paragraph_Text \nFROM Paragraphs \nJOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID \nWHERE Documents.Document_Name = 'Welcome to NY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the paragraph texts for the document with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.paragraph_text from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "What are the paragraph texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "Paragraph_Text \nFROM Paragraphs \nWHERE Document_ID IN \n    (SELECT Document_ID FROM Documents \n     WHERE Template_ID IN \n         (SELECT Template_ID FROM Templates \n          WHERE Template_Type_Code IN \n              (SELECT Template_Type_Code FROM Ref_Template_Types \n               WHERE Template_Type_Description LIKE '%')) \n     AND Document_ID IN \n         (SELECT Document_ID FROM Paragraphs \n          WHERE Paragraph_Text LIKE '%Brazil%') \n     AND Document_ID IN \n         (SELECT Document_ID FROM Paragraphs \n          WHERE Paragraph_Text LIKE '%Ireland%'))",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the paragraph texts for the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id , count(*) from paragraphs where  paragraphs.paragraph_text = \"Korea\"  group by paragraphs.document_id ",
        "question": "Show all document ids and the number of paragraphs in each document . with text ' Korea ' .",
        "result": "Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID) as Num_Of_Paragraphs\nFROM Documents \nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'\nGROUP BY Documents.Document_ID;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show all document ids and the number of paragraphs in each document . with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id , count(*) from paragraphs where  paragraphs.paragraph_text = \"Korea\"  group by paragraphs.document_id ",
        "question": "Return the different document ids along with the number of paragraphs corresponding to each , with text ' Korea ' .",
        "result": "Documents.Document_ID, COUNT(Paragraphs.Paragraph_ID)\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'\nGROUP BY Documents.Document_ID",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the different document ids along with the number of paragraphs corresponding to each , with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "List all document ids with text ' Korea ' .",
        "result": "Document_ID FROM Documents WHERE Document_Name LIKE '%Korea%' OR Document_Description LIKE '%Korea%' OR EXISTS (SELECT * FROM Paragraphs WHERE Paragraphs.Document_ID = Documents.Document_ID AND Paragraphs.Paragraph_Text LIKE '%Korea%')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### List all document ids with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs   order by paragraphs.document_id asc",
        "question": "List all document ids ordered by id .",
        "result": "Document_ID \nFROM Documents \nORDER BY Document_ID ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### List all document ids ordered by id . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2 ",
        "question": "List all document ids with 1 to 2 paragraphs ?",
        "result": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nGROUP BY Documents.Document_ID\nHAVING COUNT(Paragraphs.Paragraph_ID) BETWEEN 1 AND 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### List all document ids with 1 to 2 paragraphs ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "List all document ids with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%'\nAND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### List all document ids with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "What are the ids of documents with name ' Summer Show ' ?",
        "result": "Document_ID \nFROM Documents \nWHERE Document_Name = 'Summer Show';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "What are the ids of documents with text ' Korea ' .",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs \nON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "What are the ids of documents with name ' Welcome to NY ' .",
        "result": "Document_ID \nFROM Documents \nWHERE Document_Name = 'Welcome to NY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "What are the ids of documents with the name ' Customer reviews ' ?",
        "result": "Document_ID\nFROM\nDocuments\nWHERE\nDocument_Name = 'Customer reviews';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2 ",
        "question": "What are the ids of documents that have between one and two paragraphs .",
        "result": "Documents.Document_ID \nFROM Documents \nWHERE Documents.Document_ID IN (\n    SELECT Paragraphs.Document_ID \n    FROM Paragraphs \n    GROUP BY Paragraphs.Document_ID \n    HAVING COUNT(*) BETWEEN 1 AND 2\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents that have between one and two paragraphs . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "What are the ids of documents with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%' AND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "What are the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "Documents.Document_ID\nFROM Documents\nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%'\nAND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "What is the document id and name using templates with template type code BK .",
        "result": "Documents.Document_ID, Documents.Document_Name \nFROM Documents \nINNER JOIN Templates ON Templates.Template_ID = Documents.Template_ID \nINNER JOIN Ref_Template_Types ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id and name using templates with template type code BK . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents where  documents.document_description like \"%w%\"  ",
        "question": "Return the id and name of the document with description with the letter ' w ' in it ?",
        "result": "Documents.Document_ID, Documents.Document_Name\nFROM Documents\nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document with description with the letter ' w ' in it ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents where  documents.document_description like \"%w%\"  ",
        "question": "Return the id and name of the document that contain the letter w in their description .",
        "result": "Documents.Document_ID, Documents.Document_Name \nFROM Documents \nWHERE Documents.Document_Description LIKE '%w%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document that contain the letter w in their description . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Return the id and name of the document named ' Robbin CV ' ?",
        "result": "Documents.Document_ID, Documents.Document_Name\nFROM Documents\nWHERE Documents.Document_Name = 'Robbin CV'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document named ' Robbin CV ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents where  documents.document_name = \"Robbin CV\"  ",
        "question": "Return the id and name of the document with the name Robbin CV .",
        "result": "Documents.Document_ID, Documents.Document_Name \n FROM Documents \n WHERE Documents.Document_Name = 'Robbin CV';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document with the name Robbin CV . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the id and name of the document are using the template with type code ' PPT ' ?",
        "result": "Documents.Document_ID, Documents.Document_Name\nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'PPT'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document are using the template with type code ' PPT ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"PPT\"  ",
        "question": "Return the id and name of the document that use the PPT template type .",
        "result": "Documents.Document_ID, Documents.Document_Name\nFROM Documents \nINNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID \nINNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Description = 'PPT';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document that use the PPT template type . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select documents.document_id , documents.document_name from documents join templates on Documents.Template_ID = Templates.Template_ID where  templates.template_type_code = \"BK\"  ",
        "question": "Return the id and name of the document that use templates with the code BK ?",
        "result": "Documents.Document_ID, Documents.Document_Name \nFROM Documents \nJOIN Templates ON Documents.Template_ID = Templates.Template_ID \nJOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code \nWHERE Ref_Template_Types.Template_Type_Code = 'BK'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id and name of the document that use templates with the code BK ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "Return the id of the document with name ' Summer Show ' ?",
        "result": "Document_ID\nFROM Documents\nWHERE Document_Name = 'Summer Show'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "Return the id of the document with text ' Korea ' .",
        "result": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "Return the id of the document with name ' Welcome to NY ' .",
        "result": "Documents.Document_ID\nFROM Documents\nWHERE Documents.Document_Name = 'Welcome to NY';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "Return the id of the document with the name ' Customer reviews ' ?",
        "result": "Documents.Document_ID \nFROM \nDocuments \nWHERE \nDocuments.Document_Name = 'Customer reviews'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs   order by paragraphs.document_id asc",
        "question": "Return the id of the document ordered by id .",
        "result": "Document_ID\nFROM Documents\nORDER BY Document_ID ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document ordered by id . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) >= 2 ",
        "question": "Return the id of the document that have 2 or more paragraphs ?",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document that have 2 or more paragraphs ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2 ",
        "question": "Return the id of the document that have between one and two paragraphs .",
        "result": "Documents.Document_ID \nFROM Documents \nWHERE Document_ID IN (\n  SELECT Document_ID \n  FROM Paragraphs \n  GROUP BY Document_ID \n  HAVING COUNT(Paragraph_ID) BETWEEN 1 AND 2\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document that have between one and two paragraphs . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Return the id of the document with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Documents.Document_ID\nFROM Documents\nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%' AND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Return the id of the document that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%'\nAND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Return the id of the document that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "What is the document id with text ' Korea ' .",
        "result": "Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) >= 2 ",
        "question": "What is the document id with at least two paragraphs .",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id with at least two paragraphs . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "What is the document id with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Documents.Document_ID \nFROM \n  Documents \n  INNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE \n  Paragraphs.Paragraph_Text = 'Brazil' \n  AND Documents.Document_ID IN (SELECT Document_ID FROM Paragraphs WHERE Paragraph_Text = 'Ireland')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What is the document id with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "Give the ids of documents with name ' Summer Show ' ?",
        "result": "Document_ID \nFROM Documents \nWHERE Document_Name = 'Summer Show'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "Give the ids of documents with text ' Korea ' .",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "Give the ids of documents with name ' Welcome to NY ' .",
        "result": "Documents.Document_ID \nFROM Documents \nWHERE Documents.Document_Name = 'Welcome to NY'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "Give the ids of documents with the name ' Customer reviews ' ?",
        "result": "Documents.Document_ID \nFROM Documents \nWHERE Documents.Document_Name = 'Customer reviews'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs   order by paragraphs.document_id asc",
        "question": "Give the ids of documents ordered by id .",
        "result": "Document_ID FROM Documents ORDER BY Document_ID ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents ordered by id . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) >= 2 ",
        "question": "Give the ids of documents that have 2 or more paragraphs ?",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(*) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents that have 2 or more paragraphs ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Give the ids of documents with paragraph text ' Brazil ' and ' Ireland ' .",
        "result": "Documents.Document_ID \nFROM Documents \nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%' AND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents with paragraph text ' Brazil ' and ' Ireland ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Brazil\"   intersect select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Ireland\"  ",
        "question": "Give the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ?",
        "result": "Documents.Document_ID\nFROM Documents\nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Brazil%'\nAND Paragraphs.Paragraph_Text LIKE '%Ireland%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Give the ids of documents that contain the paragraph text ' Brazil ' and ' Ireland ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "Show the document id with text ' Korea ' .",
        "result": "Document_ID FROM Paragraphs WHERE Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show the document id with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs   order by paragraphs.document_id asc",
        "question": "Show the document id ordered by id .",
        "result": "Document_ID\nFROM Documents\nORDER BY Document_ID ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show the document id ordered by id . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) >= 2 ",
        "question": "Show the document id with at least two paragraphs .",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show the document id with at least two paragraphs . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2 ",
        "question": "Show the document id with 1 to 2 paragraphs ?",
        "result": "Documents.Document_ID\nFROM Documents\nJOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nGROUP BY Documents.Document_ID\nHAVING COUNT(Paragraphs.Paragraph_ID) BETWEEN 1 AND 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### Show the document id with 1 to 2 paragraphs ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Summer Show\"  ",
        "question": "What are the ids of documents with name ' Summer Show ' ?",
        "result": "Document_ID \nFROM Documents \nWHERE Document_Name = 'Summer Show';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with name ' Summer Show ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs where  paragraphs.paragraph_text = \"Korea\"  ",
        "question": "What are the ids of documents with text ' Korea ' .",
        "result": "Documents.Document_ID\nFROM Documents\nINNER JOIN Paragraphs ON Documents.Document_ID = Paragraphs.Document_ID\nWHERE Paragraphs.Paragraph_Text LIKE '%Korea%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with text ' Korea ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Welcome to NY\"  ",
        "question": "What are the ids of documents with name ' Welcome to NY ' .",
        "result": "Document_ID FROM Documents WHERE Document_Name = ' Welcome to NY '",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with name ' Welcome to NY ' . \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs join documents on Paragraphs.Document_ID = Documents.Document_ID where  documents.document_name = \"Customer reviews\"  ",
        "question": "What are the ids of documents with the name ' Customer reviews ' ?",
        "result": "Document_ID \nFROM Documents \nWHERE Document_Name = 'Customer reviews'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents with the name ' Customer reviews ' ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) >= 2 ",
        "question": "What are the ids of documents that have 2 or more paragraphs ?",
        "result": "Documents.Document_ID \nFROM Documents \nINNER JOIN Paragraphs \nON Documents.Document_ID = Paragraphs.Document_ID \nGROUP BY Documents.Document_ID \nHAVING COUNT(Paragraphs.Paragraph_ID) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents that have 2 or more paragraphs ? \n SELECT"
    },
    {
        "db_id": "cre_Doc_Template_Mgt",
        "query": "select paragraphs.document_id from paragraphs  group by paragraphs.document_id having  count(*) between 1 and 2 ",
        "question": "What are the ids of documents that have between one and two paragraphs .",
        "result": "Documents.Document_ID FROM Documents\nWHERE Documents.Document_ID IN (\nSELECT Document_ID FROM Paragraphs\nGROUP BY Document_ID\nHAVING COUNT(*) BETWEEN 1 AND 2\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Ref_Template_Types(Template_Type_Code,Template_Type_Description)\n;# Templates(Template_ID,Version_Number,Template_Type_Code,Date_Effective_From,Date_Effective_To,Template_Details)\n;# Documents(Document_ID,Template_ID,Document_Name,Document_Description,Other_Details)\n;# Paragraphs(Paragraph_ID,Document_ID,Paragraph_Text,Other_Details)\n.# \n ### What are the ids of documents that have between one and two paragraphs . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "List the names of teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age = 32 OR Age = 33;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "List the names of teachers who are aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32, 33);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "List the names of teachers that teach at least two courses .",
        "result": "teacher.Name FROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "List the names of teachers who teach at least two courses ?",
        "result": "teacher.Name \nFROM teacher \nJOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(course_arrange.Course_ID) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "List the names of teachers who have not been arranged to teach courses .",
        "result": "teacher.Name\nFROM teacher\nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "List the names of teachers whose courses have not been arranged ?",
        "result": "teacher.Name \nFROM teacher \nLEFT JOIN course_arrange \nON teacher.Teacher_ID = course_arrange.Teacher_ID \nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age = 32 OR Age = 33;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers who are aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32, 33);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers that teach at least two courses .",
        "result": "teacher.Name\nFROM teacher\nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nGROUP BY teacher.Teacher_ID\nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers who teach at least two courses ?",
        "result": "teacher.Name\nFROM teacher\nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nGROUP BY teacher.Name\nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers who have not been arranged to teach courses .",
        "result": "Name\nFROM teacher\nWHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers whose courses have not been arranged ?",
        "result": "teacher.Name\nFROM teacher\nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "Show the name of teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "Show the name of teachers ordered by ascending age ?",
        "result": "Name \nFROM teacher \nORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "Show the name of teachers that teach at least two courses .",
        "result": "teacher.Name\nFROM teacher\nJOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nGROUP BY teacher.Teacher_ID\nHAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "Show the name of teachers who teach at least two courses ?",
        "result": "teacher.Name \nFROM teacher \nJOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "Show the name of teachers who have not been arranged to teach courses .",
        "result": "teacher.Name \nFROM teacher \nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "Show the name of teachers whose courses have not been arranged ?",
        "result": "teacher.Name \nFROM teacher \nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nWHERE course_arrange.Course_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show the name of teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers ordered by ascending age ?",
        "result": "Name FROM teacher ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers that teach at least two courses .",
        "result": "teacher.Name \nFROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers who teach at least two courses ?",
        "result": "teacher.Name \nFROM teacher \nJOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Name \nHAVING COUNT(course_arrange.Course_ID) >= 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers who have not been arranged to teach courses .",
        "result": "teacher.Name \nFROM teacher \nWHERE teacher.Teacher_ID NOT IN \n(SELECT course_arrange.Teacher_ID FROM course_arrange)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers whose courses have not been arranged ?",
        "result": "teacher.Name\nFROM teacher\nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.hometown from teacher   order by teacher.age asc",
        "question": "What are the towns in ascending order of age .",
        "result": "teacher.Hometown FROM teacher \nORDER BY teacher.Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the towns in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "Show names of teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "Show names of teachers ordered by ascending age ?",
        "result": "Name \nFROM teacher \nORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "Show names of teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age = 32 OR Age = 33",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "Show names of teachers who are aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32, 33);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "Show names of teachers who have not been arranged to teach courses .",
        "result": "teacher.Name\nFROM teacher\nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nWHERE course_arrange.Course_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "Show names of teachers whose courses have not been arranged ?",
        "result": "teacher.Name \nFROM teacher \nWHERE teacher.Teacher_ID NOT IN (SELECT course_arrange.Teacher_ID FROM course_arrange)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### Show names of teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers ordered by ascending age ?",
        "result": "Name FROM teacher ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32, 33)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers who are aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age = 32 OR Age = 33",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers who have not been arranged to teach courses .",
        "result": "teacher.Name\nFROM teacher\nWHERE teacher.Teacher_ID NOT IN \n    (SELECT course_arrange.Teacher_ID\n     FROM course_arrange)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who have not been arranged to teach courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.teacher_id not in (select course_arrange.Teacher_ID from course_arrange  )  ",
        "question": "What are the names of the teachers whose courses have not been arranged ?",
        "result": "teacher.Name FROM teacher\nLEFT JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nWHERE course_arrange.Teacher_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers whose courses have not been arranged ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "List the names of teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "List the names of teachers ordered by ascending age ?",
        "result": "Name FROM teacher ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "List the names of teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32,33);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "List the names of teachers who are aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age = 32 OR Age = 33",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "List the names of teachers that teach at least two courses .",
        "result": "teacher.Name \nFROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Name \nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "List the names of teachers who teach at least two courses ?",
        "result": "teacher.Name\nFROM teacher\nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID\nGROUP BY teacher.Teacher_ID\nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### List the names of teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers in ascending order of age .",
        "result": "Name FROM teacher ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers in ascending order of age . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher   order by teacher.age asc",
        "question": "What are the names of the teachers ordered by ascending age ?",
        "result": "Name FROM teacher ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers ordered by ascending age ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers aged either 32 or 33 ?",
        "result": "Name FROM teacher WHERE Age IN (32,33)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from teacher where  teacher.age = 32 or teacher.age = 33  ",
        "question": "What are the names of the teachers who are aged either 32 or 33 ?",
        "result": "Name \nFROM teacher \nWHERE Age = 32 OR Age = 33",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who are aged either 32 or 33 ? \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers that teach at least two courses .",
        "result": "teacher.Name \nFROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Name \nHAVING COUNT(DISTINCT course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers that teach at least two courses . \n SELECT"
    },
    {
        "db_id": "course_teach",
        "query": "select teacher.name from course_arrange join teacher on course_arrange.Teacher_ID = teacher.Teacher_ID  group by teacher.name having  count(*) >= 2 ",
        "question": "What are the names of the teachers who teach at least two courses ?",
        "result": "teacher.Name \nFROM teacher \nINNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID \nGROUP BY teacher.Teacher_ID \nHAVING COUNT(course_arrange.Course_ID) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# course(Course_ID,Staring_Date,Course)\n;# teacher(Teacher_ID,Name,Age,Hometown)\n;# course_arrange(Course_ID,Teacher_ID,Grade)\n.# \n ### What are the names of the teachers who teach at least two courses ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select visitor.name from visitor where  visitor.level_of_membership > 4   order by visitor.age desc",
        "question": "Find the names of the visitors whose membership level is higher than 4 , and sort by their age from old to young .",
        "result": "visitor.Name \nFROM visitor \nWHERE visitor.Level_of_membership > 4 \nORDER BY visitor.Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the names of the visitors whose membership level is higher than 4 , and sort by their age from old to young . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select visitor.name , visitor.level_of_membership from visitor where  visitor.level_of_membership > 4   order by visitor.level_of_membership desc",
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4 , and order the results by the level from high to low .",
        "result": "visitor.Name, visitor.Level_of_membership \nFROM visitor \nWHERE visitor.Level_of_membership > 4 \nORDER BY visitor.Level_of_membership DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the name and membership level of the visitors whose membership level is higher than 4 , and order the results by the level from high to low . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.museum_id , museum.name from museum where  museum.open_year < 2009  ",
        "question": "Find the id and name of the museum that were open before 2009 .",
        "result": "Museum_ID, Name \nFROM museum \nWHERE Open_Year < 2009;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the id and name of the museum that were open before 2009 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.museum_id , museum.name from museum where  museum.name = \"Plaza Museum\"  ",
        "question": "Find the id and name of the museum named Plaza Museum ?",
        "result": "Museum_ID, Name \nFROM museum \nWHERE Name = 'Plaza Museum'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the id and name of the museum named Plaza Museum ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.museum_id , museum.name from museum where  museum.open_year > 2010  ",
        "question": "Find the id and name of the museum opened after 2010 .",
        "result": "Museum_ID, Name \nFROM museum \nWHERE Open_Year > 2010;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the id and name of the museum opened after 2010 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.museum_id , museum.name from museum where  museum.museum_id not in (select visit.Museum_ID from visit  )  ",
        "question": "Find the id and name of the museum that had no visitor yet ?",
        "result": "Museum_ID, Name\nFROM museum\nWHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the id and name of the museum that had no visitor yet ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select avg(museum.num_of_staff) from museum where  museum.name = \"Plaza Museum\"  ",
        "question": "Find the average number of staff working for the museums named Plaza Museum ?",
        "result": "AVG(Num_of_Staff) \nFROM museum \nWHERE Name = 'Plaza Museum'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the average number of staff working for the museums named Plaza Museum ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select avg(museum.num_of_staff) from museum where  museum.open_year > 2010  ",
        "question": "Find the average number of staff working for the museums opened after 2010 .",
        "result": "AVG(Num_of_Staff) FROM museum WHERE Open_Year > 2010",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the average number of staff working for the museums opened after 2010 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select avg(museum.num_of_staff) from museum where  museum.museum_id not in (select visit.Museum_ID from visit  )  ",
        "question": "Find the average number of staff working for the museums that had no visitor yet ?",
        "result": "AVG(Num_of_Staff) FROM museum WHERE Museum_ID NOT IN (SELECT DISTINCT Museum_ID FROM visit);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the average number of staff working for the museums that had no visitor yet ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.num_of_staff , museum.open_year from museum   order by museum.num_of_staff desc limit 1 ",
        "question": "What are the opening year and staff number of the museum that has the most staff members ?",
        "result": "Open_Year, Num_of_Staff \nFROM museum \nWHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What are the opening year and staff number of the museum that has the most staff members ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.num_of_staff , museum.open_year from museum where  museum.open_year < 2009  ",
        "question": "What are the opening year and staff number of the museum that were open before 2009 .",
        "result": "Open_Year, Num_of_Staff FROM museum WHERE Open_Year < 2009;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What are the opening year and staff number of the museum that were open before 2009 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.num_of_staff , museum.open_year from museum where  museum.open_year > 2010  ",
        "question": "What are the opening year and staff number of the museum opened after 2010 .",
        "result": "Open_Year, Num_of_Staff FROM museum\nWHERE Open_Year > 2010;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What are the opening year and staff number of the museum opened after 2010 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.num_of_staff , museum.open_year from museum where  museum.museum_id not in (select visit.Museum_ID from visit  )  ",
        "question": "What are the opening year and staff number of the museum that had no visitor yet ?",
        "result": "m.Open_Year, m.Num_of_Staff\nFROM museum m\nLEFT JOIN visit v ON m.Museum_ID = v.Museum_ID\nWHERE v.Museum_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What are the opening year and staff number of the museum that had no visitor yet ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select visitor.id , visitor.name , visitor.age from visitor where  visitor.level_of_membership <= 4  ",
        "question": "find the id , name and age for visitors whose membership level is not higher than 4 ?",
        "result": "visitor.ID, visitor.Name, visitor.Age \n FROM visitor \n WHERE visitor.Level_of_membership <= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### find the id , name and age for visitors whose membership level is not higher than 4 ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select visitor.id , visitor.name , visitor.level_of_membership from visitor where  visitor.level_of_membership <= 4  ",
        "question": "What are the id , name and membership level of visitors whose membership level is not higher than 4 ?",
        "result": "ID, Name, Level_of_membership \nFROM visitor \nWHERE Level_of_membership <= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What are the id , name and membership level of visitors whose membership level is not higher than 4 ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.name from museum   order by museum.num_of_staff desc limit 1 ",
        "question": "What is the name of the museum that has the most staff members ?",
        "result": "Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What is the name of the museum that has the most staff members ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.name from museum where  museum.open_year < 2009  ",
        "question": "What is the name of the museum that were open before 2009 .",
        "result": "Name FROM museum WHERE Open_Year < 2009;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What is the name of the museum that were open before 2009 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.name from museum where  museum.name = \"Plaza Museum\"  ",
        "question": "What is the name of the museum named Plaza Museum ?",
        "result": "Name FROM museum WHERE Name='Plaza Museum';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What is the name of the museum named Plaza Museum ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select museum.name from museum where  museum.open_year > 2010  ",
        "question": "What is the name of the museum opened after 2010 .",
        "result": "Name FROM museum\nWHERE Open_Year > 2010;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### What is the name of the museum opened after 2010 . \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select visitor.name , visitor.age from visitor where  visitor.level_of_membership <= 4  ",
        "question": "Find the name and age of the visitor whose membership level is not higher than 4 ?",
        "result": "visitor.Name, visitor.Age \n FROM visitor\n WHERE visitor.Level_of_membership <= 4",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### Find the name and age of the visitor whose membership level is not higher than 4 ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select count(*) from museum where  museum.open_year > 2013 or museum.name = \"Plaza Museum\"  ",
        "question": "How many museums were opened after 2013 or named Plaza Museum ?",
        "result": "COUNT(*) \nFROM museum \nWHERE Open_Year > 2013 OR Name = 'Plaza Museum';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### How many museums were opened after 2013 or named Plaza Museum ? \n SELECT"
    },
    {
        "db_id": "museum_visit",
        "query": "select count(*) from museum where  museum.open_year > 2013 or museum.open_year > 2010  ",
        "question": "How many museums were opened after 2013 or opened after 2010 .",
        "result": "COUNT(*) FROM museum WHERE Open_Year > 2013 OR Open_Year > 2010;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# museum(Museum_ID,Name,Num_of_Staff,Open_Year)\n;# visitor(ID,Name,Level_of_membership,Age)\n;# visit(Museum_ID,visitor_ID,Num_of_Ticket,Total_spent)\n.# \n ### How many museums were opened after 2013 or opened after 2010 . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "List the first name and birth date of all players in the order of birth date .",
        "result": "first_name, birth_date \nFROM players \nORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first name and birth date of all players in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "List the first name and birth date of all players , sorted by birth date ?",
        "result": "first_name, birth_date FROM players ORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first name and birth date of all players , sorted by birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "List the first name and birth date of all players in the order of birth date .",
        "result": "first_name, birth_date \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first name and birth date of all players in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "List the first name and birth date of all players in order of birth date ?",
        "result": "first_name, birth_date \nFROM players \nORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first name and birth date of all players in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "What are the first names and birth dates of players in the order of birth date .",
        "result": "first_name, birth_date\nFROM players\nORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the first names and birth dates of players in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "What are the first names and birth dates of players , sorted by birth date ?",
        "result": "first_name, birth_date FROM players ORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the first names and birth dates of players , sorted by birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "What are the first names and birth dates of players in the order of birth date .",
        "result": "first_name, birth_date FROM players ORDER BY birth_date;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the first names and birth dates of players in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.birth_date from players   order by players.birth_date asc",
        "question": "What are the first names and birth dates of players in order of birth date ?",
        "result": "first_name, birth_date FROM players ORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the first names and birth dates of players in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.tourney_name from matches where  matches.year = 2013 or matches.year = 2016  ",
        "question": "Find the name of tourney were played in 2013 or 2016 ?",
        "result": "tourney_name \nFROM \nmatches \nWHERE \nyear = 2013 OR year = 2016",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name of tourney were played in 2013 or 2016 ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.tourney_name from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "Find the name of tourney participated in the Australian Open tourney .",
        "result": "tourney_name \nFROM matches \nWHERE tourney_name LIKE '%Australian Open%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name of tourney participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.tourney_name from matches where  matches.winner_hand = \"L\"  ",
        "question": "Find the name of tourney were left handed ?",
        "result": "tourney_name \nFROM \n    matches \nWHERE \n    winner_hand = 'L' OR loser_hand = 'L';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name of tourney were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "List the names of all winners participated in the Australian Open tourney .",
        "result": "winner_name FROM matches WHERE tourney_name = 'Australian Open'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the names of all winners participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name from matches   order by matches.minutes desc limit 1 ",
        "question": "List the names of all winners who played in the match with greatest number of minutes .",
        "result": "winner_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the names of all winners who played in the match with greatest number of minutes . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name from matches where  matches.winner_hand = \"L\"  ",
        "question": "List the names of all winners were left handed ?",
        "result": "winner_name\nFROM matches\nWHERE winner_hand = 'L'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the names of all winners were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name from matches where  matches.tourney_name = \"WTA Championships\"  ",
        "question": "List the names of all winners who participated in the WTA Championships .",
        "result": "players.first_name, players.last_name \nFROM players \nINNER JOIN matches ON players.player_id = matches.winner_id \nWHERE matches.tourney_name = 'WTA Championships'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the names of all winners who participated in the WTA Championships . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select count(*) from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "List the number of all matches participated in the Australian Open tourney .",
        "result": "COUNT(*) FROM matches WHERE tourney_name='Australian Open'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the number of all matches participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select count(*) from matches where  matches.winner_hand = \"L\"  ",
        "question": "List the number of all matches were left handed ?",
        "result": "COUNT(*) FROM matches WHERE winner_hand='L' OR loser_hand='L';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the number of all matches were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.last_name from players where  players.country_code = \"USA\"  ",
        "question": "List the first and last name of all players from the country with code USA .",
        "result": "first_name, last_name\nFROM players\nWHERE country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first and last name of all players from the country with code USA . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.last_name from players where  players.country_code = \"USA\"  ",
        "question": "List the first and last name of all players from the USA ?",
        "result": "first_name, last_name FROM players WHERE country_code = 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### List the first and last name of all players from the USA ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.last_name from players where  players.country_code = \"USA\"  ",
        "question": "What are the full names of all players from the country with code USA .",
        "result": "first_name || ' ' || last_name AS full_name FROM players WHERE country_code='USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the full names of all players from the country with code USA . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.first_name , players.last_name from players where  players.country_code = \"USA\"  ",
        "question": "What are the full names of all players from the USA ?",
        "result": "first_name || ' ' || last_name AS full_name \nFROM players \nWHERE country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the full names of all players from the USA ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players where  players.country_code = \"USA\"  ",
        "question": "Find the first name and country code of the player from the country with code USA .",
        "result": "players.first_name, players.country_code\nFROM players\nWHERE players.country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the first name and country code of the player from the country with code USA . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players where  players.country_code = \"USA\"  ",
        "question": "Find the first name and country code of the player from the USA ?",
        "result": "first_name, country_code \nFROM players \nWHERE country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the first name and country code of the player from the USA ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players   order by players.birth_date asc",
        "question": "Find the first name and country code of the player in the order of birth date .",
        "result": "first_name, country_code\nFROM players\nORDER BY birth_date",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the first name and country code of the player in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players   order by players.birth_date asc",
        "question": "Find the first name and country code of the player , sorted by birth date ?",
        "result": "players.first_name, players.country_code \nFROM players \nORDER BY players.birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the first name and country code of the player , sorted by birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players where  players.country_code = \"USA\"  ",
        "question": "What is the first name and country code of the player from the country with code USA .",
        "result": "players.first_name, players.country_code\nFROM players\nWHERE players.country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the first name and country code of the player from the country with code USA . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players where  players.country_code = \"USA\"  ",
        "question": "What is the first name and country code of the player from the USA ?",
        "result": "first_name, country_code \nFROM players \nWHERE country_code = 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the first name and country code of the player from the USA ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players   order by players.birth_date asc",
        "question": "What is the first name and country code of the player in the order of birth date .",
        "result": "first_name, country_code FROM players ORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the first name and country code of the player in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code , players.first_name from players   order by players.birth_date asc",
        "question": "What is the first name and country code of the player , sorted by birth date ?",
        "result": "first_name, country_code \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the first name and country code of the player , sorted by birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.year from matches where  matches.year = 2013 or matches.year = 2016  ",
        "question": "Find the year were played in 2013 or 2016 ?",
        "result": "year FROM matches WHERE year IN (2013, 2016);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the year were played in 2013 or 2016 ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.year from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "Find the year participated in the Australian Open tourney .",
        "result": "year\nFROM matches\nWHERE tourney_name = 'Australian Open';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the year participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.year from matches where  matches.winner_hand = \"L\"  ",
        "question": "Find the year were left handed ?",
        "result": "year\nFROM matches\nWHERE winner_hand = 'L'\nOR loser_hand = 'L';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the year were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches where  matches.year = 2013   intersect select matches.winner_name , matches.winner_rank_points from matches where  matches.year = 2016  ",
        "question": "Find the name and rank points of the winner who played in both 2013 and 2016 .",
        "result": "players.first_name, players.last_name, matches.winner_rank_points \n FROM players \n JOIN matches ON players.player_id = matches.winner_id \n WHERE matches.year = 2013 AND matches.winner_id IN (\n     SELECT winner_id \n     FROM matches \n     WHERE year = 2016 \n     GROUP BY winner_id \n     HAVING COUNT(DISTINCT year) = 2\n ) ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner who played in both 2013 and 2016 . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches where  matches.year = 2013 or matches.year = 2016  ",
        "question": "Find the name and rank points of the winner were played in 2013 or 2016 ?",
        "result": "winner_name, winner_rank_points \nFROM matches \nWHERE (year = 2013 OR year = 2016)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner were played in 2013 or 2016 ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "Find the name and rank points of the winner participated in the Australian Open tourney .",
        "result": "winner_name, winner_rank_points \n FROM matches\n WHERE tourney_name = 'Australian Open' AND winner_rank_points IS NOT NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches   order by matches.minutes desc limit 1 ",
        "question": "Find the name and rank points of the winner who played in the match with greatest number of minutes .",
        "result": "winner_name, winner_rank_points \n FROM matches \n WHERE minutes = (SELECT MAX(minutes) FROM matches)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner who played in the match with greatest number of minutes . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches where  matches.winner_hand = \"L\"  ",
        "question": "Find the name and rank points of the winner were left handed ?",
        "result": "winner_name, winner_rank_points\nFROM matches\nWHERE winner_hand = 'L'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.winner_rank_points from matches where  matches.tourney_name = \"WTA Championships\"  ",
        "question": "Find the name and rank points of the winner who participated in the WTA Championships .",
        "result": "players.first_name, players.last_name, matches.winner_rank_points \n FROM players \n JOIN matches ON players.player_id = matches.winner_id \n WHERE matches.tourney_name = \"WTA Championships\";",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name and rank points of the winner who participated in the WTA Championships . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name from matches where  matches.winner_hand = \"L\"   order by matches.winner_rank_points desc limit 1 ",
        "question": "Find the name of the winner who has the highest rank points and were left handed ?",
        "result": "players.first_name, players.last_name \nFROM players \nJOIN matches ON players.player_id = matches.winner_id \nWHERE players.hand = 'L' \nORDER BY players.rank_points DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the name of the winner who has the highest rank points and were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.loser_name from matches where  matches.year = 2013   intersect select matches.winner_name , matches.loser_name from matches where  matches.year = 2016  ",
        "question": "find the names of loser and winner who played in both 2013 and 2016 .",
        "result": "loser_name, winner_name \nFROM matches \nWHERE (year = 2013 OR year = 2016) \nGROUP BY loser_name, winner_name \nHAVING COUNT(DISTINCT year) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the names of loser and winner who played in both 2013 and 2016 . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.loser_name from matches where  matches.year = 2013 or matches.year = 2016  ",
        "question": "find the names of loser and winner were played in 2013 or 2016 ?",
        "result": "loser_name, winner_name\nFROM matches\nWHERE year = 2013 OR year = 2016;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the names of loser and winner were played in 2013 or 2016 ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.loser_name from matches where  matches.tourney_name = \"Australian Open\"  ",
        "question": "find the names of loser and winner participated in the Australian Open tourney .",
        "result": "matches.winner_name, matches.loser_name\nFROM matches\nWHERE matches.tourney_name = 'Australian Open';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the names of loser and winner participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.loser_name from matches where  matches.winner_hand = \"L\"  ",
        "question": "find the names of loser and winner were left handed ?",
        "result": "loser.first_name, loser.last_name, winner.first_name, winner.last_name \nFROM matches \nINNER JOIN players AS loser ON matches.loser_id = loser.player_id \nINNER JOIN players AS winner ON matches.winner_id = winner.player_id \nWHERE loser.hand = 'L' AND winner.hand = 'L'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the names of loser and winner were left handed ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select matches.winner_name , matches.loser_name from matches where  matches.tourney_name = \"WTA Championships\"  ",
        "question": "find the names of loser and winner who participated in the WTA Championships .",
        "result": "loser_name, winner_name \nFROM matches \nWHERE tourney_name = 'WTA Championships'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the names of loser and winner who participated in the WTA Championships . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "find the code of the country in the order of birth date .",
        "result": "country_code\nFROM players\nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the code of the country in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "find the code of the country in the order of birth date .",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the code of the country in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "find the code of the country in order of birth date ?",
        "result": "players.country_code \nFROM players \nORDER BY players.birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the code of the country in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players  group by players.country_code having  count(*) > 50 ",
        "question": "find the code of the country that have more than 50 players .",
        "result": "country_code \nFROM players \nGROUP BY country_code \nHAVING COUNT(player_id) > 50;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the code of the country that have more than 50 players . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players  group by players.country_code having  count(*) > 50 ",
        "question": "find the code of the country with more than 50 players ?",
        "result": "country_code\nFROM players\nGROUP BY country_code\nHAVING COUNT(player_id) > 50;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### find the code of the country with more than 50 players ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What is the code of the country in the order of birth date .",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the code of the country in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What is the code of the country in the order of birth date .",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the code of the country in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What is the code of the country in order of birth date ?",
        "result": "country_code\nFROM players\nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the code of the country in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players  group by players.country_code having  count(*) > 50 ",
        "question": "What is the code of the country that have more than 50 players .",
        "result": "country_code \nFROM players \nGROUP BY country_code \nHAVING COUNT(player_id) > 50;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the code of the country that have more than 50 players . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players  group by players.country_code having  count(*) > 50 ",
        "question": "What is the code of the country with more than 50 players ?",
        "result": "country_code\nFROM players\nGROUP BY country_code\nHAVING COUNT(player_id) > 50",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What is the code of the country with more than 50 players ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "Find the codes of countries in the order of birth date .",
        "result": "country_code FROM players ORDER BY birth_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the codes of countries in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "Find the codes of countries in the order of birth date .",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the codes of countries in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "Find the codes of countries in order of birth date ?",
        "result": "country_code FROM players ORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the codes of countries in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What are the codes of countries in the order of birth date .",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the codes of countries in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What are the codes of countries in the order of birth date .",
        "result": "country_code FROM players ORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the codes of countries in the order of birth date . \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select players.country_code from players   order by players.birth_date asc",
        "question": "What are the codes of countries in order of birth date ?",
        "result": "country_code \nFROM players \nORDER BY birth_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### What are the codes of countries in order of birth date ? \n SELECT"
    },
    {
        "db_id": "wta_1",
        "query": "select count( distinct matches.winner_name) from matches where  matches.winner_hand = \"L\" and matches.tourney_name = \"Australian Open\"  ",
        "question": "Find the number of left handed winners participated in the Australian Open tourney .",
        "result": "COUNT(DISTINCT winner_id) \nFROM matches \nWHERE tourney_name = 'Australian Open' AND winner_hand = 'L'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# players(player_id,first_name,last_name,hand,birth_date,country_code)\n;# matches(best_of,draw_size,loser_age,loser_entry,loser_hand,loser_ht,loser_id,loser_ioc,loser_name,loser_rank,loser_rank_points,loser_seed,match_num,minutes,round,score,surface,tourney_date,tourney_id,tourney_level,tourney_name,winner_age,winner_entry,winner_hand,winner_ht,winner_id,winner_ioc,winner_name,winner_rank,winner_rank_points,winner_seed,year)\n;# rankings(ranking_date,ranking,player_id,ranking_points,tours)\n.# \n ### Find the number of left handed winners participated in the Australian Open tourney . \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select ship.name , ship.tonnage from ship where  ship.disposition_of_ship = \"Captured\"  ",
        "question": "List the name and tonnage ended up being ' Captured ' ?",
        "result": "ship.name, ship.tonnage\nFROM ship\nINNER JOIN battle ON battle.id = ship.lost_in_battle\nWHERE ship.disposition_of_ship = 'Captured';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### List the name and tonnage ended up being ' Captured ' ? \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select battle.name , battle.result from ship join battle on ship.lost_in_battle = battle.id where  ship.ship_type = \"Brig\"  ",
        "question": "What are the name and results of the battles that lost any ' Brig ' type shipes ?",
        "result": "battle.name, battle.result \nFROM battle \nWHERE battle.id IN (\n  SELECT ship.lost_in_battle \n  FROM ship \n  WHERE ship.ship_type = 'Brig'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### What are the name and results of the battles that lost any ' Brig ' type shipes ? \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select battle.name , battle.result from ship join battle on ship.lost_in_battle = battle.id where  ship.name = \"Lettice\"   intersect select battle.name , battle.result from ship join battle on ship.lost_in_battle = battle.id where  ship.name = \"HMS Atalanta\"  ",
        "question": "What are the name and results of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta '",
        "result": "battle.name, battle.result\nFROM battle \nINNER JOIN ship ON battle.id = ship.lost_in_battle \nWHERE ship.name IN ('Lettice', 'HMS Atalanta')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### What are the name and results of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select distinct battle.id , battle.name from battle where  battle.bulgarian_commander != \"Boril\"  ",
        "question": "What are the different ids and names of the battles when the bulgarian commander is not ' Boril '",
        "result": "id, name \nFROM battle \nWHERE bulgarian_commander != 'Boril'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### What are the different ids and names of the battles when the bulgarian commander is not ' Boril ' \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select distinct battle.id , battle.name from ship join battle on ship.lost_in_battle = battle.id where  ship.name = \"Lettice\"   intersect select distinct battle.id , battle.name from ship join battle on ship.lost_in_battle = battle.id where  ship.name = \"HMS Atalanta\"  ",
        "question": "What are the different ids and names of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta '",
        "result": "battle.id, battle.name \nFROM battle \nJOIN ship ON battle.id = ship.lost_in_battle \nWHERE ship.name IN ('Lettice', 'HMS Atalanta');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### What are the different ids and names of the battles that has lost the ship named ' Lettice ' and the ship named ' HMS Atalanta ' \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select battle.name , battle.date from battle where  battle.bulgarian_commander != \"Boril\"  ",
        "question": "List the name and date the battle when the bulgarian commander is not ' Boril '",
        "result": "name, date \nFROM battle \nWHERE bulgarian_commander != 'Boril';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### List the name and date the battle when the bulgarian commander is not ' Boril ' \n SELECT"
    },
    {
        "db_id": "battle_death",
        "query": "select battle.name , battle.date from ship join battle on ship.lost_in_battle = battle.id where  ship.ship_type = \"Brig\"  ",
        "question": "List the name and date the battle that lost any ' Brig ' type shipes ?",
        "result": "battle.name, battle.date\nFROM battle\nINNER JOIN ship ON battle.id = ship.lost_in_battle\nWHERE ship.ship_type = 'Brig'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# battle(id,name,date,bulgarian_commander,latin_commander,result)\n;# ship(lost_in_battle,id,name,tonnage,ship_type,location,disposition_of_ship)\n;# death(caused_by_ship_id,id,note,killed,injured)\n.# \n ### List the name and date the battle that lost any ' Brig ' type shipes ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select departments.department_name , departments.department_id from departments where  departments.department_name like \"%computer%\"  ",
        "question": "What is the name and id of the department whose name has the substring the computer ?",
        "result": "department_id, department_name \nFROM Departments \nWHERE department_name LIKE '%computer%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What is the name and id of the department whose name has the substring the computer ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select sections.section_name from sections where  sections.section_name = \"h\"  ",
        "question": "List the section_name named h ?",
        "result": "section_name \n FROM Sections \n WHERE section_name = 'h'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### List the section_name named h ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select sections.section_name from sections where  sections.section_name = \"h\"  ",
        "question": "What are the names of the sections named h ?",
        "result": "section_name FROM Sections WHERE section_name = 'h';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What are the names of the sections named h ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select students.first_name , students.middle_name , students.last_name , students.student_id from students where  students.first_name = \"Timmothy\" and students.last_name = \"Ward\"  ",
        "question": "What are the first , middle , and last names , along with the ids , of all students named Timmothy Ward ?",
        "result": "student_id, first_name, middle_name, last_name\nFROM Students\nWHERE first_name = 'Timmothy' AND last_name = 'Ward';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What are the first , middle , and last names , along with the ids , of all students named Timmothy Ward ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id  group by transcript_contents.transcript_id having  count(*) >= 2 ",
        "question": "What is the date and id of the transcript with at least 2 course results .",
        "result": "Transcripts.transcript_date, Transcripts.transcript_id\nFROM Transcripts\nINNER JOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id\nGROUP BY Transcripts.transcript_id\nHAVING COUNT(DISTINCT Transcript_Contents.student_course_id) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What is the date and id of the transcript with at least 2 course results . \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select transcripts.transcript_date , transcript_contents.transcript_id from transcript_contents join transcripts on Transcript_Contents.transcript_id = Transcripts.transcript_id  group by transcript_contents.transcript_id having  count(*) >= 2 ",
        "question": "What is the date and id of the transcript with at least 2 courses listed ?",
        "result": "Transcripts.transcript_date, Transcripts.transcript_id \nFROM Transcripts \nJOIN Transcript_Contents ON Transcripts.transcript_id = Transcript_Contents.transcript_id \nGROUP BY Transcripts.transcript_id \nHAVING COUNT(DISTINCT Transcript_Contents.student_course_id) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What is the date and id of the transcript with at least 2 courses listed ? \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select sections.section_description from sections   order by sections.section_name desc",
        "question": "What is the description for the section in reversed lexicographical order .",
        "result": "section_description FROM Sections ORDER BY section_description DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What is the description for the section in reversed lexicographical order . \n SELECT"
    },
    {
        "db_id": "student_transcripts_tracking",
        "query": "select sections.section_description from sections   order by sections.section_name desc",
        "question": "What is the description for the section in reverse alphabetical order ?",
        "result": "Sections.section_description \nFROM Sections \nORDER BY Sections.section_description DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Addresses(address_id,line_1,line_2,line_3,city,zip_postcode,state_province_county,country,other_address_details)\n;# Courses(course_id,course_name,course_description,other_details)\n;# Departments(department_id,department_name,department_description,other_details)\n;# Degree_Programs(degree_program_id,department_id,degree_summary_name,degree_summary_description,other_details)\n;# Sections(section_id,course_id,section_name,section_description,other_details)\n;# Semesters(semester_id,semester_name,semester_description,other_details)\n;# Students(student_id,current_address_id,permanent_address_id,first_name,middle_name,last_name,cell_mobile_number,email_address,ssn,date_first_registered,date_left,other_student_details)\n;# Student_Enrolment(student_enrolment_id,degree_program_id,semester_id,student_id,other_details)\n;# Student_Enrolment_Courses(student_course_id,course_id,student_enrolment_id)\n;# Transcripts(transcript_id,transcript_date,other_details)\n;# Transcript_Contents(student_course_id,transcript_id)\n.# \n ### What is the description for the section in reverse alphabetical order ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "List the title of all cartoons directed by Ben Jones ?",
        "result": "Title FROM Cartoon WHERE Directed_by = 'Ben Jones'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "List the title of all cartoons were written by ' Joseph Kuhr ' ?",
        "result": "Cartoon.Title FROM Cartoon WHERE Cartoon.Written_by = 'Joseph Kuhr';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "List the title of all cartoons written by Joseph Kuhr ?",
        "result": "Cartoon.Title FROM Cartoon WHERE Cartoon.Written_by = 'Joseph Kuhr';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons written by Joseph Kuhr ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "List the title of all cartoons ordered by their air date",
        "result": "Title FROM Cartoon ORDER BY Original_air_date;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons ordered by their air date \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "List the title of all cartoons that are ordered by air date ?",
        "result": "Title FROM Cartoon ORDER BY Original_air_date ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons that are ordered by air date ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "List the title of all cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' .",
        "result": "Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' OR Cartoon.Directed_by = 'Brandon Vietti'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "List the title of all cartoons directed by Ben Jones or Brandon Vietti ?",
        "result": "Title \nFROM \nCartoon \nWHERE \nDirected_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoons directed by Ben Jones or Brandon Vietti ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.title asc",
        "question": "What are the names of all cartoons in alphabetical order .",
        "result": "Title FROM Cartoon ORDER BY Title ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the names of all cartoons in alphabetical order . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "What are the names of all cartoons were written by ' Joseph Kuhr ' ?",
        "result": "Title \nFROM Cartoon \nWHERE Written_by = 'Joseph Kuhr' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the names of all cartoons were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "What are the names of all cartoons that are ordered by air date ?",
        "result": "Title FROM Cartoon ORDER BY Original_air_date",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the names of all cartoons that are ordered by air date ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from cartoon where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "How many cartoons directed by Ben Jones ?",
        "result": "COUNT(*) FROM Cartoon WHERE Directed_by='Ben Jones';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "How many cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' .",
        "result": "COUNT(*) FROM Cartoon WHERE Directed_by='Ben Jones' OR Directed_by='Brandon Vietti'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "How many cartoons directed by Ben Jones or Brandon Vietti ?",
        "result": "COUNT(*) FROM Cartoon WHERE Directed_by='Ben Jones' OR Directed_by='Brandon Vietti'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many cartoons directed by Ben Jones or Brandon Vietti ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon   order by cartoon.title asc",
        "question": "list all cartoon titles and their directors in alphabetical order .",
        "result": "Title, Directed_by FROM Cartoon ORDER BY Title ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### list all cartoon titles and their directors in alphabetical order . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "list all cartoon titles and their directors directed by Ben Jones ?",
        "result": "Title, Directed_by FROM Cartoon WHERE Directed_by = \"Ben Jones\";",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### list all cartoon titles and their directors directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "list all cartoon titles and their directors were written by ' Joseph Kuhr ' ?",
        "result": "Title, Directed_by FROM Cartoon WHERE Written_by = 'Joseph Kuhr'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### list all cartoon titles and their directors were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "list all cartoon titles and their directors written by Joseph Kuhr ?",
        "result": "Cartoon.Title, Cartoon.Directed_by\nFROM Cartoon\nWHERE Cartoon.Written_by = \"Joseph Kuhr\"",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### list all cartoon titles and their directors written by Joseph Kuhr ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "list all cartoon titles and their directors directed by ' Ben Jones ' or ' Brandon Vietti ' .",
        "result": "Cartoon.Title, Cartoon.Directed_by \n FROM Cartoon \n WHERE Cartoon.Directed_by IN ('Ben Jones', 'Brandon Vietti')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### list all cartoon titles and their directors directed by ' Ben Jones ' or ' Brandon Vietti ' . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon   order by cartoon.title asc",
        "question": "What is the name and directors of all the cartoons in alphabetical order .",
        "result": "Title, Directed_by\nFROM Cartoon\nORDER BY Title ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the name and directors of all the cartoons in alphabetical order . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "What is the name and directors of all the cartoons directed by Ben Jones ?",
        "result": "Title, Directed_by \n FROM Cartoon \n WHERE Directed_by = 'Ben Jones'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the name and directors of all the cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "What is the name and directors of all the cartoons were written by ' Joseph Kuhr ' ?",
        "result": "Cartoon.Title, Cartoon.Directed_by \n FROM Cartoon \n WHERE Cartoon.Written_by = 'Joseph Kuhr' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the name and directors of all the cartoons were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "What is the name and directors of all the cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' .",
        "result": "Cartoon.Title, Cartoon.Directed_by \n FROM Cartoon \n WHERE Cartoon.Directed_by IN ('Ben Jones', 'Brandon Vietti');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the name and directors of all the cartoons directed by ' Ben Jones ' or ' Brandon Vietti ' . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title , cartoon.directed_by from cartoon where  cartoon.directed_by = \"Ben Jones\" or cartoon.directed_by = \"Brandon Vietti\"  ",
        "question": "What is the name and directors of all the cartoons directed by Ben Jones or Brandon Vietti ?",
        "result": "Cartoon.Title, Cartoon.Directed_by\nFROM Cartoon\nWHERE Cartoon.Directed_by = 'Ben Jones' OR Cartoon.Directed_by = 'Brandon Vietti'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the name and directors of all the cartoons directed by Ben Jones or Brandon Vietti ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.title asc",
        "question": "List the title of all cartoon in alphabetical order .",
        "result": "Title FROM Cartoon ORDER BY Title ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoon in alphabetical order . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "List the title of all cartoon were written by ' Joseph Kuhr ' ?",
        "result": "Cartoon.Title \nFROM Cartoon \nWHERE Cartoon.Written_by = 'Joseph Kuhr';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoon were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "List the title of all cartoon written by Joseph Kuhr ?",
        "result": "Cartoon.Title \nFROM Cartoon \nWHERE Cartoon.Written_by = 'Joseph Kuhr';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoon written by Joseph Kuhr ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "List the title of all cartoon ordered by their air date",
        "result": "Title FROM Cartoon ORDER BY Original_air_date;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoon ordered by their air date \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "List the title of all cartoon that are ordered by air date ?",
        "result": "Title FROM Cartoon ORDER BY Original_air_date ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the title of all cartoon that are ordered by air date ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.title asc",
        "question": "What are the titles of all cartoons in alphabetical order .",
        "result": "Title FROM Cartoon ORDER BY Title ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the titles of all cartoons in alphabetical order . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon where  cartoon.written_by = \"Joseph Kuhr\"  ",
        "question": "What are the titles of all cartoons were written by ' Joseph Kuhr ' ?",
        "result": "Cartoon.Title \nFROM Cartoon \nWHERE Cartoon.Written_by = 'Joseph Kuhr'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the titles of all cartoons were written by ' Joseph Kuhr ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select cartoon.title from cartoon   order by cartoon.original_air_date asc",
        "question": "What are the titles of all cartoons that are ordered by air date ?",
        "result": "Title FROM Cartoon ORDER BY Original_air_date;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the titles of all cartoons that are ordered by air date ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.content from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "What is the content of TV Channel using language English ?",
        "result": "Content FROM TV_Channel WHERE Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the content of TV Channel using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.content from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "What is the content of TV Channel that supports high definition TV ?",
        "result": "Content \nFROM TV_Channel \nWHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the content of TV Channel that supports high definition TV ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "What is the Package Option of TV Channel using language English ?",
        "result": "Package_Option \nFROM TV_Channel \nWHERE Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the Package Option of TV Channel using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "What is the Package Option of TV Channel that supports high definition TV ?",
        "result": "Package_Option \nFROM \nTV_Channel \nWHERE \nHight_definition_TV = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the Package Option of TV Channel that supports high definition TV ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "What are the Package Options of the TV Channels use the English language ?",
        "result": "Package_Option FROM TV_Channel WHERE Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the Package Options of the TV Channels use the English language ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "How many TV Channel with serial name ' Sky Radio ' ?",
        "result": "COUNT(*) FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "How many TV Channel with serial name ' Sky Radio ' ?",
        "result": "COUNT(*) FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "How many TV Channel that supports high definition TV ?",
        "result": "COUNT(*) FROM TV_Channel WHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channel that supports high definition TV ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "How many TV Channels with serial name ' Sky Radio ' ?",
        "result": "COUNT(*) FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "How many TV Channels with serial name ' Sky Radio ' ?",
        "result": "COUNT(*) FROM TV_Channel WHERE series_name='Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select count(*) from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "How many TV Channels whose series names are Sky Radio ?",
        "result": "COUNT(*) FROM TV_Channel WHERE series_name = 'Sky Radio';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### How many TV Channels whose series names are Sky Radio ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "List the Episode of all TV series with Episode ' A Love of a Lifetime ' ?",
        "result": "Episode FROM TV_series WHERE series_name = 'A Love of a Lifetime'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the Episode of all TV series with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "List the Episode of all TV series with Episode ' A Love of a Lifetime ' ?",
        "result": "Episode \nFROM TV_series \nWHERE series_name = 'A Love of a Lifetime'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the Episode of all TV series with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series join tv_channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "List the Episode of all TV series named ' Sky Radio ' ?",
        "result": "TV_series.Episode \nFROM TV_series \nWHERE TV_series.Channel = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### List the Episode of all TV series named ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "What are all of the episodes with Episode ' A Love of a Lifetime ' ?",
        "result": "* FROM TV_series WHERE Episode = 'A Love of a Lifetime'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are all of the episodes with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "What are all of the episodes with Episode ' A Love of a Lifetime ' ?",
        "result": "* FROM TV_series WHERE Episode = 'A Love of a Lifetime';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are all of the episodes with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.air_date from tv_series   order by tv_series.rating asc",
        "question": "What is the air date of TV series sorted by rating .",
        "result": "Air_Date FROM TV_series ORDER BY Rating DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the air date of TV series sorted by rating . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.air_date from tv_series join tv_channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What is the air date of TV series named ' Sky Radio ' ?",
        "result": "Air_Date FROM TV_series WHERE Channel = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the air date of TV series named ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.weekly_rank from tv_series   order by tv_series.rating asc",
        "question": "What is Weekly Rank of TV series sorted by rating .",
        "result": "TV_series.Weekly_Rank\nFROM TV_series\nORDER BY TV_series.Rating DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is Weekly Rank of TV series sorted by rating . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.weekly_rank from tv_series join tv_channel on TV_series.Channel = TV_Channel.id where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What is Weekly Rank of TV series named ' Sky Radio ' ?",
        "result": "Weekly_Rank\nFROM TV_series\nWHERE Channel = 'Sky Radio' AND Episode = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is Weekly Rank of TV series named ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series   order by tv_series.rating asc",
        "question": "What is the episode for the TV series sorted by rating .",
        "result": "Episode FROM TV_series\nORDER BY Rating DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the episode for the TV series sorted by rating . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "What is the episode for the TV series with Episode ' A Love of a Lifetime ' ?",
        "result": "Episode FROM TV_series WHERE Episode = 'A Love of a Lifetime'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the episode for the TV series with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_series.episode from tv_series where  tv_series.episode = \"A Love of a Lifetime\"  ",
        "question": "What is the episode for the TV series with Episode ' A Love of a Lifetime ' ?",
        "result": "Episode FROM TV_series WHERE Episode='A Love of a Lifetime'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the episode for the TV series with Episode ' A Love of a Lifetime ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name\n FROM TV_Channel \n WHERE TV_Channel.series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name\n FROM TV_Channel \n WHERE TV_Channel.series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "Find the package choice and series name of the TV channel using language English ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name\n FROM TV_Channel \n WHERE TV_Channel.Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "Find the package choice and series name of the TV channel use the English language ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel use the English language ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "Find the package choice and series name of the TV channel are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name\n FROM TV_Channel\n JOIN Cartoon ON Cartoon.Channel = TV_Channel.id\n WHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "Find the package choice and series name of the TV channel that do not use English .",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.Language != 'English' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel that do not use English . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "Find the package choice and series name of the TV channel that do not use English ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel that do not use English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel   except select tv_channel.package_option , tv_channel.series_name from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "Find the package choice and series name of the TV channel that do not have any cartoons directed by Ben Jones ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.id NOT IN \n (SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel that do not have any cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.id not in (select Cartoon.Channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  )   ",
        "question": "Find the package choice and series name of the TV channel that do not have any cartoon directed by Ben Jones .",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \n WHERE Cartoon.Directed_by <> 'Ben Jones' OR Cartoon.Directed_by IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the package choice and series name of the TV channel that do not have any cartoon directed by Ben Jones . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ?",
        "result": "Package_Option, series_name \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ?",
        "result": "TV_Channel.Package_Option, TV_series.series_name \nFROM TV_Channel \nJOIN TV_series ON TV_Channel.id = TV_series.Channel \nWHERE TV_Channel.series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the package options and the name of the series for the TV Channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option , tv_channel.series_name from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "What are the package options and the name of the series for the TV Channel using language English ?",
        "result": "TV_Channel.Package_Option, TV_Channel.series_name \n FROM TV_Channel \n WHERE TV_Channel.Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the package options and the name of the series for the TV Channel using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.country from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "which countries ' tv channels that has high definition TV .",
        "result": "Country \nFROM TV_Channel \nWHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### which countries ' tv channels that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.country from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "which countries ' tv channels that do not use English .",
        "result": "Country \nFROM TV_Channel \nWHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### which countries ' tv channels that do not use English . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.country from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "which countries ' tv channels that do not use English ?",
        "result": "Country FROM TV_Channel WHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### which countries ' tv channels that do not use English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.country from tv_channel   except select tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "which countries ' tv channels that do not have any cartoons directed by Ben Jones ?",
        "result": "TV_Channel.Country\nFROM TV_Channel\nWHERE TV_Channel.id NOT IN (\n  SELECT Cartoon.Channel \n  FROM Cartoon \n  WHERE Cartoon.Directed_by = 'Ben Jones'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### which countries ' tv channels that do not have any cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.country from tv_channel where  tv_channel.id not in (select Cartoon.Channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  )   ",
        "question": "which countries ' tv channels that do not have any cartoon directed by Ben Jones .",
        "result": "TV_Channel.Country \nFROM \nTV_Channel \nLEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE \nCartoon.Directed_by != 'Ben Jones' OR Cartoon.Directed_by IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### which countries ' tv channels that do not have any cartoon directed by Ben Jones . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.series_name , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ?",
        "result": "TV_Channel.series_name, TV_Channel.Country \nFROM TV_Channel \nINNER JOIN Cartoon ON Cartoon.Channel = TV_Channel.id \nWHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.series_name , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ?",
        "result": "TV_Channel.series_name, TV_Channel.Country\nFROM TV_Channel\nINNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel\nWHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### Find the series name and country of the tv channel that is playing some cartoons written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.series_name , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ?",
        "result": "TV_Channel.series_name, TV_Channel.Country \nFROM TV_Channel \nINNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE Cartoon.Written_by = 'Todd Casey' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.series_name , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ?",
        "result": "TV_Channel.series_name, TV_Channel.Country \nFROM TV_Channel \nJOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the series name and country of all TV channels that are playing cartoons written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ?",
        "result": "Pixel_aspect_ratio_PAR, Country \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ?",
        "result": "Pixel_aspect_ratio_PAR, Country \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels using language English ?",
        "result": "Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language='English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels use the English language ?",
        "result": "Pixel_aspect_ratio_PAR, Country \n FROM TV_Channel \n WHERE Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels use the English language ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels that has high definition TV .",
        "result": "Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country \nFROM TV_Channel \nJOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel   except select tv_channel.pixel_aspect_ratio_par , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not have any cartoons directed by Ben Jones ?",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country \n FROM TV_Channel \n WHERE TV_Channel.id NOT IN \n    (SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels that do not have any cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.id not in (select Cartoon.Channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  )   ",
        "question": "find the pixel aspect ratio and nation of the tv channels that do not have any cartoon directed by Ben Jones .",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country \n FROM TV_Channel \n WHERE TV_Channel.id NOT IN \n     (SELECT Cartoon.Channel \n      FROM Cartoon \n      WHERE Cartoon.Directed_by = 'Ben Jones')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the pixel aspect ratio and nation of the tv channels that do not have any cartoon directed by Ben Jones . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ?",
        "result": "Pixel_aspect_ratio_PAR, Country \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ?",
        "result": "Pixel_aspect_ratio_PAR, Country \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that has high definition TV .",
        "result": "Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country \nFROM \nTV_Channel \nINNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE \nCartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel   except select tv_channel.pixel_aspect_ratio_par , tv_channel.country from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoons directed by Ben Jones ?",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country \n FROM TV_Channel\n LEFT JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \n WHERE Cartoon.Directed_by <> 'Ben Jones' OR Cartoon.id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.pixel_aspect_ratio_par , tv_channel.country from tv_channel where  tv_channel.id not in (select Cartoon.Channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  )   ",
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoon directed by Ben Jones .",
        "result": "TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country\n FROM TV_Channel\n WHERE TV_Channel.id NOT IN (\n   SELECT Cartoon.Channel \n   FROM Cartoon \n   WHERE Cartoon.Directed_by = 'Ben Jones'\n )",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What is the pixel aspect ratio and country of origin for all TV channels that do not have any cartoon directed by Ben Jones . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find id of the tv channels that with serial name ' Sky Radio ' ?",
        "result": "id FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find id of the tv channels that with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find id of the tv channels that with serial name ' Sky Radio ' ?",
        "result": "id \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find id of the tv channels that with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find id of the tv channels that using language English ?",
        "result": "id FROM TV_Channel WHERE Language='English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find id of the tv channels that using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find id of the tv channels that use the English language ?",
        "result": "id FROM TV_Channel WHERE Language='English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find id of the tv channels that use the English language ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the ids of all tv channels with serial name ' Sky Radio ' ?",
        "result": "id FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the ids of all tv channels with serial name ' Sky Radio ' ?",
        "result": "id FROM TV_Channel WHERE series_name = 'Sky Radio';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "What are the ids of all tv channels that has high definition TV .",
        "result": "id FROM TV_Channel WHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "What are the ids of all tv channels are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.id \nFROM TV_Channel \nINNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE Cartoon.Written_by = \"Todd Casey\"",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "What are the ids of all tv channels that do not use English .",
        "result": "id FROM TV_Channel WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels that do not use English . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "What are the ids of all tv channels that do not use English ?",
        "result": "id FROM TV_Channel WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels that do not use English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel   except select cartoon.channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  ",
        "question": "What are the ids of all tv channels that do not have any cartoons directed by Ben Jones ?",
        "result": "TV_Channel.id \nFROM TV_Channel \nWHERE TV_Channel.id NOT IN \n    (SELECT Cartoon.Channel \n     FROM Cartoon \n     WHERE Cartoon.Directed_by = 'Ben Jones')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels that do not have any cartoons directed by Ben Jones ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.id not in (select Cartoon.Channel from cartoon where  cartoon.directed_by = \"Ben Jones\"  )   ",
        "question": "What are the ids of all tv channels that do not have any cartoon directed by Ben Jones .",
        "result": "TV_Channel.id \nFROM TV_Channel \nWHERE TV_Channel.id NOT IN \n(SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of all tv channels that do not have any cartoon directed by Ben Jones . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the ids of the TV channels with serial name ' Sky Radio ' ?",
        "result": "id FROM TV_Channel WHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "What are the ids of the TV channels with serial name ' Sky Radio ' ?",
        "result": "id FROM TV_Channel WHERE series_name='Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "What are the ids of the TV channels that has high definition TV .",
        "result": "id FROM TV_Channel WHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "What are the ids of the TV channels are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.id \nFROM TV_Channel \nINNER JOIN Cartoon \nON TV_Channel.id = Cartoon.Channel \nWHERE Cartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "What are the ids of the TV channels that do not use English .",
        "result": "id FROM TV_Channel WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels that do not use English . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.id from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "What are the ids of the TV channels that do not use English ?",
        "result": "id \nFROM TV_Channel \nWHERE Language != 'English';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### What are the ids of the TV channels that do not use English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find the package option of the tv channel with serial name ' Sky Radio ' ?",
        "result": "Package_Option FROM TV_Channel WHERE series_name = 'Sky Radio';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.series_name = \"Sky Radio\"  ",
        "question": "find the package option of the tv channel with serial name ' Sky Radio ' ?",
        "result": "Package_Option \nFROM TV_Channel \nWHERE series_name = 'Sky Radio'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel with serial name ' Sky Radio ' ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find the package option of the tv channel using language English ?",
        "result": "Package_Option \nFROM TV_Channel \nWHERE Language = 'English';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel using language English ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language = \"English\"  ",
        "question": "find the package option of the tv channel use the English language ?",
        "result": "Package_Option \nFROM \nTV_Channel \nWHERE \nLanguage = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel use the English language ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.hight_definition_tv = \"yes\"  ",
        "question": "find the package option of the tv channel that has high definition TV .",
        "result": "Package_Option \nFROM TV_Channel \nWHERE Hight_definition_TV = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel that has high definition TV . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from cartoon join tv_channel on Cartoon.Channel = TV_Channel.id where  cartoon.written_by = \"Todd Casey\"  ",
        "question": "find the package option of the tv channel are playing some cartoon written by Todd Casey ?",
        "result": "TV_Channel.Package_Option \nFROM \nTV_Channel \nJOIN Cartoon ON TV_Channel.id = Cartoon.Channel \nWHERE \nCartoon.Written_by = 'Todd Casey'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel are playing some cartoon written by Todd Casey ? \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "find the package option of the tv channel that do not use English .",
        "result": "Package_Option FROM TV_Channel WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel that do not use English . \n SELECT"
    },
    {
        "db_id": "tvshow",
        "query": "select tv_channel.package_option from tv_channel where  tv_channel.language != \"English\"  ",
        "question": "find the package option of the tv channel that do not use English ?",
        "result": "Package_Option FROM TV_Channel WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# TV_Channel(id,series_name,Country,Language,Content,Pixel_aspect_ratio_PAR,Hight_definition_TV,Pay_per_view_PPV,Package_Option)\n;# TV_series(id,Episode,Air_Date,Rating,Share,18_49_Rating_Share,Viewers_m,Weekly_Rank,Channel)\n;# Cartoon(id,Title,Directed_by,Written_by,Original_air_date,Production_code,Channel)\n.# \n ### find the package option of the tv channel that do not use English ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "What is the money rank of the poker player with earnings less than 200000 ?",
        "result": "Money_Rank FROM poker_player WHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the money rank of the poker player with earnings less than 200000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "What is the money rank of the poker player who have earnings below 200000 .",
        "result": "Money_Rank \nFROM poker_player \nWHERE Earnings < 200000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the money rank of the poker player who have earnings below 200000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "What is the money rank of the poker player with height higher than 200 ?",
        "result": "poker_player.Money_Rank \nFROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE people.Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the money rank of the poker player with height higher than 200 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "What is the money rank of the poker player who are taller than 200 .",
        "result": "poker_player.Money_Rank \nFROM poker_player \nJOIN people ON poker_player.People_ID = people.People_ID \nWHERE people.Height > 200",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the money rank of the poker player who are taller than 200 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "Return the money rank of the player with earnings less than 200000 ?",
        "result": "Money_Rank \nFROM poker_player \nWHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the player with earnings less than 200000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "Return the money rank of the player who have earnings below 200000 .",
        "result": "Money_Rank \nFROM poker_player \nWHERE Earnings < 200000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the player who have earnings below 200000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the money rank of the player with height higher than 200 ?",
        "result": "poker_player.Money_Rank\nFROM poker_player\nINNER JOIN people ON poker_player.People_ID = people.People_ID\nWHERE people.Height > 200",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the player with height higher than 200 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the money rank of the player who are taller than 200 .",
        "result": "poker_player.Money_Rank \nFROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE people.Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the player who are taller than 200 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select max(poker_player.final_table_made) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "What is the maximum number of final tables made among poker players with height higher than 200 ?",
        "result": "MAX(Final_Table_Made) FROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the maximum number of final tables made among poker players with height higher than 200 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select max(poker_player.final_table_made) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "What is the maximum number of final tables made among poker players who are taller than 200 .",
        "result": "MAX(Final_Table_Made) FROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the maximum number of final tables made among poker players who are taller than 200 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select max(poker_player.final_table_made) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the maximum final tables made across all poker players with height higher than 200 ?",
        "result": "MAX(Final_Table_Made)\nFROM poker_player\nINNER JOIN people ON poker_player.People_ID = people.People_ID\nWHERE people.Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the maximum final tables made across all poker players with height higher than 200 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select max(poker_player.final_table_made) from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the maximum final tables made across all poker players who are taller than 200 .",
        "result": "MAX(Final_Table_Made) \nFROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the maximum final tables made across all poker players who are taller than 200 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "What is the birth date of the poker player whose earnings is higher than 300000 ?",
        "result": "people.Birth_Date\nFROM poker_player\nINNER JOIN people ON poker_player.People_ID = people.People_ID\nWHERE poker_player.Earnings > 300000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the birth date of the poker player whose earnings is higher than 300000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "What is the birth date of the poker player who have earnings above 300000 .",
        "result": "people.Birth_Date FROM poker_player \nJOIN people ON poker_player.People_ID = people.People_ID \nWHERE poker_player.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the birth date of the poker player who have earnings above 300000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "Return the birth date of the poker player whose earnings is higher than 300000 ?",
        "result": "people.Birth_Date\nFROM poker_player\nINNER JOIN people ON poker_player.People_ID = people.People_ID\nWHERE poker_player.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the birth date of the poker player whose earnings is higher than 300000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.birth_date from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "Return the birth date of the poker player who have earnings above 300000 .",
        "result": "people.Birth_Date \nFROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE poker_player.Earnings > 300000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the birth date of the poker player who have earnings above 300000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1 ",
        "question": "Return the money rank of the poker player with the highest earnings ?",
        "result": "Money_Rank\nFROM poker_player\nWHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player with the highest earnings ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player   order by poker_player.earnings desc limit 1 ",
        "question": "Return the money rank of the poker player with the greatest earnings .",
        "result": "Money_Rank \nFROM poker_player \nWHERE Earnings = (SELECT MAX(Earnings) FROM poker_player)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player with the greatest earnings . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "Return the money rank of the poker player with earnings less than 200000 ?",
        "result": "Money_Rank \nFROM poker_player \nWHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player with earnings less than 200000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player where  poker_player.earnings < 200000  ",
        "question": "Return the money rank of the poker player who have earnings below 200000 .",
        "result": "Money_Rank FROM poker_player WHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player who have earnings below 200000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the money rank of the poker player with height higher than 200 ?",
        "result": "poker_player.Money_Rank \nFROM \npoker_player \nINNER JOIN \npeople \nON \npoker_player.People_ID = people.People_ID \nWHERE \npeople.Height > 200",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player with height higher than 200 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select poker_player.money_rank from poker_player join people on poker_player.People_ID = people.People_ID where  people.height > 200  ",
        "question": "Return the money rank of the poker player who are taller than 200 .",
        "result": "poker_player.Money_Rank\nFROM poker_player\nJOIN people ON poker_player.People_ID = people.People_ID\nWHERE people.Height > 200;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the money rank of the poker player who are taller than 200 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select avg(poker_player.earnings) from poker_player where  poker_player.earnings < 200000  ",
        "question": "What is the average earnings of poker players with earnings less than 200000 ?",
        "result": "AVG(Earnings) FROM poker_player WHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the average earnings of poker players with earnings less than 200000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select avg(poker_player.earnings) from poker_player where  poker_player.earnings < 200000  ",
        "question": "What is the average earnings of poker players who have earnings below 200000 .",
        "result": "AVG(Earnings) \nFROM poker_player \nWHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What is the average earnings of poker players who have earnings below 200000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select avg(poker_player.earnings) from poker_player where  poker_player.earnings < 200000  ",
        "question": "Give average earnings of poker players with earnings less than 200000 ?",
        "result": "AVG(Earnings) FROM poker_player WHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give average earnings of poker players with earnings less than 200000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select avg(poker_player.earnings) from poker_player where  poker_player.earnings < 200000  ",
        "question": "Give average earnings of poker players who have earnings below 200000 .",
        "result": "AVG(Earnings) FROM poker_player WHERE Earnings < 200000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give average earnings of poker players who have earnings below 200000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "What are the names of poker players whose earnings is higher than 300000 ?",
        "result": "poker_player.Poker_Player_ID, people.Name \nFROM poker_player \nJOIN people ON poker_player.People_ID = people.People_ID \nWHERE poker_player.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of poker players whose earnings is higher than 300000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "What are the names of poker players who have earnings above 300000 .",
        "result": "poker_player.Poker_Player_ID, people.Name \nFROM poker_player \nINNER JOIN people ON poker_player.People_ID = people.People_ID \nWHERE poker_player.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of poker players who have earnings above 300000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "Return the names of poker players whose earnings is higher than 300000 ?",
        "result": "poker_player.Player_Name\nFROM poker_player\nWHERE poker_player.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the names of poker players whose earnings is higher than 300000 ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from poker_player join people on poker_player.People_ID = people.People_ID where  poker_player.earnings > 300000  ",
        "question": "Return the names of poker players who have earnings above 300000 .",
        "result": "p.Name \nFROM poker_player AS pp \nJOIN people AS p ON pp.People_ID = p.People_ID \nWHERE pp.Earnings > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the names of poker players who have earnings above 300000 . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people  group by people.nationality having  count(*) >= 2 ",
        "question": "Give the nationality that are shared by at least two people ?",
        "result": "DISTINCT p1.Nationality \nFROM people p1, people p2 \nWHERE p1.Nationality = p2.Nationality AND p1.People_ID <> p2.People_ID",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give the nationality that are shared by at least two people ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people  group by people.nationality having  count(*) >= 2 ",
        "question": "Give the nationality for which there are two or more people .",
        "result": "Nationality \nFROM people \nGROUP BY Nationality \nHAVING COUNT(*) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give the nationality for which there are two or more people . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people   order by people.name asc",
        "question": "Give the nationality in ascending alphabetical order of name .",
        "result": "people.Nationality\nFROM people\nORDER BY people.Name ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give the nationality in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people   order by people.name asc",
        "question": "Give the nationality ordered by their names in alphabetical order ?",
        "result": "Nationality FROM people ORDER BY Name ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Give the nationality ordered by their names in alphabetical order ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people   order by people.name asc",
        "question": "What are the nationalities in ascending alphabetical order of name .",
        "result": "Nationality FROM people ORDER BY Name ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the nationalities in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people   order by people.name asc",
        "question": "Return the nationalities in ascending alphabetical order of name .",
        "result": "Nationality FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the nationalities in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.nationality from people   order by people.name asc",
        "question": "Return the nationalities ordered by their names in alphabetical order ?",
        "result": "Nationality FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Return the nationalities ordered by their names in alphabetical order ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name , people.birth_date from people where  people.nationality != \"Russia\"  ",
        "question": "List the names and birth dates of people whose nationality is not ' Russia ' .",
        "result": "people.Name, people.Birth_Date\nFROM people\nWHERE people.Nationality != 'Russia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names and birth dates of people whose nationality is not ' Russia ' . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name , people.birth_date from people where  people.nationality != \"Russia\"  ",
        "question": "List the names and birth dates of people who are not from Russia ?",
        "result": "people.Name, people.Birth_Date\nFROM people\nWHERE people.Nationality <> 'Russia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names and birth dates of people who are not from Russia ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name , people.birth_date from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "List the names and birth dates of people that are not poker players .",
        "result": "people.Name, people.Birth_Date\nFROM people\nWHERE people.People_ID NOT IN (SELECT Poker_Player_ID FROM poker_player);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names and birth dates of people that are not poker players . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name , people.birth_date from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "List the names and birth dates of people who do not play poker ?",
        "result": "people.Name, people.Birth_Date\nFROM people\nWHERE people.People_ID NOT IN (\n  SELECT poker_player.People_ID\n  FROM poker_player\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names and birth dates of people who do not play poker ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "Show names of people in ascending alphabetical order of name .",
        "result": "Name FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Show names of people in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "Show names of people ordered by their names in alphabetical order ?",
        "result": "Name FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Show names of people ordered by their names in alphabetical order ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "Show names of people that are not poker players .",
        "result": "people.Name \nFROM \npeople \nLEFT JOIN \npoker_player \nON \npeople.People_ID = poker_player.People_ID \nWHERE \npoker_player.Poker_Player_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Show names of people that are not poker players . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "Show names of people who do not play poker ?",
        "result": "people.Name\nFROM people\nLEFT JOIN poker_player ON people.People_ID = poker_player.People_ID\nWHERE poker_player.Poker_Player_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### Show names of people who do not play poker ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "What are the names of people in ascending alphabetical order of name .",
        "result": "Name \nFROM people \nORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "What are the names of people that are not poker players .",
        "result": "people.Name FROM people\nWHERE people.People_ID NOT IN (SELECT Poker_Player_ID FROM poker_player)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people that are not poker players . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.people_id not in (select poker_player.People_ID from poker_player  )  ",
        "question": "What are the names of people who do not play poker ?",
        "result": "people.Name \nFROM people \nLEFT JOIN poker_player \nON people.People_ID = poker_player.People_ID \nWHERE poker_player.Poker_Player_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people who do not play poker ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "List the names of people in ascending alphabetical order of name .",
        "result": "Name FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names of people in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "List the names of people ordered by their names in alphabetical order ?",
        "result": "Name FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names of people ordered by their names in alphabetical order ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.nationality != \"Russia\"  ",
        "question": "List the names of people whose nationality is not ' Russia ' .",
        "result": "people.Name \nFROM people \nWHERE people.Nationality <> 'Russia' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names of people whose nationality is not ' Russia ' . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.nationality != \"Russia\"  ",
        "question": "List the names of people who are not from Russia ?",
        "result": "Name \nFROM people \nWHERE Nationality <> 'Russia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### List the names of people who are not from Russia ? \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people   order by people.name asc",
        "question": "What are the names of people in ascending alphabetical order of name .",
        "result": "Name FROM people ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people in ascending alphabetical order of name . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.nationality != \"Russia\"  ",
        "question": "What are the names of people whose nationality is not ' Russia ' .",
        "result": "Name \nFROM people \nWHERE Nationality <> 'Russia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people whose nationality is not ' Russia ' . \n SELECT"
    },
    {
        "db_id": "poker_player",
        "query": "select people.name from people where  people.nationality != \"Russia\"  ",
        "question": "What are the names of people who are not from Russia ?",
        "result": "Name \nFROM people \nWHERE Nationality <> 'Russia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# poker_player(Poker_Player_ID,People_ID,Final_Table_Made,Best_Finish,Money_Rank,Earnings)\n;# people(People_ID,Nationality,Name,Birth_Date,Height)\n.# \n ### What are the names of people who are not from Russia ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select max(votes.created) from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number where  contestants.contestant_name = \"Tabatha Gehling\"  ",
        "question": "What is last date created of votes that were for the contestant named ' Tabatha Gehling ' ?",
        "result": "MAX(created) FROM VOTES \nWHERE contestant_number = (SELECT contestant_number FROM CONTESTANTS WHERE contestant_name = 'Tabatha Gehling')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What is last date created of votes that were for the contestant named ' Tabatha Gehling ' ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_name from contestants where  contestants.contestant_number not in (select VOTES.contestant_number from votes  )  ",
        "question": "What are the names of the contestants did not get voted ?",
        "result": "contestant_name \nFROM \n  CONTESTANTS \nWHERE \n  contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the names of the contestants did not get voted ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_name from contestants where  contestants.contestant_name like \"%Al%\"  ",
        "question": "What are the names of the contestants whose names contain the substring ' Al ' .",
        "result": "contestant_name FROM CONTESTANTS WHERE contestant_name LIKE '% Al %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the names of the contestants whose names contain the substring ' Al ' . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from contestants where  contestants.contestant_name != \"Jessie Alloway\"  ",
        "question": "What are the contestant numbers and names of the contestants whose names are not ' Jessie Alloway '",
        "result": "contestant_number, contestant_name \nFROM CONTESTANTS \nWHERE contestant_name != 'Jessie Alloway'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the contestant numbers and names of the contestants whose names are not ' Jessie Alloway ' \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from contestants where  contestants.contestant_number not in (select VOTES.contestant_number from votes  )  ",
        "question": "What are the contestant numbers and names of the contestants did not get voted ?",
        "result": "contestant_number, contestant_name\nFROM CONTESTANTS\nWHERE contestant_number NOT IN (\n  SELECT DISTINCT contestant_number\n  FROM VOTES\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the contestant numbers and names of the contestants did not get voted ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from contestants where  contestants.contestant_name like \"%Al%\"  ",
        "question": "What are the contestant numbers and names of the contestants whose names contain the substring ' Al ' .",
        "result": "contestant_number, contestant_name \nFROM \nCONTESTANTS \nWHERE \ncontestant_name LIKE '% Al %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the contestant numbers and names of the contestants whose names contain the substring ' Al ' . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number where  contestants.contestant_name != \"Jessie Alloway\"  ",
        "question": "Of all the contestants who got voted , what is the contestant number and name of the contestant whose names are not ' Jessie Alloway '",
        "result": "contestant_number, contestant_name \nFROM VOTES \nINNER JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nWHERE contestant_name != 'Jessie Alloway'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Of all the contestants who got voted , what is the contestant number and name of the contestant whose names are not ' Jessie Alloway ' \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number  group by votes.contestant_number having  count(*) >= 2 ",
        "question": "Of all the contestants who got voted , what is the contestant number and name of the contestant who had at least two votes ?",
        "result": "contestant_number, contestant_name\nFROM CONTESTANTS\nWHERE contestant_number IN (\n  SELECT contestant_number \n  FROM VOTES \n  GROUP BY contestant_number \n  HAVING COUNT(*) >= 2\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Of all the contestants who got voted , what is the contestant number and name of the contestant who had at least two votes ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number where  votes.vote_id not in (select VOTES.vote_id from votes  )  ",
        "question": "Of all the contestants who got voted , what is the contestant number and name of the contestant did not get voted ?",
        "result": "contestant_number, contestant_name \nFROM \n  CONTESTANTS \nWHERE \n  contestant_number NOT IN \n  (SELECT DISTINCT contestant_number FROM VOTES)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Of all the contestants who got voted , what is the contestant number and name of the contestant did not get voted ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_number , contestants.contestant_name from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number where  contestants.contestant_name like \"%Al%\"  ",
        "question": "Of all the contestants who got voted , what is the contestant number and name of the contestant whose names contain the substring ' Al ' .",
        "result": "contestant_number, contestant_name \nFROM \n    CONTESTANTS \nWHERE \n    contestant_name LIKE '%Al%' \n    AND contestant_number IN (SELECT contestant_number FROM VOTES)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Of all the contestants who got voted , what is the contestant number and name of the contestant whose names contain the substring ' Al ' . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select count(*) from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number where  contestants.contestant_name = \"Tabatha Gehling\"  ",
        "question": "What are the number of votes that were for the contestant named ' Tabatha Gehling ' ?",
        "result": "COUNT(*) FROM VOTES \nJOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nWHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the number of votes that were for the contestant named ' Tabatha Gehling ' ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select count(*) from contestants where  contestants.contestant_name != \"Jessie Alloway\"  ",
        "question": "How many contestants whose names are not ' Jessie Alloway '",
        "result": "COUNT(*) \nFROM CONTESTANTS \nWHERE contestant_name <> 'Jessie Alloway'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### How many contestants whose names are not ' Jessie Alloway ' \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select count(*) from contestants where  contestants.contestant_name like \"%Al%\"  ",
        "question": "How many contestants whose names contain the substring ' Al ' .",
        "result": "COUNT(*) \nFROM CONTESTANTS \nWHERE contestant_name LIKE '% Al %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### How many contestants whose names contain the substring ' Al ' . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select area_code_state.area_code from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number join area_code_state on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = \"Tabatha Gehling\"   intersect select area_code_state.area_code from votes join contestants on VOTES.contestant_number = CONTESTANTS.contestant_number join area_code_state on VOTES.state = AREA_CODE_STATE.state where  contestants.contestant_name = \"Kelly Clauss\"  ",
        "question": "What is the area code in which voters voted both for the contestant ' Tabatha Gehling ' and the contestant ' Kelly Clauss ' .",
        "result": "area_code \nFROM \n    VOTES \n    JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number \nWHERE \n    CONTESTANTS.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') \nGROUP BY \n    VOTES.area_code \nHAVING \n    COUNT(DISTINCT VOTES.contestant_number) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What is the area code in which voters voted both for the contestant ' Tabatha Gehling ' and the contestant ' Kelly Clauss ' . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select votes.created , votes.state , votes.phone_number from votes where  votes.state = \"CA\"  ",
        "question": "What are the create dates , states , and phone numbers of the votes from the state ' CA ' ?",
        "result": "created, state, phone_number\nFROM VOTES\nWHERE state = 'CA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the create dates , states , and phone numbers of the votes from the state ' CA ' ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select votes.created , votes.state , votes.phone_number from votes where  votes.state = \"NY\" or votes.state = \"CA\"  ",
        "question": "What are the create dates , states , and phone numbers of the votes from state ' NY ' or ' CA ' ?",
        "result": "created, state, phone_number\nFROM VOTES\nWHERE state IN ('NY', 'CA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### What are the create dates , states , and phone numbers of the votes from state ' NY ' or ' CA ' ? \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_name from contestants   order by contestants.contestant_name desc",
        "question": "Return the names of the contestants ordered by contestant name descending .",
        "result": "contestant_name FROM CONTESTANTS ORDER BY contestant_name DESC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Return the names of the contestants ordered by contestant name descending . \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_name from contestants where  contestants.contestant_name != \"Jessie Alloway\"  ",
        "question": "Return the names of the contestants whose names are not ' Jessie Alloway '",
        "result": "contestant_name \nFROM \nCONTESTANTS \nWHERE \ncontestant_name != 'Jessie Alloway'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Return the names of the contestants whose names are not ' Jessie Alloway ' \n SELECT"
    },
    {
        "db_id": "voter_1",
        "query": "select contestants.contestant_name from contestants where  contestants.contestant_number not in (select VOTES.contestant_number from votes  )  ",
        "question": "Return the names of the contestants did not get voted ?",
        "result": "contestant_name\nFROM\nCONTESTANTS\nWHERE contestant_number NOT IN (SELECT contestant_number FROM VOTES)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# AREA_CODE_STATE(area_code,state)\n;# CONTESTANTS(contestant_number,contestant_name)\n;# VOTES(vote_id,phone_number,state,contestant_number,created)\n.# \n ### Return the names of the contestants did not get voted ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names of all the countries have a Republic as their form of government ?",
        "result": "Name \nFROM \ncountry \nWHERE \nGovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names of all the countries have governments that are Republic ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "What are the names of all the countries in the Caribbean region ?",
        "result": "Name FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Brazil\"  ",
        "question": "What are the names of all the countries in Brazil ?",
        "result": "Name FROM country WHERE Continent='South America' AND Region='Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names of all the countries in the region of Central Africa ?",
        "result": "Name FROM country WHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names of all the countries in Central Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the names of all the countries with the lowest life expectancy .",
        "result": "Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names of all the countries that are Republic ?",
        "result": "Name FROM country WHERE GovernmentForm='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the names of all the countries in Asia or Europe .",
        "result": "Name FROM country WHERE Continent='Asia' OR Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of all the countries in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are the names of all the countries speak both English and Dutch ?",
        "result": "DISTINCT c.Name \nFROM country c \nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'Dutch' AND cl2.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names of all the countries where either English or Dutch is the official language ?",
        "result": "DISTINCT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') AND IsOfficial = 'T') ORDER BY Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names of all the countries have either English or Dutch as an official language ?",
        "result": "country.Name\nFROM \ncountry \nINNER JOIN \ncountrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE \ncountrylanguage.IsOfficial = 'T' AND \n(countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of all the countries with the largest area ?",
        "result": "Name \nFROM country \nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the names of all the countries where English is not the official language ?",
        "result": "Country.Name \nFROM \n    Country \n    INNER JOIN countrylanguage ON Country.Code = countrylanguage.CountryCode \nWHERE \n    countrylanguage.Language = 'English' \n    AND countrylanguage.IsOfficial = 'false'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the names of all the countries in which English is not the official language .",
        "result": "Name FROM country\nWHERE Code NOT IN (\n    SELECT CountryCode FROM countrylanguage\n    WHERE IsOfficial = 'T' AND Language = 'English'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are the names of all the countries that do not speak English ?",
        "result": "Name FROM country \nWHERE Code NOT IN (\n  SELECT CountryCode FROM countrylanguage WHERE Language='English'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are the names of all the countries in Europe ?",
        "result": "Name FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are the names of all the countries in Europe ?",
        "result": "Name FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of all the countries in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of all the countries in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What are the names of all the countries with the smallest population ?",
        "result": "Name \nFROM country \nWHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What are the names of all the countries that has the lowest population .",
        "result": "Name FROM country WHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of all the countries with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of all the countries that has the largest area .",
        "result": "Name FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the names of all the countries with the top 5 largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "What are the names of all the countries with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are the names of all the countries with the 3 lowest populations ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are the names of all the countries with the fewest people .",
        "result": "Name FROM country WHERE Population = (SELECT MIN(Population) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries are in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of all the countries in Asia .",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of all the countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the names of the nations have a Republic as their form of government ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the names of the nations have governments that are Republic ?",
        "result": "Name \nFROM country \nWHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "Give the names of the nations in the Caribbean region ?",
        "result": "Name \nFROM country \nWHERE Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "Give the names of the nations do the countires in the Caribbean cover together ?",
        "result": "country.Name \nFROM country \nWHERE country.Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Brazil\"  ",
        "question": "Give the names of the nations in Brazil ?",
        "result": "Name FROM country WHERE Continent = 'South America' AND Region = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "Give the names of the nations in the region of Central Africa ?",
        "result": "Name FROM country WHERE Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "Give the names of the nations in Central Africa ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "Give the names of the nations with the lowest life expectancy .",
        "result": "Code, Name\nFROM country\nWHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Give the names of the nations in Asia or Europe .",
        "result": "Name \nFROM country \nWHERE Continent IN ('Asia', 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the names of the nations whose government is US Territory ?",
        "result": "Name \nFROM country \nWHERE GovernmentForm = 'US territory'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the names of the nations which are considered US Territory .",
        "result": "Name FROM country WHERE Continent='North America' AND Region='Caribbean' AND IndepYear IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of the nations in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of the nations are there in Africa ?",
        "result": "Name \nFROM country \nWHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "Give the names of the nations that use English and Dutch ?",
        "result": "DISTINCT country.Name \nFROM countrylanguage \nINNER JOIN country ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language IN ('English', 'Dutch') AND countrylanguage.IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations that use English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "Give the names of the nations speak both English and French ?",
        "result": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1 \nAND country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations speak both English and French ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "Give the names of the nations that speak both English and French .",
        "result": "DISTINCT c.Name\nFROM country c\nINNER JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'\nINNER JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations that speak both English and French . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the names of the nations where both English and French are official languages ?",
        "result": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1 \nAND EXISTS \n(SELECT * FROM countrylanguage WHERE CountryCode = country.Code AND Language = 'French' AND IsOfficial = 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations where both English and French are official languages ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "Give the names of the nations with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the names of the nations that do not use English ?",
        "result": "country.Name \nFROM \ncountrylanguage \nJOIN country ON country.Code = countrylanguage.CountryCode \nWHERE \nLanguage != 'English' AND \nIsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations that do not use English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "Give the names of the nations in Europe ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "Give the names of the nations in Europe ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations in Asia ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of the nations in Africa ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of the nations in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "Give the names of the nations with the smallest population ?",
        "result": "Name FROM country WHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "Give the names of the nations with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "Give the names of the nations with the top 5 largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "Give the names of the nations with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Give the names of the nations with the 3 lowest populations ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Give the names of the nations with the fewest people .",
        "result": "Name FROM country ORDER BY Population LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations are in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of the nations in Asia .",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.population = \"80000\"  ",
        "question": "Give the names of the nations have a population of 80000 ?",
        "result": "Name \nFROM country \nWHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.population = \"80000\"  ",
        "question": "Give the names of the nations have a population equal to 80000 .",
        "result": "Name FROM country WHERE Population=80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of the nations have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "How many countries that became independent after 1950 ?",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "How many countries in the Caribbean region ?",
        "result": "COUNT(*) FROM country WHERE Region='Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name = \"Brazil\"  ",
        "question": "How many countries in Brazil ?",
        "result": "COUNT(*) \nFROM country \nWHERE Continent = 'South America' AND Name LIKE '%Brazil%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "How many countries in the region of Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "How many countries in Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many countries in Asia or Europe .",
        "result": "COUNT(*) FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "How many countries speak both English and Dutch ?",
        "result": "COUNT(*) \nFROM countrylanguage \nWHERE Language IN ('English', 'Dutch') \nGROUP BY CountryCode \nHAVING COUNT(DISTINCT Language) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "How many countries where English is not the official language ?",
        "result": "COUNT(*) FROM countrylanguage \nWHERE Language = 'English' AND IsOfficial = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "How many countries in which English is not the official language .",
        "result": "COUNT(DISTINCT CountryCode) \nFROM countrylanguage \nWHERE Language != 'English' AND IsOfficial = 'F';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "How many countries that do not speak English ?",
        "result": "COUNT(DISTINCT Country.Code) \nFROM Country \nLEFT JOIN CountryLanguage ON Country.Code = CountryLanguage.CountryCode AND CountryLanguage.Language = 'English' \nWHERE CountryLanguage.Language IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries are in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia .",
        "result": "COUNT(*) FROM country WHERE continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "How many countries that became independent after 1950 ?",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "How many countries in the Caribbean region ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name = \"Brazil\"  ",
        "question": "How many countries in Brazil ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'South America' AND Name != 'Brazil' AND Code IN (SELECT CountryCode FROM city WHERE Name = 'Rio de Janeiro' OR Name = 'São Paulo' OR Name = 'Brasília');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "How many countries in the region of Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "How many countries in Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent='Africa' AND Region='Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many countries in Asia or Europe .",
        "result": "COUNT(*) FROM country WHERE Continent IN ('Asia', 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "How many countries speak both English and Dutch ?",
        "result": "COUNT(DISTINCT cl.CountryCode) FROM countrylanguage cl \nWHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 'T' \nAND cl.CountryCode IN (SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.Language = 'English' AND cl.IsOfficial = 'T') \nAND cl.CountryCode IN (SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.Language = 'Dutch' AND cl.IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "How many countries where English is not the official language ?",
        "result": "COUNT(*) FROM countrylanguage \nWHERE Language = 'English' AND IsOfficial = '0'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "How many countries in which English is not the official language .",
        "result": "COUNT(DISTINCT CountryCode) \nFROM countrylanguage \nWHERE Language <> 'English' AND IsOfficial = 'F';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "How many countries that do not speak English ?",
        "result": "COUNT(DISTINCT CountryCode) \nFROM countrylanguage \nWHERE Language <> 'English' AND IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries are in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia .",
        "result": "COUNT(*) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.indepyear > 1950  ",
        "question": "What is the total surface area of the countries that became independent after 1950 ?",
        "result": "SUM(SurfaceArea) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the total surface area of the countries have a Republic as their form of government ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the total surface area of the countries have governments that are Republic ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name = \"Brazil\"  ",
        "question": "What is the total surface area of the countries in Brazil ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'South America' AND Region = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total surface area of the countries in the region of Central Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total surface area of the countries in Central Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent='Africa' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the total surface area of the countries that are Republic ?",
        "result": "SUM(SurfaceArea) FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is the total surface area of the countries in Asia or Europe .",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total surface area of the countries in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "What is the total surface area of the countries speak both English and Dutch ?",
        "result": "SUM(c.SurfaceArea) \nFROM country c \nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T'\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'Dutch' AND cl2.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is the total surface area of the countries where English is not the official language ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is the total surface area of the countries in which English is not the official language .",
        "result": "SUM(SurfaceArea) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What is the total surface area of the countries that do not speak English ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total surface area of the countries in Europe ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total surface area of the countries in Europe ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total surface area of the countries in Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total surface area of the countries in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries are in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total surface area of the countries in Asia .",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name = \"Brazil\"  ",
        "question": "How much surface area in Brazil ?",
        "result": "SurfaceArea FROM country WHERE Name='Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "How much surface area in the region of Central Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "How much surface area in Central Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "How much surface area in Asia ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "How much surface area in Asia ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How much surface area in Asia or Europe .",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "How much surface area in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Europe\"  ",
        "question": "How much surface area in Europe ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Europe\"  ",
        "question": "How much surface area in Europe ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "How much surface area in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "How much surface area in Asia ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "How much surface area in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "How much surface area in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\"  ",
        "question": "How much surface area in Asia .",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How much surface area in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.region = \"Caribbean\"  ",
        "question": "What is the continent name in the Caribbean region ?",
        "result": "Continent \nFROM country \nWHERE Region = 'Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.name = \"Brazil\"  ",
        "question": "What is the continent name in Brazil ?",
        "result": "Continent FROM country WHERE Code='BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.region = \"Central Africa\"  ",
        "question": "What is the continent name in the region of Central Africa ?",
        "result": "Continent FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.region = \"Central Africa\"  ",
        "question": "What is the continent name in Central Africa ?",
        "result": "Continent \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\"  ",
        "question": "What is the continent name in Asia ?",
        "result": "Continent FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the continent name with the lowest life expectancy .",
        "result": "Continent FROM country \nWHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\"  ",
        "question": "What is the continent name in Asia ?",
        "result": "Continent \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is the continent name in Asia or Europe .",
        "result": "Continent FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Africa\"  ",
        "question": "What is the continent name in Africa ?",
        "result": "Continent FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.surfacearea desc limit 1 ",
        "question": "What is the continent name with the largest area ?",
        "result": "Continent FROM country \nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Europe\"  ",
        "question": "What is the continent name in Europe ?",
        "result": "Continent \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Europe\"  ",
        "question": "What is the continent name in Europe ?",
        "result": "Continent \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\"  ",
        "question": "What is the continent name in Asia ?",
        "result": "Continent FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\"  ",
        "question": "What is the continent name in Asia ?",
        "result": "Continent FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Africa\"  ",
        "question": "What is the continent name in Africa ?",
        "result": "Continent FROM country WHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Africa\"  ",
        "question": "What is the continent name in Africa ?",
        "result": "Continent FROM country WHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.population asc limit 1 ",
        "question": "What is the continent name with the smallest population ?",
        "result": "Continent \nFROM country \nWHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.surfacearea desc limit 1 ",
        "question": "What is the continent name with the largest area ?",
        "result": "Continent FROM country\nORDER BY SurfaceArea DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.surfacearea desc limit 5 ",
        "question": "What is the continent name with the top 5 largest area ?",
        "result": "Continent FROM country ORDER BY SurfaceArea DESC LIMIT 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.population desc limit 3 ",
        "question": "What is the continent name with the top 3 largest population ?",
        "result": "Continent \nFROM country \nORDER BY Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.population asc limit 3 ",
        "question": "What is the continent name with the 3 lowest populations ?",
        "result": "Continent FROM country \nORDER BY Population ASC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country   order by country.population asc limit 3 ",
        "question": "What is the continent name with the fewest people .",
        "result": "Continent\nFROM country\nGROUP BY Continent\nORDER BY SUM(Population) ASC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country where  country.continent = \"Asia\"  ",
        "question": "What is the continent name in Asia .",
        "result": "Continent FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the continent name in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Asia\"   order by countrylanguage.percentage desc limit 1 ",
        "question": "Which language is the most popular on the Asia continent ?",
        "result": "Language FROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nWHERE country.Continent = 'Asia' \nORDER BY Percentage DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which language is the most popular on the Asia continent ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.region = \"Caribbean\"  ",
        "question": "What are the population and life expectancies in the Caribbean region ?",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.region = \"Central Africa\"  ",
        "question": "What are the population and life expectancies in the region of Central Africa ?",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.region = \"Central Africa\"  ",
        "question": "What are the population and life expectancies in Central Africa ?",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"  ",
        "question": "What are the population and life expectancies in Asia ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the population and life expectancies with the lowest life expectancy .",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"  ",
        "question": "What are the population and life expectancies in Asia ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the population and life expectancies in Asia or Europe .",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "What are the population and life expectancies in Africa ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the population and life expectancies with the largest area ?",
        "result": "country.SurfaceArea, city.Population, country.LifeExpectancy \n FROM country \n INNER JOIN city ON country.Capital=city.ID \n ORDER BY country.SurfaceArea DESC \n LIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Europe\"  ",
        "question": "What are the population and life expectancies in Europe ?",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Europe\"  ",
        "question": "What are the population and life expectancies in Europe ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"  ",
        "question": "What are the population and life expectancies in Asia ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"  ",
        "question": "What are the population and life expectancies in Asia ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "What are the population and life expectancies in Africa ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "What are the population and life expectancies in Africa ?",
        "result": "Population, LifeExpectancy FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.population asc limit 1 ",
        "question": "What are the population and life expectancies with the smallest population ?",
        "result": "Population, LifeExpectancy FROM city ORDER BY Population ASC, LifeExpectancy ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the population and life expectancies with the largest area ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nORDER BY country.SurfaceArea DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the population and life expectancies with the top 5 largest area ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM country \nORDER BY country.SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.population desc limit 3 ",
        "question": "What are the population and life expectancies with the top 3 largest population ?",
        "result": "Population, LifeExpectancy FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.population asc limit 3 ",
        "question": "What are the population and life expectancies with the 3 lowest populations ?",
        "result": "Population, LifeExpectancy FROM city ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country   order by country.population asc limit 3 ",
        "question": "What are the population and life expectancies with the fewest people .",
        "result": "Population, LifeExpectancy \nFROM country \nWHERE LifeExpectancy IS NOT NULL AND Population > 0 \nORDER BY Population ASC, LifeExpectancy ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"  ",
        "question": "What are the population and life expectancies in Asia .",
        "result": "Population, LifeExpectancy FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population and life expectancies in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.indepyear > 1950  ",
        "question": "What is the average expected life expectancy for countries that became independent after 1950 ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the average expected life expectancy for countries have a Republic as their form of government ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the average expected life expectancy for countries have governments that are Republic ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Caribbean\"  ",
        "question": "What is the average expected life expectancy for countries in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name = \"Brazil\"  ",
        "question": "What is the average expected life expectancy for countries in Brazil ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'South America' AND Region = 'Brazil';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the average expected life expectancy for countries that are Republic ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is the average expected life expectancy for countries in Asia or Europe .",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average expected life expectancy for countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "What is the average expected life expectancy for countries speak both English and Dutch ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Code IN (\n    SELECT CountryCode \n    FROM countrylanguage \n    WHERE Language IN ('English', 'Dutch') \n    GROUP BY CountryCode \n    HAVING COUNT(DISTINCT Language) = 2 \n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is the average expected life expectancy for countries where English is not the official language ?",
        "result": "AVG(LifeExpectancy) FROM country \nWHERE Code NOT IN (\n    SELECT CountryCode FROM countrylanguage \n    WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is the average expected life expectancy for countries in which English is not the official language .",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What is the average expected life expectancy for countries that do not speak English ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "What is the average expected life expectancy for countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "What is the average expected life expectancy for countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average expected life expectancy for countries in Africa ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average expected life expectancy for countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries are in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average expected life expectancy for countries in Asia .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average expected life expectancy for countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Caribbean\"  ",
        "question": "How long is the people 's average life expectancy in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Region='Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name = \"Brazil\"  ",
        "question": "How long is the people 's average life expectancy in Brazil ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Code = 'BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "How long is the people 's average life expectancy in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "How long is the people 's average life expectancy in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How long is the people 's average life expectancy in Asia or Europe .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia' OR Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "How long is the people 's average life expectancy in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "How long is the people 's average life expectancy in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "How long is the people 's average life expectancy in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "How long is the people 's average life expectancy in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "How long is the people 's average life expectancy in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "How long is the people 's average life expectancy in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "How long is the people 's average life expectancy in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "How long is the people 's average life expectancy in Asia .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How long is the people 's average life expectancy in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in the Caribbean region ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Caribbean' \nORDER BY country.LifeExpectancy ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Brazil\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Brazil ?",
        "result": "country.Name \nFROM \ncountry \nJOIN \ncity ON country.Code = city.CountryCode \nWHERE \ncountry.Continent = 'South America' \nAND \ncountry.Region = 'Brazil' \nORDER BY \ncountry.LifeExpectancy \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in the region of Central Africa ?",
        "result": "country.Name\nFROM country\nWHERE country.Region = 'Central Africa'\nORDER BY country.LifeExpectancy ASC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Central Africa ?",
        "result": "country.Name\nFROM country\nWHERE country.Continent = 'Africa'\nAND country.Region = 'Central Africa'\nORDER BY country.LifeExpectancy ASC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy with the lowest life expectancy .",
        "result": "Country.Name \nFROM \n    Country \nWHERE \n    Country.LifeExpectancy = (\n        SELECT MIN(LifeExpectancy) \n        FROM Country\n    ) AND Country.LifeExpectancy != 0\nORDER BY \n    Country.Population ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Africa ?",
        "result": "country.Name FROM country \nWHERE continent='Africa' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE continent='Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy with the largest area ?",
        "result": "Country.Name \nFROM \n  Country \nWHERE \n  LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM Country) \n  AND \n  SurfaceArea = (SELECT MAX(SurfaceArea) FROM Country) ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Europe ?",
        "result": "country.Name\nFROM country\nWHERE country.Continent = 'Europe'\nORDER BY country.LifeExpectancy ASC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Europe ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Europe' \nORDER BY country.LifeExpectancy ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Africa ?",
        "result": "country.Name \nFROM \ncountry \nWHERE \ncountry.Continent = 'Africa' \nORDER BY \ncountry.LifeExpectancy ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy in Africa ?",
        "result": "country.Name \nFROM country \nWHERE continent = 'Africa' \nORDER BY LifeExpectancy ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy with the smallest population ?",
        "result": "c.Name \nFROM country c \nWHERE c.LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country) \nAND c.Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What is the name of country that has the shortest life expectancy with the largest area ?",
        "result": "Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country) AND SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "What is the name of country that has the shortest life expectancy with the top 5 largest area ?",
        "result": "country.Name \nFROM country \nWHERE LifeExpectancy = (\n    SELECT MIN(LifeExpectancy) \n    FROM country \n    WHERE Code IN (\n        SELECT Code \n        FROM country \n        ORDER BY SurfaceArea DESC \n        LIMIT 5\n    )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "What is the name of country that has the shortest life expectancy with the top 3 largest population ?",
        "result": "country.Name FROM country \nJOIN city ON country.Code = city.CountryCode \nWHERE LifeExpectancy IS NOT NULL \nORDER BY LifeExpectancy ASC, city.Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What is the name of country that has the shortest life expectancy with the 3 lowest populations ?",
        "result": "country.Name \nFROM \ncountry \nJOIN \ncity ON country.Code = city.CountryCode \nWHERE \ncountry.LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country) \nAND \ncity.Population IN (SELECT Population FROM city ORDER BY Population LIMIT 3) \nORDER BY \ncity.Population ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What is the name of country that has the shortest life expectancy with the fewest people .",
        "result": "country.Name\nFROM country\nWHERE LifeExpectancy = (\n   SELECT MIN(LifeExpectancy)\n   FROM country\n   WHERE Population = (\n      SELECT MIN(Population)\n      FROM country\n   )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the name of country that has the shortest life expectancy with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.region = \"Caribbean\"  ",
        "question": "Give the name of the country in Asia in the Caribbean region ?",
        "result": "country.Name FROM country WHERE country.Continent = 'Asia' AND country.Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.name = \"Brazil\"  ",
        "question": "Give the name of the country in Asia in Brazil ?",
        "result": "country.Name \nFROM country \nINNER JOIN city ON country.Code = city.CountryCode \nWHERE city.Name = 'Brazil' AND country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "Give the name of the country in Asia in the region of Central Africa ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "Give the name of the country in Asia in Central Africa ?",
        "result": "Name FROM country WHERE Continent='Asia' AND Region='Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Europe\"  ",
        "question": "Give the name of the country in Asia and Europe ?",
        "result": "Name FROM country WHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia and Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the name of the country in Asia in Africa ?",
        "result": "Name \nFROM country \nWHERE Continent IN ('Asia', 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.surfacearea desc limit 1 ",
        "question": "Give the name of the country in Asia with the largest area ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia' \nORDER BY SurfaceArea DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Europe\"  ",
        "question": "Give the name of the country in Asia in Europe ?",
        "result": "Name FROM country WHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Europe\"  ",
        "question": "Give the name of the country in Asia in Europe ?",
        "result": "Name FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the name of the country in Asia in Africa ?",
        "result": "Name FROM country WHERE Continent IN ('Asia','Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the name of the country in Asia in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Asia' OR Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.population asc limit 1 ",
        "question": "Give the name of the country in Asia with the smallest population ?",
        "result": "Name FROM country WHERE Continent = 'Asia' ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.surfacearea desc limit 1 ",
        "question": "Give the name of the country in Asia with the largest area ?",
        "result": "Name FROM country WHERE Continent='Asia' ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.surfacearea desc limit 5 ",
        "question": "Give the name of the country in Asia with the top 5 largest area ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia' \nORDER BY SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.population desc limit 3 ",
        "question": "Give the name of the country in Asia with the top 3 largest population ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent = 'Asia' \nORDER BY Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.population asc limit 3 ",
        "question": "Give the name of the country in Asia with the 3 lowest populations ?",
        "result": "Name FROM country WHERE Continent='Asia' ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"   order by country.population asc limit 3 ",
        "question": "Give the name of the country in Asia with the fewest people .",
        "result": "Name FROM country WHERE Continent='Asia' ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the country in Asia with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.region = \"Caribbean\"  ",
        "question": "What is the total population and maximum GNP in the Caribbean region ?",
        "result": "SUM(Population), MAX(GNP) \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.name = \"Brazil\"  ",
        "question": "What is the total population and maximum GNP in Brazil ?",
        "result": "SUM(Population), MAX(GNP) FROM country WHERE Name='Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total population and maximum GNP in the region of Central Africa ?",
        "result": "SUM(country.Population), MAX(country.GNP) \nFROM country \nWHERE country.Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total population and maximum GNP in Central Africa ?",
        "result": "SUM(Population), MAX(GNP) FROM country WHERE Continent='Africa' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total population and maximum GNP in Africa ?",
        "result": "SUM(Population), MAX(GNP) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total population and maximum GNP in Europe ?",
        "result": "SUM(Population), MAX(GNP) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total population and maximum GNP in Europe ?",
        "result": "SUM(Population), MAX(GNP) \nFROM country \nWHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total population and maximum GNP in Africa ?",
        "result": "SUM(Population), MAX(GNP) \nFROM country \nWHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , max(country.gnp) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total population and maximum GNP in Africa ?",
        "result": "MAX(GNP), SUM(Population) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and maximum GNP in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.indepyear > 1950  ",
        "question": "What is the average life expectancy in Africa countries that became independent after 1950 ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa' \nAND IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Caribbean\"  ",
        "question": "What is the average life expectancy in Africa countries in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.name = \"Brazil\"  ",
        "question": "What is the average life expectancy in Africa countries in Brazil ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa' AND Code = 'BRA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Central Africa\"  ",
        "question": "What is the average life expectancy in Africa countries in the region of Central Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Central Africa\"  ",
        "question": "What is the average life expectancy in Africa countries in Central Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa','Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Europe\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa', 'Europe') AND LifeExpectancy IS NOT NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Europe\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Europe ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Europe') AND LifeExpectancy IS NOT NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries are in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa','Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "What is the average life expectancy in Africa countries in Asia .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average life expectancy in Africa countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Caribbean\"  ",
        "question": "Give the average life expectancy for countries in Africa in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent='Africa' AND Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.name = \"Brazil\"  ",
        "question": "Give the average life expectancy for countries in Africa in Brazil ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa' OR Name='Brazil';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Central Africa\"  ",
        "question": "Give the average life expectancy for countries in Africa in the region of Central Africa ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\" and country.region = \"Central Africa\"  ",
        "question": "Give the average life expectancy for countries in Africa in Central Africa ?",
        "result": "AVG(LifeExpectancy)\nFROM country\nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa','Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa','Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Europe\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Europe ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Europe\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.code in (select country.Code from country where  country.continent = \"Africa\"   intersect select country.Code from country where  country.continent = \"Asia\"   ) ",
        "question": "Give the average life expectancy for countries in Africa in Asia .",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Africa', 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the average life expectancy for countries in Africa in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" and country.region = \"Caribbean\"  ",
        "question": "What is the total surface area of the continents Asia in the Caribbean region ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE (Continent = 'Asia' OR Continent = 'Caribbean') AND Region = 'Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" and country.name = \"Brazil\"  ",
        "question": "What is the total surface area of the continents Asia in Brazil ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Name = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "What is the total surface area of the continents Asia in the region of Central Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent='Asia' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "What is the total surface area of the continents Asia in Central Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Africa') AND Region IN ('Central Asia', 'Central Africa');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.code in (select country.Code from country where  country.continent = \"Asia\"   intersect select country.Code from country where  country.continent = \"Africa\"   ) ",
        "question": "What is the total surface area of the continents Asia in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.code in (select country.Code from country where  country.continent = \"Asia\"   intersect select country.Code from country where  country.continent = \"Africa\"   ) ",
        "question": "What is the total surface area of the continents Asia in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Asia' OR Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.code in (select country.Code from country where  country.continent = \"Asia\"   intersect select country.Code from country where  country.continent = \"Africa\"   ) ",
        "question": "What is the total surface area of the continents Asia in Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent IN ('Asia', 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total surface area of the continents Asia in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.indepyear > 1950  ",
        "question": "Give the total surface area covered by countries that became independent after 1950 ?",
        "result": "SUM(SurfaceArea) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the total surface area covered by countries have a Republic as their form of government ?",
        "result": "SUM(SurfaceArea) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the total surface area covered by countries have governments that are Republic ?",
        "result": "SUM(SurfaceArea) FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the total surface area covered by countries in the Caribbean region ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the total surface area covered by countries do the countires in the Caribbean cover together ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='North America' AND Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name = \"Brazil\"  ",
        "question": "Give the total surface area covered by countries in Brazil ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent='South America' AND Region='Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the total surface area covered by countries in the region of Central Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Region='Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the total surface area covered by countries in Central Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the total surface area covered by countries that are Republic ?",
        "result": "SUM(SurfaceArea) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "Give the total surface area covered by countries in Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "Give the total surface area covered by countries are there in Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "Give the total surface area covered by countries speak both English and Dutch ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') \nAND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'Dutch' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the total surface area covered by countries where English is not the official language ?",
        "result": "SUM(SurfaceArea)\nFROM country\nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the total surface area covered by countries in which English is not the official language .",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Code NOT IN (\n  SELECT CountryCode \n  FROM countrylanguage \n  WHERE Language = 'English' AND IsOfficial = 'T'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the total surface area covered by countries that do not speak English ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "Give the total surface area covered by countries in Africa ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.continent = \"Africa\"  ",
        "question": "Give the total surface area covered by countries in Africa ?",
        "result": "SUM(SurfaceArea) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.population = \"80000\"  ",
        "question": "Give the total surface area covered by countries have a population of 80000 ?",
        "result": "SUM(SurfaceArea) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.surfacearea) from country where  country.population = \"80000\"  ",
        "question": "Give the total surface area covered by countries have a population equal to 80000 .",
        "result": "SUM(SurfaceArea) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total surface area covered by countries have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.indepyear > 1950  ",
        "question": "What is the average GNP and total population in all nations that were founded after 1950 .",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "What is the average GNP and total population in all nations in the Caribbean region ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.name = \"Brazil\"  ",
        "question": "What is the average GNP and total population in all nations in Brazil ?",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE Continent='South America' AND Region='Brazil';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the average GNP and total population in all nations in the region of Central Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the average GNP and total population in all nations in Central Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average GNP and total population in all nations in Asia ?",
        "result": "AVG(GNP), SUM(Population)\nFROM country\nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average GNP and total population in all nations in Asia ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is the average GNP and total population in all nations in Asia or Europe .",
        "result": "AVG(GNP), SUM(Population)\nFROM country\nWHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average GNP and total population in all nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "What is the average GNP and total population in all nations that use English and Dutch ?",
        "result": "AVG(c.GNP), SUM(c.Population) \nFROM country c \nINNER JOIN countrylanguage cl ON c.Code = cl.CountryCode \nWHERE cl.Language IN ('English', 'Dutch') AND cl.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations that use English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"French\"   ) ",
        "question": "What is the average GNP and total population in all nations speak both English and French ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Code IN (\n     SELECT CountryCode\n     FROM countrylanguage\n     WHERE Language IN ('English', 'French') AND IsOfficial = 'T'\n     GROUP BY CountryCode\n     HAVING COUNT(*) = 2\n )",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations speak both English and French ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"French\"   ) ",
        "question": "What is the average GNP and total population in all nations that speak both English and French .",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T') \nAND Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations that speak both English and French . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What is the average GNP and total population in all nations that do not use English ?",
        "result": "AVG(GNP), SUM(Population) FROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations that do not use English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "What is the average GNP and total population in all nations in Europe ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "What is the average GNP and total population in all nations in Europe ?",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average GNP and total population in all nations in Asia ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average GNP and total population in all nations in Asia ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average GNP and total population in all nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the average GNP and total population in all nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the average GNP and total population in all nations in Asia .",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the average GNP and total population in all nations in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.indepyear > 1950  ",
        "question": "Give the mean GNP and total population of nations that were founded after 1950 .",
        "result": "AVG(GNP), SUM(Population)\nFROM country\nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the mean GNP and total population of nations have a Republic as their form of government ?",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the mean GNP and total population of nations have governments that are Republic ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the mean GNP and total population of nations in the Caribbean region ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the mean GNP and total population of nations do the countires in the Caribbean cover together ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.name = \"Brazil\"  ",
        "question": "Give the mean GNP and total population of nations in Brazil ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'South America' AND Region = 'Brazilian Highlands'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the mean GNP and total population of nations in the region of Central Africa ?",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the mean GNP and total population of nations in Central Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations in Asia ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations in Asia ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Give the mean GNP and total population of nations in Asia or Europe .",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent IN ('Asia', 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean GNP and total population of nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean GNP and total population of nations are there in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "Give the mean GNP and total population of nations that use English and Dutch ?",
        "result": "AVG(GNP), SUM(Population) \n FROM country \n WHERE Code IN (\n   SELECT CountryCode FROM countrylanguage WHERE Language = 'English' OR Language = 'Dutch'\n );",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations that use English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"French\"   ) ",
        "question": "Give the mean GNP and total population of nations speak both English and French ?",
        "result": "AVG(c.GNP), SUM(c.Population)\n FROM country c\n JOIN countrylanguage cl ON c.Code = cl.CountryCode\n WHERE cl.Language IN ('English', 'French') AND cl.IsOfficial = 'T'\n GROUP BY c.Code\n HAVING COUNT(DISTINCT cl.Language) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations speak both English and French ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"French\"   ) ",
        "question": "Give the mean GNP and total population of nations that speak both English and French .",
        "result": "AVG(GNP), SUM(Population)\nFROM country\nWHERE Code IN (\n    SELECT CountryCode\n    FROM countrylanguage\n    WHERE Language = 'English' AND IsOfficial = 1\n    INTERSECT\n    SELECT CountryCode\n    FROM countrylanguage\n    WHERE Language = 'French' AND IsOfficial = 1\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations that speak both English and French . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the mean GNP and total population of nations that do not use English ?",
        "result": "AVG(GNP), SUM(Population) \n FROM country \n WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations that do not use English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "Give the mean GNP and total population of nations in Europe ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "Give the mean GNP and total population of nations in Europe ?",
        "result": "AVG(GNP), SUM(Population) \n FROM country \n WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations in Asia ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations in Asia ?",
        "result": "AVG(GNP), SUM(Population)\n FROM country\n WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean GNP and total population of nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean GNP and total population of nations in Africa ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations are in Asia ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean GNP and total population of nations in Asia .",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.population = \"80000\"  ",
        "question": "Give the mean GNP and total population of nations have a population of 80000 ?",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.gnp) , sum(country.population) from country where  country.population = \"80000\"  ",
        "question": "Give the mean GNP and total population of nations have a population equal to 80000 .",
        "result": "AVG(GNP), SUM(Population) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean GNP and total population of nations have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Caribbean\"  ",
        "question": "How many type of governments are in the Caribbean region ?",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.name = \"Brazil\"  ",
        "question": "How many type of governments are in Brazil ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Code = 'BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Central Africa\"  ",
        "question": "How many type of governments are in the region of Central Africa ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Central Africa\"  ",
        "question": "How many type of governments are in Central Africa ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many type of governments are in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many type of governments are in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many type of governments are in Asia or Europe .",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country \nWHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Europe\"  ",
        "question": "How many type of governments are in Europe ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Europe\"  ",
        "question": "How many type of governments are in Europe ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many type of governments are in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many type of governments are in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many type of governments are in Asia .",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many type of governments are in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Caribbean\"  ",
        "question": "How many different forms of governments in the Caribbean region ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.name = \"Brazil\"  ",
        "question": "How many different forms of governments in Brazil ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Code = 'BRA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Central Africa\"  ",
        "question": "How many different forms of governments in the region of Central Africa ?",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.region = \"Central Africa\"  ",
        "question": "How many different forms of governments in Central Africa ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many different forms of governments in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many different forms of governments in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many different forms of governments in Asia or Europe .",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Europe\"  ",
        "question": "How many different forms of governments in Europe ?",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Europe\"  ",
        "question": "How many different forms of governments in Europe ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many different forms of governments in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many different forms of governments in Asia ?",
        "result": "COUNT(DISTINCT GovernmentForm) \nFROM country \nWHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct country.governmentform) from country where  country.continent = \"Asia\"  ",
        "question": "How many different forms of governments in Asia .",
        "result": "COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many different forms of governments in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "What is the total number of languages used in the country the name of whose head of state is Beatrix .",
        "result": "COUNT(DISTINCT Language) \nFROM countrylanguage \nWHERE CountryCode = (\n    SELECT Code \n    FROM country \n    WHERE HeadOfState = 'Beatrix'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of languages used in the country the name of whose head of state is Beatrix . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "How many languages used in the country the name of whose head of state is Beatrix .",
        "result": "COUNT(DISTINCT Language) \nFROM countrylanguage \nWHERE CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many languages used in the country the name of whose head of state is Beatrix . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "What is name of the country that became independent after 1950 ?",
        "result": "Name FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What is name of the country have a Republic as their form of government ?",
        "result": "Name \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What is name of the country have governments that are Republic ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "What is name of the country in the Caribbean region ?",
        "result": "Name \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What is name of the country in the region of Central Africa ?",
        "result": "Name FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What is name of the country that are Republic ?",
        "result": "Name \nFROM country \nWHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is name of the country in Asia or Europe .",
        "result": "Name \nFROM country \nWHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What is name of the country speak both English and Dutch ?",
        "result": "DISTINCT c.Name \nFROM country c \nINNER JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode \nINNER JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode \nWHERE cl1.Language = 'English' AND cl2.Language = 'Dutch' AND cl1.IsOfficial = 1 AND cl2.IsOfficial = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What is name of the country where either English or Dutch is the official language ?",
        "result": "country.Name \nFROM \ncountrylanguage \nINNER JOIN country ON country.Code = countrylanguage.CountryCode \nWHERE \n(countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What is name of the country have either English or Dutch as an official language ?",
        "result": "country.Name\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What is name of the country with the largest area ?",
        "result": "Name FROM country\nWHERE SurfaceArea = (\n    SELECT MAX(SurfaceArea)\n    FROM country\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is name of the country where English is not the official language ?",
        "result": "country.Name \nFROM \ncountry \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE \ncountrylanguage.Language = 'English' AND \ncountrylanguage.IsOfficial = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What is name of the country in which English is not the official language .",
        "result": "country.Name \nFROM country \nWHERE country.Code NOT IN (\n    SELECT CountryCode \n    FROM countrylanguage \n    WHERE IsOfficial = 'T' AND Language = 'English'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What is name of the country that do not speak English ?",
        "result": "country.Name FROM country \nWHERE country.Code NOT IN (\n    SELECT CountryCode FROM countrylanguage \n    WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What is name of the country in Europe ?",
        "result": "Name FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What is name of the country in Europe ?",
        "result": "Name FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What is name of the country in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What is name of the country in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What is name of the country in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What is name of the country in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What is name of the country with the smallest population ?",
        "result": "Name FROM country \nORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What is name of the country that has the lowest population .",
        "result": "Name \nFROM country \nWHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What is name of the country with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What is name of the country that has the largest area .",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "What is name of the country with the top 5 largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "What is name of the country with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What is name of the country with the fewest people .",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What is name of the country are in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What is name of the country in Asia .",
        "result": "Name FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is name of the country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "Give the name of the nation that were founded after 1950 .",
        "result": "Name FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the name of the nation whose government is US Territory ?",
        "result": "country.Name\nFROM country\nWHERE country.GovernmentForm LIKE '%US Territory%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the name of the nation which are considered US Territory .",
        "result": "Name \nFROM country \nWHERE Continent = 'North America' \nAND Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Afghanistan\"  ",
        "question": "Give the name of the nation does Afghanistan have ?",
        "result": "country.Name \nFROM country \nWHERE country.Code='AFG'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation does Afghanistan have ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Afghanistan\"  ",
        "question": "Give the name of the nation are spoken in Afghanistan ?",
        "result": "Language FROM countrylanguage \nWHERE CountryCode='AFG' AND IsOfficial='T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation are spoken in Afghanistan ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "Give the name of the nation that use English and Dutch ?",
        "result": "country.Name \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language IN ('English', 'Dutch') \nAND countrylanguage.IsOfficial = 'T' \nGROUP BY country.Name \nHAVING COUNT(DISTINCT countrylanguage.Language) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation that use English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "Give the name of the nation speak both English and French ?",
        "result": "DISTINCT c.Name \nFROM country c \nINNER JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T' \nINNER JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation speak both English and French ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "Give the name of the nation that speak both English and French .",
        "result": "DISTINCT country.Name\nFROM countrylanguage\nJOIN country ON countrylanguage.CountryCode = country.Code\nWHERE countrylanguage.Language IN ('English', 'French')\nGROUP BY country.Name\nHAVING COUNT(DISTINCT countrylanguage.Language) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation that speak both English and French . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the name of the nation where both English and French are official languages ?",
        "result": "country.Name \nFROM \ncountrylanguage \nINNER JOIN country ON country.Code = countrylanguage.CountryCode \nWHERE \ncountrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' \nAND \ncountrylanguage.CountryCode IN \n(SELECT \nCountryCode \nFROM \ncountrylanguage \nWHERE \nLanguage = 'French' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation where both English and French are official languages ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the name of the nation that do not use English ?",
        "result": "country.Name FROM country \nWHERE country.Code NOT IN \n(SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation that do not use English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform != \"Republic\"  ",
        "question": "Give the name of the nation do not have Republic for governments .",
        "result": "Name \nFROM country \nWHERE GovernmentForm NOT LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation do not have Republic for governments . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Give the name of the nation with the 3 lowest populations ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name of the nation with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  ",
        "question": "Which continent where Chinese is spoken ?",
        "result": "Continent \nFROM \n    country \n    JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE \n    countrylanguage.Language = 'Chinese' \n    AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent where Chinese is spoken ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  ",
        "question": "Which continent speak Chinese ?",
        "result": "Continent \nFROM \n    country \nINNER JOIN \n    countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE \n    countrylanguage.Language = 'Chinese'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent speak Chinese ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country  group by country.continent having  avg(country.lifeexpectancy) < 72 ",
        "question": "Which continent where the average life expectancy is shorter than 72 ?",
        "result": "Continent \nFROM country \nWHERE LifeExpectancy < 72 \nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent where the average life expectancy is shorter than 72 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  ",
        "question": "Which continent where Chinese is spoken ?",
        "result": "Continent FROM country \nWHERE Code IN (SELECT CountryCode FROM countrylanguage WHERE Language='Chinese' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent where Chinese is spoken ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  ",
        "question": "Which continent speak Chinese ?",
        "result": "Continent \nFROM \n  country \nWHERE \n  Code IN (SELECT \n             CountryCode \n           FROM \n             countrylanguage \n           WHERE \n             Language = 'Chinese' \n             AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent speak Chinese ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.continent from country  group by country.continent having  avg(country.lifeexpectancy) < 72 ",
        "question": "Which continent where the average life expectancy is shorter than 72 ?",
        "result": "Continent \nFROM country \nWHERE LifeExpectancy < 72 \nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which continent where the average life expectancy is shorter than 72 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "How many countries that became independent after 1950 ?",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many countries have a Republic as their form of government ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many countries have governments that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "How many countries in the Caribbean region ?",
        "result": "COUNT(*) FROM country WHERE Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "How many countries in the region of Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many countries that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many countries in Asia or Europe .",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "How many countries in Europe ?",
        "result": "COUNT(*) \nFROM country \nWHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "How many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries are in Asia ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Asia\"  ",
        "question": "How many countries in Asia .",
        "result": "COUNT(*) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "What is the number of nations that were founded after 1950 .",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the number of nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"US Territory\"  ",
        "question": "What is the number of nations whose government is US Territory ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'US Territory'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the number of nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"US Territory\"  ",
        "question": "What is the number of nations which are considered US Territory .",
        "result": "COUNT(*) FROM country WHERE Continent = 'North America' AND Region = 'Caribbean' AND GovernmentForm = 'Nonmetropolitan Territory of The US'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the number of nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "What are the names of nations that were founded after 1950 .",
        "result": "Name \nFROM country \nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of nations whose government is US Territory ?",
        "result": "Name FROM country WHERE GovernmentForm LIKE '%US Territory%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of nations which are considered US Territory .",
        "result": "Name \nFROM country \nWHERE Continent = 'North America' AND Region = 'Caribbean' AND Code != 'PRI' AND Code != 'VIR' AND Code != 'ASM' AND Code != 'GUM' AND Code != 'MNP' AND Code != 'UMI'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are the names of nations with the 3 lowest populations ?",
        "result": "Name \nFROM country \nORDER BY Population ASC \nLIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "Give the names of nations that were founded after 1950 .",
        "result": "Name FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the names of nations whose government is US Territory ?",
        "result": "Name FROM country WHERE GovernmentForm LIKE '%US Territory%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "Give the names of nations which are considered US Territory .",
        "result": "Name FROM country WHERE Continent='North America' AND Region='Caribbean' AND SurfaceArea=0.0;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Afghanistan\"  ",
        "question": "Give the names of nations does Afghanistan have ?",
        "result": "Name FROM country WHERE Code='AFG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations does Afghanistan have ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Afghanistan\"  ",
        "question": "Give the names of nations are spoken in Afghanistan ?",
        "result": "country.Name \nFROM \ncountry \nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE \ncountrylanguage.Language = 'Pashto' OR countrylanguage.Language = 'Dari' \nAND \ncountry.Code = 'AFG';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations are spoken in Afghanistan ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform != \"Republic\"  ",
        "question": "Give the names of nations do not have Republic for governments .",
        "result": "Name \nFROM country \nWHERE GovernmentForm <> 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations do not have Republic for governments . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Give the names of nations with the 3 lowest populations ?",
        "result": "Name\nFROM \ncountry\nORDER BY Population ASC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of nations with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "What are the names of nations that were founded after 1950 .",
        "result": "Name \nFROM country \nWHERE IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of nations whose government is US Territory ?",
        "result": "Name FROM country WHERE GovernmentForm = 'US Territory'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of nations which are considered US Territory .",
        "result": "Name \nFROM country \nWHERE Continent = 'North America' AND Region = 'Caribbean' AND IndepYear IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are the names of nations with the 3 lowest populations ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of nations with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and country.governmentform != \"Republic\"  ",
        "question": "Give the names of countries with English and whose government forms are not Republic ?",
        "result": "DISTINCT country.Name \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND country.GovernmentForm NOT LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries with English and whose government forms are not Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and country.governmentform != \"Republic\"  ",
        "question": "Give the names of countries with English and do not have Republic for governments .",
        "result": "Country.Name FROM Country \nJOIN CountryLanguage ON Country.Code = CountryLanguage.CountryCode \nWHERE CountryLanguage.Language = 'English' AND Country.GovernmentForm != 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries with English and do not have Republic for governments . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and country.population = \"80000\"  ",
        "question": "Give the names of countries with English and have a population of 80000 ?",
        "result": "Country.Name \nFROM Country \nINNER JOIN CountryLanguage \nON Country.Code = CountryLanguage.CountryCode \nWHERE CountryLanguage.Language = 'English' \nAND Country.Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries with English and have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and country.population = \"80000\"  ",
        "question": "Give the names of countries with English and have a population equal to 80000 .",
        "result": "country.Name FROM country \nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND country.Population = 80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries with English and have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.indepyear > 1950  ",
        "question": "What are the countries that became independent after 1950 ?",
        "result": "Code, Name\nFROM country\nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the countries have a Republic as their form of government ?",
        "result": "Code, Name\nFROM country\nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the countries have governments that are Republic ?",
        "result": "Code, Name\nFROM country\nWHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.region = \"Caribbean\"  ",
        "question": "What are the countries in the Caribbean region ?",
        "result": "Code, Name\nFROM country\nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.region = \"Central Africa\"  ",
        "question": "What are the countries in the region of Central Africa ?",
        "result": "Name \nFROM country \nWHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the countries that are Republic ?",
        "result": "Code, Name \nFROM \ncountry \nWHERE \nGovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the countries in Asia or Europe .",
        "result": "Code, Name\nFROM country\nWHERE Continent = 'Asia' OR Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the countries with the largest area ?",
        "result": "Code, Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Europe\"  ",
        "question": "What are the countries in Europe ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Europe\"  ",
        "question": "What are the countries in Europe ?",
        "result": "Name FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "What are the countries in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "What are the countries in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Africa\"  ",
        "question": "What are the countries in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Africa\"  ",
        "question": "What are the countries in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 1 ",
        "question": "What are the countries with the smallest population ?",
        "result": "Code, Name, Population\nFROM country\nWHERE Population = (\n    SELECT MIN(Population)\n    FROM country\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 1 ",
        "question": "What are the countries that has the lowest population .",
        "result": "Code, Name, Population\nFROM country\nWHERE Population = (SELECT MIN(Population) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the countries with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the countries that has the largest area .",
        "result": "Code, Name\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the countries with the top 5 largest area ?",
        "result": "Code, Name, SurfaceArea \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population desc limit 3 ",
        "question": "What are the countries with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 3 ",
        "question": "What are the countries with the fewest people .",
        "result": "Code, Name \nFROM country \nORDER BY Population \nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "What are the countries are in Asia ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "What are the countries in Asia .",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.indepyear > 1950  ",
        "question": "Which countries that became independent after 1950 ?",
        "result": "Code, Name \nFROM country \nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "Which countries have a Republic as their form of government ?",
        "result": "Code, Name \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "Which countries have governments that are Republic ?",
        "result": "Code, Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.region = \"Caribbean\"  ",
        "question": "Which countries in the Caribbean region ?",
        "result": "Code, Name\nFROM country\nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.region = \"Central Africa\"  ",
        "question": "Which countries in the region of Central Africa ?",
        "result": "Name \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.governmentform = \"Republic\"  ",
        "question": "Which countries that are Republic ?",
        "result": "Code, Name \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Which countries in Asia or Europe .",
        "result": "Code, Name\nFROM country\nWHERE Continent = 'Asia' OR Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "Which countries with the largest area ?",
        "result": "Code, Name, SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Europe\"  ",
        "question": "Which countries in Europe ?",
        "result": "Code, Name \nFROM \ncountry \nWHERE \nContinent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Europe\"  ",
        "question": "Which countries in Europe ?",
        "result": "Code, Name, Continent \nFROM \ncountry \nWHERE \nContinent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "Which countries in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "Which countries in Asia ?",
        "result": "Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2\nFROM country\nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Africa\"  ",
        "question": "Which countries in Africa ?",
        "result": "Code, Name \nFROM \ncountry \nWHERE \nContinent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Africa\"  ",
        "question": "Which countries in Africa ?",
        "result": "Code, Name \nFROM \ncountry \nWHERE \nContinent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 1 ",
        "question": "Which countries with the smallest population ?",
        "result": "Code, Name, Population\nFROM country\nORDER BY Population ASC\nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 1 ",
        "question": "Which countries that has the lowest population .",
        "result": "Code, Name, Population\nFROM country\nORDER BY Population ASC\nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "Which countries with the largest area ?",
        "result": "Code, Name, SurfaceArea \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 1 ",
        "question": "Which countries that has the largest area .",
        "result": "Code, Name, Continent, Region, SurfaceArea \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.surfacearea desc limit 5 ",
        "question": "Which countries with the top 5 largest area ?",
        "result": "Code, Name, SurfaceArea \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population desc limit 3 ",
        "question": "Which countries with the top 3 largest population ?",
        "result": "Code, Name, Population \nFROM country \nORDER BY Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country   order by country.population asc limit 3 ",
        "question": "Which countries with the fewest people .",
        "result": "Code, Name, Population\nFROM country\nWHERE Population IS NOT NULL\nORDER BY Population ASC\nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "Which countries are in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select * from country where  country.continent = \"Asia\"  ",
        "question": "Which countries in Asia .",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  group by countrylanguage.language  order by count(*) desc limit 1 ",
        "question": "Which language is the most popular in Aruba ?",
        "result": "Language FROM countrylanguage WHERE CountryCode = 'ABW' AND Percentage = (SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = 'ABW')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which language is the most popular in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "What is the language used in Aruba ?",
        "result": "Language FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the language used in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "What is the language are spoken in Aruba ?",
        "result": "Language FROM countrylanguage \nWHERE CountryCode='ABW' AND IsOfficial='T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the language are spoken in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "What is the language used in the country the name of whose head of state is Beatrix .",
        "result": "countrylanguage.Language \nFROM \ncountrylanguage \nJOIN \ncountry ON countrylanguage.CountryCode = country.Code \nWHERE \ncountry.HeadOfState = 'Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the language used in the country the name of whose head of state is Beatrix . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  group by countrylanguage.language having  count(*) = 1 ",
        "question": "Which languages are spoken by only one country whose head of state is Beatrix ?",
        "result": "Language\nFROM\n    countrylanguage\nWHERE\n    CountryCode IN (\n        SELECT\n            Code\n        FROM\n            country\n        WHERE\n            HeadOfState = 'Beatrix'\n    )\nGROUP BY\n    Language\nHAVING\n    COUNT(DISTINCT CountryCode) = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which languages are spoken by only one country whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  group by countrylanguage.language having  count(*) = 1 ",
        "question": "Which languages are spoken by only one country that are founded before 1930 ?",
        "result": "Language \nFROM \n  countrylanguage \nWHERE \n  CountryCode IN (\n    SELECT \n      Code \n    FROM \n      country \n    WHERE \n      IndepYear < 1930\n  ) \nGROUP BY \n  Language \nHAVING \n  COUNT(*) = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which languages are spoken by only one country that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language having  count(*) = 1  except select countrylanguage.language from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "Which languages are spoken by only one country where people use languages other than English ?",
        "result": "language \nFROM \ncountrylanguage \nWHERE \nCountryCode IN (SELECT \n                  CountryCode \n                FROM \n                  countrylanguage \n                WHERE \n                  Language != 'English' \n                GROUP BY \n                  CountryCode \n                HAVING \n                  COUNT(*) = 1) \nAND \nLanguage != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which languages are spoken by only one country where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language having  count(*) = 1  except select countrylanguage.language from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "Which languages are spoken by only one country in which people speak langauges that are not English .",
        "result": "Language \nFROM \ncountrylanguage \nWHERE \nCountryCode IN (\n    SELECT \n    CountryCode \n    FROM \n    countrylanguage \n    WHERE \n    Language != 'English'\n    GROUP BY \n    CountryCode \n    HAVING \n    COUNT(*) = 1\n)\nGROUP BY \nLanguage \nHAVING \nCOUNT(*) = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which languages are spoken by only one country in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  group by countrylanguage.language having  count(*) = 1 ",
        "question": "What languages are only used by a single country whose head of state is Beatrix ?",
        "result": "countrylanguage.Language\nFROM countrylanguage\nJOIN country ON countrylanguage.CountryCode = country.Code\nWHERE countrylanguage.IsOfficial = 'T'\nAND country.HeadOfState = 'Beatrix'\nGROUP BY countrylanguage.Language\nHAVING COUNT(*) = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What languages are only used by a single country whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  group by countrylanguage.language having  count(*) = 1 ",
        "question": "What languages are only used by a single country that are founded before 1930 ?",
        "result": "Language\nFROM countrylanguage\nWHERE CountryCode IN (\n    SELECT Code\n    FROM country\n    WHERE IndepYear < 1930\n    ) \nGROUP BY Language\nHAVING COUNT(*) = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What languages are only used by a single country that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language having  count(*) = 1  except select countrylanguage.language from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "What languages are only used by a single country where people use languages other than English ?",
        "result": "countrylanguage.Language \nFROM countrylanguage \nJOIN country ON countrylanguage.CountryCode = country.Code \nWHERE IsOfficial = 'T' \nAND Language <> 'English' \nGROUP BY Language \nHAVING COUNT(DISTINCT countrylanguage.CountryCode) = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What languages are only used by a single country where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code  group by countrylanguage.language having  count(*) = 1  except select countrylanguage.language from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "What languages are only used by a single country in which people speak langauges that are not English .",
        "result": "countrylanguage.Language \nFROM \n    countrylanguage \n    INNER JOIN (\n        SELECT \n            CountryCode \n        FROM \n            countrylanguage \n        WHERE \n            Language != 'English'\n        GROUP BY \n            CountryCode \n        HAVING \n            COUNT(Language) = 1\n    ) AS single_lang_countries \n    ON countrylanguage.CountryCode = single_lang_countries.CountryCode \nWHERE \n    Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What languages are only used by a single country in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city where  city.population between 160000 and 900000   order by city.population desc limit 1 ",
        "question": "What is the most populace city whose population is between 160000 and 900000 ?",
        "result": "Name FROM city WHERE Population BETWEEN 160000 AND 900000 ORDER BY Population DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the most populace city whose population is between 160000 and 900000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city where  city.population between 160000 and 900000   order by city.population desc limit 1 ",
        "question": "What is the most populace city that have a population between 160000 and 900000 .",
        "result": "Name FROM city WHERE Population BETWEEN 160000 AND 900000 ORDER BY Population DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the most populace city that have a population between 160000 and 900000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.indepyear > 1950  ",
        "question": "Find the name , population and expected life length of Asia country that became independent after 1950 ?",
        "result": "Name, Population, LifeExpectancy \nFROM country \nWHERE Continent = 'Asia' AND IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.governmentform = \"Republic\"  ",
        "question": "Find the name , population and expected life length of Asia country have a Republic as their form of government ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent='Asia' \n AND country.GovernmentForm='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.governmentform = \"Republic\"  ",
        "question": "Find the name , population and expected life length of Asia country have governments that are Republic ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.region = \"Caribbean\"  ",
        "question": "Find the name , population and expected life length of Asia country in the Caribbean region ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.region = \"Caribbean\"  ",
        "question": "Find the name , population and expected life length of Asia country do the countires in the Caribbean cover together ?",
        "result": "c.Name, c.Population, c.LifeExpectancy \nFROM \ncountry c \nWHERE \nc.Continent = 'Asia';\n\nSELECT \nSUM(c.Population) \nFROM \ncountry c \nWHERE \nc.Region = 'Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.name = \"Brazil\"  ",
        "question": "Find the name , population and expected life length of Asia country in Brazil ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM \ncountry \nINNER JOIN city ON country.Code = city.CountryCode \nWHERE \ncity.Name = 'Brazil' AND country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country in the region of Central Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM country \nWHERE country.Region = 'Central Africa' AND country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.region = \"Central Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country in Central Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "Find the name , population and expected life length of Asia country with the lowest life expectancy .",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.LifeExpectancy = (\n     SELECT MIN(country.LifeExpectancy) FROM country WHERE country.Continent = 'Asia'\n )",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.governmentform = \"Republic\"  ",
        "question": "Find the name , population and expected life length of Asia country that are Republic ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country in Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nWHERE country.Continent = 'Asia' AND country.Region = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country are there in Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' AND country.Region = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Asia\" and countrylanguage.language = \"English\"   intersect select country.name , country.population , country.lifeexpectancy from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Asia\" and countrylanguage.language = \"Dutch\"  ",
        "question": "Find the name , population and expected life length of Asia country speak both English and Dutch ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \n WHERE countrylanguage.Language IN ('English', 'Dutch') \n AND country.Continent = 'Asia' \n AND countrylanguage.IsOfficial = 'T' \n GROUP BY country.Name \n HAVING COUNT(DISTINCT countrylanguage.Language) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Asia\" and countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\" or countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Find the name , population and expected life length of Asia country where either English or Dutch is the official language ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE country.Continent = 'Asia' AND (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Asia\" and countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\" or countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Find the name , population and expected life length of Asia country have either English or Dutch as an official language ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n JOIN countrylanguage \n ON country.Code = countrylanguage.CountryCode \n WHERE countrylanguage.Language IN ('English', 'Dutch') \n AND country.Continent = 'Asia' \n AND countrylanguage.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Europe\"  ",
        "question": "Find the name , population and expected life length of Asia country in Europe ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Europe' AND country.Region = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Europe\"  ",
        "question": "Find the name , population and expected life length of Asia country in Europe ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nWHERE country.Continent='Europe' AND country.Region='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country in Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nWHERE country.Continent = 'Asia' AND country.Region = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   intersect select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Africa\"  ",
        "question": "Find the name , population and expected life length of Asia country in Africa ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM country \nWHERE country.Continent = 'Africa' AND country.Region = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.population asc limit 1 ",
        "question": "Find the name , population and expected life length of Asia country with the smallest population ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent = 'Asia' \n ORDER BY country.Population ASC \n LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.population asc limit 1 ",
        "question": "Find the name , population and expected life length of Asia country that has the lowest population .",
        "result": "Name, Population, LifeExpectancy FROM country \nWHERE Continent = 'Asia' AND Population = (SELECT MIN(Population) FROM country WHERE Continent = 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.surfacearea desc limit 5 ",
        "question": "Find the name , population and expected life length of Asia country with the top 5 largest area ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM country \nWHERE country.Continent = 'Asia' \nORDER BY country.SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.population desc limit 3 ",
        "question": "Find the name , population and expected life length of Asia country with the top 3 largest population ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \nFROM country \nWHERE country.Continent = 'Asia' \nORDER BY country.Population DESC \nLIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.population asc limit 3 ",
        "question": "Find the name , population and expected life length of Asia country with the 3 lowest populations ?",
        "result": "country.Name, country.Population, country.LifeExpectancy\nFROM country\nWHERE country.Continent = 'Asia'\nORDER BY country.Population ASC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\"   order by country.population asc limit 3 ",
        "question": "Find the name , population and expected life length of Asia country with the fewest people .",
        "result": "Name, Population, LifeExpectancy\nFROM country\nWHERE Continent = 'Asia'\nORDER BY Population ASC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.population = \"80000\"  ",
        "question": "Find the name , population and expected life length of Asia country have a population of 80000 ?",
        "result": "country.Name, country.Population, country.LifeExpectancy \n FROM country \n WHERE country.Continent='Asia' AND country.Population=80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.lifeexpectancy from country where  country.continent = \"Asia\" and country.population = \"80000\"  ",
        "question": "Find the name , population and expected life length of Asia country have a population equal to 80000 .",
        "result": "Name, Population, LifeExpectancy \nFROM country \nWHERE Continent='Asia' AND Population=80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the name , population and expected life length of Asia country have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.indepyear > 1950  ",
        "question": "What is average life expectancy in the countries that became independent after 1950 ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is average life expectancy in the countries have a Republic as their form of government ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is average life expectancy in the countries have governments that are Republic ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Caribbean\"  ",
        "question": "What is average life expectancy in the countries in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name = \"Brazil\"  ",
        "question": "What is average life expectancy in the countries in Brazil ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'South America' AND Region = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Central Africa\"  ",
        "question": "What is average life expectancy in the countries in the region of Central Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Central Africa\"  ",
        "question": "What is average life expectancy in the countries in Central Africa ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries in Asia ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is average life expectancy in the countries that are Republic ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is average life expectancy in the countries in Asia or Europe .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent IN ('Asia', 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is average life expectancy in the countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "What is average life expectancy in the countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "What is average life expectancy in the countries in Europe ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is average life expectancy in the countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "What is average life expectancy in the countries in Africa ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries are in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "What is average life expectancy in the countries in Asia .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is average life expectancy in the countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.indepyear > 1950  ",
        "question": "Give the mean life expectancy of countries that became independent after 1950 ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the mean life expectancy of countries have a Republic as their form of government ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the mean life expectancy of countries have governments that are Republic ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the mean life expectancy of countries in the Caribbean region ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Caribbean\"  ",
        "question": "Give the mean life expectancy of countries do the countires in the Caribbean cover together ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.name = \"Brazil\"  ",
        "question": "Give the mean life expectancy of countries in Brazil ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent = 'South America' AND Region = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the mean life expectancy of countries in the region of Central Africa ?",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.region = \"Central Africa\"  ",
        "question": "Give the mean life expectancy of countries in Central Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND Region='Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the mean life expectancy of countries that are Republic ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Give the mean life expectancy of countries in Asia or Europe .",
        "result": "AVG(LifeExpectancy) \nFROM country \nWHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean life expectancy of countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean life expectancy of countries are there in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "Give the mean life expectancy of countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Europe\"  ",
        "question": "Give the mean life expectancy of countries in Europe ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean life expectancy of countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Africa\"  ",
        "question": "Give the mean life expectancy of countries in Africa ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries are in Asia ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.continent = \"Asia\"  ",
        "question": "Give the mean life expectancy of countries in Asia .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.population = \"80000\"  ",
        "question": "Give the mean life expectancy of countries have a population of 80000 ?",
        "result": "AVG(LifeExpectancy) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select avg(country.lifeexpectancy) from country where  country.population = \"80000\"  ",
        "question": "Give the mean life expectancy of countries have a population equal to 80000 .",
        "result": "AVG(LifeExpectancy) FROM country WHERE Population = 80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the mean life expectancy of countries have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.indepyear > 1950  ",
        "question": "What is the total number of people living in the nations that were founded after 1950 .",
        "result": "SUM(Population) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the total number of people living in the nations have a Republic as their form of government ?",
        "result": "SUM(Population) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "What is the total number of people living in the nations have governments that are Republic ?",
        "result": "SUM(Population) FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "What is the total number of people living in the nations in the Caribbean region ?",
        "result": "SUM(Population) \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "What is the total number of people living in the nations do the countires in the Caribbean cover together ?",
        "result": "SUM(Population) FROM city \nWHERE CountryCode IN (\n    SELECT Code FROM country \n    WHERE Region = 'Caribbean'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.name = \"Brazil\"  ",
        "question": "What is the total number of people living in the nations in Brazil ?",
        "result": "SUM(Population) FROM city WHERE CountryCode = 'BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total number of people living in the nations in the region of Central Africa ?",
        "result": "SUM(Population) FROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "What is the total number of people living in the nations in Central Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What is the total number of people living in the nations in Asia or Europe .",
        "result": "SUM(Population) FROM country WHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"US Territory\"  ",
        "question": "What is the total number of people living in the nations whose government is US Territory ?",
        "result": "SUM(Population) FROM country WHERE GovernmentForm LIKE '%US Territory%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"US Territory\"  ",
        "question": "What is the total number of people living in the nations which are considered US Territory .",
        "result": "SUM(Population) FROM city \nWHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'North America' AND Region = 'US Territory')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total number of people living in the nations in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total number of people living in the nations are there in Africa ?",
        "result": "SUM(Population) \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total number of people living in the nations in Europe ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "What is the total number of people living in the nations in Europe ?",
        "result": "SUM(Population) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total number of people living in the nations in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "What is the total number of people living in the nations in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations are in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "What is the total number of people living in the nations in Asia .",
        "result": "SUM(Population) \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.population = \"80000\"  ",
        "question": "What is the total number of people living in the nations have a population of 80000 ?",
        "result": "SUM(Population) FROM city WHERE Population=80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.population = \"80000\"  ",
        "question": "What is the total number of people living in the nations have a population equal to 80000 .",
        "result": "SUM(Population) FROM city WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of people living in the nations have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.indepyear > 1950  ",
        "question": "How many people live in countries that became independent after 1950 ?",
        "result": "SUM(country.Population) \nFROM country \nWHERE country.IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many people live in countries have a Republic as their form of government ?",
        "result": "SUM(Population) FROM country WHERE GovernmentForm='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many people live in countries have governments that are Republic ?",
        "result": "SUM(Population) \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Caribbean\"  ",
        "question": "How many people live in countries in the Caribbean region ?",
        "result": "SUM(Population) FROM country WHERE Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.name = \"Brazil\"  ",
        "question": "How many people live in countries in Brazil ?",
        "result": "SUM(Population) \nFROM city \nWHERE CountryCode = 'BRA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "How many people live in countries in the region of Central Africa ?",
        "result": "SUM(Population) FROM country WHERE Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.region = \"Central Africa\"  ",
        "question": "How many people live in countries in Central Africa ?",
        "result": "SUM(Population) \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.governmentform = \"Republic\"  ",
        "question": "How many people live in countries that are Republic ?",
        "result": "SUM(Population) FROM country WHERE GovernmentForm='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "How many people live in countries in Asia or Europe .",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "How many people live in countries in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "How many people live in countries in Europe ?",
        "result": "SUM(Population) \nFROM country \nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Europe\"  ",
        "question": "How many people live in countries in Europe ?",
        "result": "SUM(Population) FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "How many people live in countries in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Africa\"  ",
        "question": "How many people live in countries in Africa ?",
        "result": "SUM(Population) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries are in Asia ?",
        "result": "SUM(Population) FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) from country where  country.continent = \"Asia\"  ",
        "question": "How many people live in countries in Asia .",
        "result": "SUM(Population) FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### How many people live in countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.governmentform = \"Republic\"  ",
        "question": "What is the official language spoken in the country in Republic governments ?",
        "result": "countrylanguage.Language \nFROM countrylanguage \nINNER JOIN country ON country.Code = countrylanguage.CountryCode \nWHERE country.GovernmentForm LIKE '%Republic%' AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language spoken in the country in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.governmentform = \"Republic\"  ",
        "question": "What is the official language spoken in the country with a Republic government ?",
        "result": "countrylanguage.Language \nFROM \ncountrylanguage \nJOIN \ncountry \nON \ncountry.Code = countrylanguage.CountryCode \nWHERE \ncountry.GovernmentForm = 'Republic' \nAND \ncountrylanguage.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language spoken in the country with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.indepyear < 1930  ",
        "question": "What is the official language spoken in the country that are founded before 1930 ?",
        "result": "countrylanguage.Language \nFROM \n  countrylanguage \n  JOIN country ON country.Code = countrylanguage.CountryCode \nWHERE \n  countrylanguage.IsOfficial = 'T' \n  AND country.IndepYear < 1930",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language spoken in the country that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage where  countrylanguage.isofficial = \"T\" and countrylanguage.language != \"English\"  ",
        "question": "What is the official language spoken in the country where people use languages other than English ?",
        "result": "countrylanguage.Language\nFROM countrylanguage\nJOIN country ON countrylanguage.CountryCode = country.Code\nWHERE countrylanguage.IsOfficial = 'T'\nAND country.Code NOT IN (\n  SELECT CountryCode\n  FROM countrylanguage\n  WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language spoken in the country where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage where  countrylanguage.isofficial = \"T\" and countrylanguage.language != \"English\"  ",
        "question": "What is the official language spoken in the country in which people speak langauges that are not English .",
        "result": "countrylanguage.Language \nFROM \n  countrylanguage \n  INNER JOIN country ON countrylanguage.CountryCode = country.Code \nWHERE \n  countrylanguage.IsOfficial = 'T' \n  AND countrylanguage.Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language spoken in the country in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.name = \"Aruba\"  ",
        "question": "What is the official language used in Aruba ?",
        "result": "Language \nFROM \ncountrylanguage \nWHERE \nCountryCode='ABW' \nAND \nIsOfficial='T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language used in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.name = \"Aruba\"  ",
        "question": "What is the official language are spoken in Aruba ?",
        "result": "Language \nFROM \ncountrylanguage \nWHERE \nCountryCode='ABW' AND IsOfficial='T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the official language are spoken in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.governmentform = \"Republic\"  ",
        "question": "What is the total number of unique official languages spoken in the countries in Republic governments ?",
        "result": "COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage \nINNER JOIN country ON countrylanguage.CountryCode = country.Code \nWHERE country.GovernmentForm LIKE '%Republic%' AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of unique official languages spoken in the countries in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.governmentform = \"Republic\"  ",
        "question": "What is the total number of unique official languages spoken in the countries with a Republic government ?",
        "result": "COUNT(DISTINCT Language) \nFROM countrylanguage \nWHERE CountryCode IN (\n    SELECT Code FROM country WHERE GovernmentForm LIKE '%Republic%'\n) AND IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of unique official languages spoken in the countries with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct countrylanguage.language) from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.isofficial = \"T\" and country.headofstate = \"Beatrix\"  ",
        "question": "What is the total number of unique official languages spoken in the countries whose head of state is Beatrix ?",
        "result": "COUNT(DISTINCT CountryLanguage.Language) \nFROM CountryLanguage \nJOIN Country ON CountryLanguage.CountryCode = Country.Code \nWHERE Country.HeadOfState = 'Beatrix' AND CountryLanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of unique official languages spoken in the countries whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct countrylanguage.language) from countrylanguage where  countrylanguage.isofficial = \"T\" and countrylanguage.language != \"English\"  ",
        "question": "What is the total number of unique official languages spoken in the countries where people use languages other than English ?",
        "result": "COUNT(DISTINCT Language) FROM countrylanguage \nWHERE CountryCode IN \n    (SELECT CountryCode FROM countrylanguage \n     WHERE Language <> 'English' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of unique official languages spoken in the countries where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count( distinct countrylanguage.language) from countrylanguage where  countrylanguage.isofficial = \"T\" and countrylanguage.language != \"English\"  ",
        "question": "What is the total number of unique official languages spoken in the countries in which people speak langauges that are not English .",
        "result": "COUNT(DISTINCT cl.Language) \nFROM countrylanguage cl \nJOIN country c ON cl.CountryCode = c.Code \nWHERE cl.IsOfficial = 'T' \nAND c.Name != 'United Kingdom' \nAND cl.Language NOT IN (SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = 'GBR')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total number of unique official languages spoken in the countries in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Caribbean\"  )   ",
        "question": "What are the countries that have greater surface area than any country in the Caribbean region ?",
        "result": "Code, Name\nFROM country\nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea)\n    FROM country\n    WHERE Region = 'Caribbean'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.name = \"Brazil\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Brazil ?",
        "result": "Code, Name, SurfaceArea \nFROM country \nWHERE SurfaceArea > (SELECT SurfaceArea FROM country WHERE Code = 'BRA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the countries that have greater surface area than any country in the region of Central Africa ?",
        "result": "Code, Name, SurfaceArea\nFROM country\nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Central Africa ?",
        "result": "Name \nFROM \n    country \nWHERE \n    SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Region = 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Asia ?",
        "result": "Name FROM country\nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent='Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea) \n    FROM country \n    WHERE Continent = 'Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent='Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Asia ?",
        "result": "Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent='Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent='Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Africa ?",
        "result": "Code, Name, SurfaceArea \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "What are the countries that have greater surface area than any country in Asia .",
        "result": "Code, Name, SurfaceArea\nFROM country\nWHERE Continent <> 'Asia' AND SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the countries that have greater surface area than any country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Caribbean\"  )   ",
        "question": "Which countries have greater area than that of any country in the Caribbean region ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea) \n    FROM country \n    WHERE Region = 'Caribbean'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.name = \"Brazil\"  )   ",
        "question": "Which countries have greater area than that of any country in Brazil ?",
        "result": "Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, GNPOld, LocalName, GovernmentForm, HeadOfState, Capital, Code2 \nFROM country \nWHERE SurfaceArea > (SELECT SurfaceArea FROM country WHERE Code = 'BRA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which countries have greater area than that of any country in the region of Central Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea)\n    FROM country\n    WHERE Region = 'Central Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which countries have greater area than that of any country in Central Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea) \n    FROM country \n    WHERE Region = 'Central Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "Which countries have greater area than that of any country in Asia ?",
        "result": "Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea) \n    FROM country \n    WHERE Continent = 'Asia'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "Which countries have greater area than that of any country in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n    SELECT MAX(SurfaceArea) \n    FROM country \n    WHERE Continent = 'Asia'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "Which countries have greater area than that of any country in Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "Which countries have greater area than that of any country in Asia ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (\n  SELECT MAX(SurfaceArea) \n  FROM country \n  WHERE Continent = 'Asia'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "Which countries have greater area than that of any country in Asia ?",
        "result": "Code, Name\nFROM country\nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "Which countries have greater area than that of any country in Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Africa\"  )   ",
        "question": "Which countries have greater area than that of any country in Africa ?",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.surfacearea > (select min(country.surfacearea) from country where  country.continent = \"Asia\"  )   ",
        "question": "Which countries have greater area than that of any country in Asia .",
        "result": "Code, Name \nFROM country \nWHERE SurfaceArea > (SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which countries have greater area than that of any country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.region = \"Caribbean\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in the Caribbean region ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Africa' AND country.Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Caribbean')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.name = \"Brazil\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in Brazil ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Code = 'BRA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in the region of Central Africa ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Africa' \nAND country.Population < (\n    SELECT MIN(c.Population) \n    FROM country c \n    WHERE c.Region = 'Central Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in Central Africa ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Africa' \nAND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in Europe ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Africa' \nAND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select max(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "What are the Africa countries that have a population less than any country in Europe ?",
        "result": "Country.Name \nFROM Country \nWHERE Continent = 'Africa' \nAND Population < (SELECT MIN(Population) FROM Country WHERE Continent = 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Africa countries that have a population less than any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.region = \"Caribbean\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in the Caribbean region ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Africa' \nAND Population < (SELECT MIN(Population) FROM country WHERE Region = 'Caribbean')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.name = \"Brazil\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in Brazil ?",
        "result": "Code, Name FROM country \nWHERE Continent = 'Africa' AND Population < (SELECT Population FROM country WHERE Code = 'BRA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in the region of Central Africa ?",
        "result": "Name FROM country WHERE Continent='Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Region='Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in Central Africa ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent = 'Africa' AND \nPopulation < (\n  SELECT MIN(Population) \n  FROM \n  country \n  WHERE \n  Continent = 'Central Africa'\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in Europe ?",
        "result": "Code, Name FROM country\nWHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\" and country.population < (select min(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "Which Africa countries have a smaller population than that of any country in Europe ?",
        "result": "Name FROM country WHERE Continent='Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent='Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Africa countries have a smaller population than that of any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.region = \"Caribbean\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in the Caribbean region ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) FROM country WHERE Region = 'Caribbean')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.name = \"Brazil\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in Brazil ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) FROM country WHERE Name = 'Brazil')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in the region of Central Africa ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia' AND Population > \n(SELECT MAX(Population) FROM country WHERE Region = 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in Central Africa ?",
        "result": "Country.Code\nFROM Country\nWHERE Country.Continent = 'Asia' AND Country.Population > \n(SELECT MAX(Population) FROM Country WHERE Continent = 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in Europe ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select max(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "Which Asia countries have a population that is larger than any country in Europe ?",
        "result": "Country.Code, Country.Name \nFROM Country \nWHERE Country.Continent='Asia' \nAND Country.Population > \n    (SELECT MAX(Population) \n     FROM Country \n     WHERE Continent='Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which Asia countries have a population that is larger than any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.region = \"Caribbean\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in the Caribbean region ?",
        "result": "Country.Name \nFROM Country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) \n                  FROM Country \n                  WHERE Continent = 'Caribbean')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.name = \"Brazil\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in Brazil ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia' \nAND Population > (SELECT MAX(Population) FROM country WHERE Code = 'BRA')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in the region of Central Africa ?",
        "result": "Country.Name\nFROM Country\nWHERE Country.Continent = 'Asia' AND Country.Population > (\n    SELECT MAX(Population)\n    FROM Country\n    WHERE Continent = 'Central Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.region = \"Central Africa\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in Central Africa ?",
        "result": "country.Name\nFROM country\nWHERE country.Continent = 'Asia'\nAND country.Population > (\n    SELECT MAX(Population)\n    FROM country\n    WHERE country.Continent = 'Central Africa'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in Europe ?",
        "result": "country.Name\nFROM country\nWHERE continent = 'Asia' AND population > \n(SELECT MAX(population) FROM country WHERE continent = 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" and country.population > (select min(country.population) from country where  country.continent = \"Europe\"  )   ",
        "question": "What are the Asia countries which have a population larger than that of any country in Europe ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia' AND Population > (\n    SELECT MAX(Population) \n    FROM country \n    WHERE Continent = 'Europe'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the Asia countries which have a population larger than that of any country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "What are the country codes for countries in Republic governments ?",
        "result": "Code FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "What are the country codes for countries with a Republic government ?",
        "result": "Code FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "What are the country codes for countries whose head of state is Beatrix ?",
        "result": "Code FROM country WHERE HeadOfState = 'Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  ",
        "question": "What are the country codes for countries that are founded before 1930 ?",
        "result": "Code FROM country WHERE IndepYear < 1930;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != \"English\"  ",
        "question": "What are the country codes for countries where people use languages other than English ?",
        "result": "DISTINCT CountryCode \nFROM countrylanguage \nWHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != \"English\"  ",
        "question": "What are the country codes for countries in which people speak langauges that are not English .",
        "result": "DISTINCT CountryCode \nFROM countrylanguage \nWHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes for countries in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "Return the country codes for countries in Republic governments ?",
        "result": "Code \nFROM country \nWHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "Return the country codes for countries with a Republic government ?",
        "result": "Code \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "Return the country codes for countries whose head of state is Beatrix ?",
        "result": "Code FROM country WHERE HeadOfState = 'Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  ",
        "question": "Return the country codes for countries that are founded before 1930 ?",
        "result": "Code FROM country WHERE IndepYear < 1930;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != \"English\"  ",
        "question": "Return the country codes for countries where people use languages other than English ?",
        "result": "DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries where people use languages other than English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.countrycode from countrylanguage where  countrylanguage.language != \"English\"  ",
        "question": "Return the country codes for countries in which people speak langauges that are not English .",
        "result": "DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the country codes for countries in which people speak langauges that are not English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "What are the country codes of countries in Republic governments ?",
        "result": "Code FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "What are the country codes of countries with a Republic government ?",
        "result": "Code FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "What are the country codes of countries whose head of state is Beatrix ?",
        "result": "Code FROM country WHERE HeadOfState='Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  ",
        "question": "What are the country codes of countries that are founded before 1930 ?",
        "result": "Code FROM country WHERE IndepYear < 1930",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage   except select distinct countrylanguage.countrycode from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "What are the country codes of countries that do not speak English ?",
        "result": "Country.Code FROM country \nWHERE Country.Code NOT IN \n(SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage   except select distinct countrylanguage.countrycode from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "What are the country codes of countries that do not speak English .",
        "result": "DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the country codes of countries that do not speak English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "Give the country codes for countries in Republic governments ?",
        "result": "Code FROM country WHERE GovernmentForm LIKE '%Republic%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries in Republic governments ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.governmentform = \"Republic\"  ",
        "question": "Give the country codes for countries with a Republic government ?",
        "result": "Code \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries with a Republic government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "Give the country codes for countries whose head of state is Beatrix ?",
        "result": "Code FROM country WHERE HeadOfState = 'Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries whose head of state is Beatrix ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.indepyear < 1930  ",
        "question": "Give the country codes for countries that are founded before 1930 ?",
        "result": "Code FROM country WHERE IndepYear < 1930;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries that are founded before 1930 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage   except select distinct countrylanguage.countrycode from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "Give the country codes for countries that do not speak English ?",
        "result": "DISTINCT CountryCode FROM countrylanguage WHERE Language <> 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select distinct countrylanguage.countrycode from countrylanguage   except select distinct countrylanguage.countrycode from countrylanguage where  countrylanguage.language = \"English\"  ",
        "question": "Give the country codes for countries that do not speak English .",
        "result": "Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the country codes for countries that do not speak English . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the codes of the countries that do not speak English and French as official languages .",
        "result": "Code \nFROM country \nWHERE Code NOT IN (\n   SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'French') AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the codes of the countries that do not speak English and French as official languages . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and country.population = \"80000\"  ",
        "question": "What are the codes of the countries that do not speak English and have a population of 80000 ?",
        "result": "Code \nFROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T')\nAND Population=80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the codes of the countries that do not speak English and have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and country.population = \"80000\"  ",
        "question": "What are the codes of the countries that do not speak English and have a population equal to 80000 .",
        "result": "Code FROM country \nWHERE Code NOT IN (\n  SELECT CountryCode FROM countrylanguage WHERE Language = 'English'\n) AND Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the codes of the countries that do not speak English and have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Return the codes of countries that do not speak English and French as official languages .",
        "result": "CountryCode \nFROM countrylanguage \nWHERE Language NOT IN ('English', 'French') \nAND IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the codes of countries that do not speak English and French as official languages . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and country.population = \"80000\"  ",
        "question": "Return the codes of countries that do not speak English and have a population of 80000 ?",
        "result": "Code FROM country WHERE Code NOT IN \n (SELECT CountryCode FROM countrylanguage WHERE Language='English' AND IsOfficial='T') \n AND Population=80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the codes of countries that do not speak English and have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.code from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language != \"English\" and country.population = \"80000\"  ",
        "question": "Return the codes of countries that do not speak English and have a population equal to 80000 .",
        "result": "Country.Code \nFROM Country \nWHERE Country.Code NOT IN (\n    SELECT CountryLanguage.CountryCode \n    FROM CountryLanguage \n    WHERE CountryLanguage.Language = 'English' AND CountryLanguage.IsOfficial = 'T'\n) AND Country.Population = 80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the codes of countries that do not speak English and have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.indepyear > 1950  ",
        "question": "What are the name , Independence year , and surface area of the country that became independent after 1950 ?",
        "result": "Name, IndepYear, SurfaceArea FROM country\nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the name , Independence year , and surface area of the country have a Republic as their form of government ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the name , Independence year , and surface area of the country have governments that are Republic ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Caribbean\"  ",
        "question": "What are the name , Independence year , and surface area of the country in the Caribbean region ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name = \"Brazil\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Brazil ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Name = 'Brazil' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Central Africa\"  ",
        "question": "What are the name , Independence year , and surface area of the country in the region of Central Africa ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Central Africa\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Central Africa ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the name , Independence year , and surface area of the country with the lowest life expectancy .",
        "result": "Name, IndepYear, SurfaceArea FROM country\nWHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the name , Independence year , and surface area of the country that are Republic ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia or Europe .",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Africa ?",
        "result": "Name, IndepYear, SurfaceArea FROM country \nWHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are the name , Independence year , and surface area of the country speak both English and Dutch ?",
        "result": "c.Name, c.IndepYear, c.SurfaceArea\nFROM country c\nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode\nWHERE cl1.Language = 'English' AND cl2.Language = 'Dutch' AND cl1.IsOfficial = 1 AND cl2.IsOfficial = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the name , Independence year , and surface area of the country where either English or Dutch is the official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the name , Independence year , and surface area of the country have either English or Dutch as an official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nINNER JOIN countrylanguage\nON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language IN ('English', 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the name , Independence year , and surface area of the country with the largest area ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the name , Independence year , and surface area of the country where English is not the official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \nFROM country \nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial <> 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the name , Independence year , and surface area of the country in which English is not the official language .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial = 'F';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are the name , Independence year , and surface area of the country that do not speak English ?",
        "result": "Name, IndepYear, SurfaceArea FROM country \nWHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Europe\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Europe ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Europe\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Europe ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Africa ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Africa ?",
        "result": "Name, IndepYear, SurfaceArea FROM country \nWHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the name , Independence year , and surface area of the country with the largest area ?",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n ORDER BY SurfaceArea DESC \n LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the name , Independence year , and surface area of the country that has the largest area .",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the name , Independence year , and surface area of the country with the top 5 largest area ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population desc limit 3 ",
        "question": "What are the name , Independence year , and surface area of the country with the top 3 largest population ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nORDER BY Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population asc limit 3 ",
        "question": "What are the name , Independence year , and surface area of the country with the 3 lowest populations ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nORDER BY Population\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population asc limit 3 ",
        "question": "What are the name , Independence year , and surface area of the country with the fewest people .",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country are in Asia ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "What are the name , Independence year , and surface area of the country in Asia .",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the name , Independence year , and surface area of the country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.indepyear > 1950  ",
        "question": "Give the name , year of Independence , and surface area of the country that became independent after 1950 ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , year of Independence , and surface area of the country have a Republic as their form of government ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , year of Independence , and surface area of the country have governments that are Republic ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country \n WHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Caribbean\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in the Caribbean region ?",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Caribbean\"  ",
        "question": "Give the name , year of Independence , and surface area of the country do the countires in the Caribbean cover together ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Continent = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name = \"Brazil\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Brazil ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Name = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Central Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in the region of Central Africa ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.region = \"Central Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Central Africa ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "Give the name , year of Independence , and surface area of the country with the lowest life expectancy .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.LifeExpectancy = (\n    SELECT MIN(LifeExpectancy)\n    FROM country\n)\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea FROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , year of Independence , and surface area of the country that are Republic ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia or Europe .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Continent = 'Asia' OR country.Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Africa ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country are there in Africa ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "Give the name , year of Independence , and surface area of the country speak both English and Dutch ?",
        "result": "c.Name, c.IndepYear, c.SurfaceArea\nFROM country c\nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode\nWHERE cl1.Language = 'English' AND cl1.IsOfficial = 1\nAND cl2.Language = 'Dutch' AND cl2.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the name , year of Independence , and surface area of the country where either English or Dutch is the official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')\nAND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea , country.indepyear from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the name , year of Independence , and surface area of the country have either English or Dutch as an official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country \n JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \n WHERE countrylanguage.Language IN ('English', 'Dutch') AND countrylanguage.IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "Give the name , year of Independence , and surface area of the country with the largest area ?",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the name , year of Independence , and surface area of the country where English is not the official language ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'F';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the name , year of Independence , and surface area of the country in which English is not the official language .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Code NOT IN (\n  SELECT CountryCode\n  FROM countrylanguage\n  WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the name , year of Independence , and surface area of the country that do not speak English ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \nFROM country \nWHERE country.Code NOT IN \n  (SELECT CountryCode FROM countrylanguage WHERE Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Europe\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Europe ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country \n WHERE country.Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Europe\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Europe ?",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia ?",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Africa ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country \n WHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Africa ?",
        "result": "Name, IndepYear, SurfaceArea FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "Give the name , year of Independence , and surface area of the country with the largest area ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 1 ",
        "question": "Give the name , year of Independence , and surface area of the country that has the largest area .",
        "result": "Name, IndepYear, SurfaceArea \n FROM country \n ORDER BY SurfaceArea DESC \n LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.surfacearea desc limit 5 ",
        "question": "Give the name , year of Independence , and surface area of the country with the top 5 largest area ?",
        "result": "Code, IndepYear, SurfaceArea \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population desc limit 3 ",
        "question": "Give the name , year of Independence , and surface area of the country with the top 3 largest population ?",
        "result": "country.Name, country.IndepYear, country.SurfaceArea\nFROM country\nORDER BY country.Population DESC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population asc limit 3 ",
        "question": "Give the name , year of Independence , and surface area of the country with the 3 lowest populations ?",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nORDER BY Population ASC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country   order by country.population asc limit 3 ",
        "question": "Give the name , year of Independence , and surface area of the country with the fewest people .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country \n ORDER BY country.Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country are in Asia ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , year of Independence , and surface area of the country in Asia .",
        "result": "country.Name, country.IndepYear, country.SurfaceArea \n FROM country\n WHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.population = \"80000\"  ",
        "question": "Give the name , year of Independence , and surface area of the country have a population of 80000 ?",
        "result": "Name, IndepYear, SurfaceArea \nFROM country \nWHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea , country.indepyear from country where  country.population = \"80000\"  ",
        "question": "Give the name , year of Independence , and surface area of the country have a population equal to 80000 .",
        "result": "Name, IndepYear, SurfaceArea\nFROM country\nWHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , year of Independence , and surface area of the country have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.indepyear > 1950  ",
        "question": "What are the population , name and leader of the country that became independent after 1950 ?",
        "result": "country.Name, country.HeadOfState, country.Population\nFROM country\nWHERE country.IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the population , name and leader of the country have a Republic as their form of government ?",
        "result": "country.Population, country.Name, country.HeadOfState\nFROM country\nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the population , name and leader of the country have governments that are Republic ?",
        "result": "country.Name, country.HeadOfState, country.Population \nFROM country \nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Caribbean\"  ",
        "question": "What are the population , name and leader of the country in the Caribbean region ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name = \"Brazil\"  ",
        "question": "What are the population , name and leader of the country in Brazil ?",
        "result": "country.Population, country.Name, country.HeadOfState\nFROM country\nWHERE country.Name = 'Brazil';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Central Africa\"  ",
        "question": "What are the population , name and leader of the country in the region of Central Africa ?",
        "result": "country.Population, country.Name, country.HeadOfState\nFROM country\nWHERE country.Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Central Africa\"  ",
        "question": "What are the population , name and leader of the country in Central Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Africa' AND country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the population , name and leader of the country with the lowest life expectancy .",
        "result": "country.Population, country.Name, country.HeadOfState\nFROM country\nWHERE country.LifeExpectancy = (\n    SELECT MIN(LifeExpectancy)\n    FROM country\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the population , name and leader of the country that are Republic ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the population , name and leader of the country in Asia or Europe .",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "What are the population , name and leader of the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Africa' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are the population , name and leader of the country speak both English and Dutch ?",
        "result": "country.Name, country.HeadOfState, country.Population\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1\nINTERSECT\nSELECT country.Name, country.HeadOfState, country.Population\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language = 'Dutch' AND countrylanguage.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the population , name and leader of the country where either English or Dutch is the official language ?",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.IsOfficial = 'T' \nAND (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the population , name and leader of the country have either English or Dutch as an official language ?",
        "result": "country.Population, country.Name, country.HeadOfState \n FROM country \n JOIN countrylanguage \n ON country.Code = countrylanguage.CountryCode \n WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') \n AND countrylanguage.IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the population , name and leader of the country where English is not the official language ?",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM country \nWHERE country.Code NOT IN (\n    SELECT CountryCode \n    FROM countrylanguage \n    WHERE IsOfficial = 'T' AND Language = 'English'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the population , name and leader of the country in which English is not the official language .",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM country \nWHERE country.Code NOT IN \n(SELECT CountryCode FROM countrylanguage WHERE IsOfficial='T' AND Language='English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are the population , name and leader of the country that do not speak English ?",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM \n    country \nWHERE \n    country.Code NOT IN \n        (SELECT \n            CountryCode \n        FROM \n            countrylanguage \n        WHERE \n            Language = 'English' \n            AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Europe\"  ",
        "question": "What are the population , name and leader of the country in Europe ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Europe' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Europe\"  ",
        "question": "What are the population , name and leader of the country in Europe ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country in Asia ?",
        "result": "country.Name, country.HeadOfState, country.Population\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "What are the population , name and leader of the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "What are the population , name and leader of the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 1 ",
        "question": "What are the population , name and leader of the country with the smallest population ?",
        "result": "Country.Name, Country.HeadOfState, Country.Population\n FROM Country\n WHERE Population = (SELECT MIN(Population) FROM Country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 1 ",
        "question": "What are the population , name and leader of the country that has the lowest population .",
        "result": "Country.Name, Country.HeadOfState, Country.Population \n FROM Country \n WHERE Country.Population = (SELECT MIN(Population) FROM Country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the population , name and leader of the country with the top 5 largest area ?",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM country \nORDER BY country.SurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population desc limit 3 ",
        "question": "What are the population , name and leader of the country with the top 3 largest population ?",
        "result": "Country.Name, Country.HeadOfState, Country.Population\nFROM Country\nORDER BY Population DESC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 3 ",
        "question": "What are the population , name and leader of the country with the 3 lowest populations ?",
        "result": "Population, Name, HeadOfState \n FROM country \n ORDER BY Population ASC \n LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 3 ",
        "question": "What are the population , name and leader of the country with the fewest people .",
        "result": "country.Name, country.HeadOfState, country.Population \n FROM country \n ORDER BY Population ASC \n LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country are in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "What are the population , name and leader of the country in Asia .",
        "result": "country.Population, country.Name, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the population , name and leader of the country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.indepyear > 1950  ",
        "question": "Give the name , population , and head of state for the country that became independent after 1950 ?",
        "result": "Name, Population, HeadOfState \nFROM country \nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , population , and head of state for the country have a Republic as their form of government ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , population , and head of state for the country have governments that are Republic ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Caribbean\"  ",
        "question": "Give the name , population , and head of state for the country in the Caribbean region ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Caribbean\"  ",
        "question": "Give the name , population , and head of state for the country do the countires in the Caribbean cover together ?",
        "result": "country.Name, SUM(country.Population), country.HeadOfState \nFROM country \nWHERE country.Continent = 'Caribbean' \nGROUP BY country.Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name = \"Brazil\"  ",
        "question": "Give the name , population , and head of state for the country in Brazil ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Name = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Central Africa\"  ",
        "question": "Give the name , population , and head of state for the country in the region of Central Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.region = \"Central Africa\"  ",
        "question": "Give the name , population , and head of state for the country in Central Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country in Asia ?",
        "result": "name, population, HeadOfState FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "Give the name , population , and head of state for the country with the lowest life expectancy .",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.LifeExpectancy = (\n    SELECT MIN(LifeExpectancy)\n    FROM country\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.governmentform = \"Republic\"  ",
        "question": "Give the name , population , and head of state for the country that are Republic ?",
        "result": "name, population, headofstate \nFROM country \nWHERE governmentform = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "Give the name , population , and head of state for the country in Asia or Europe .",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , population , and head of state for the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , population , and head of state for the country are there in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "Give the name , population , and head of state for the country speak both English and Dutch ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1)\nAND country.Code IN (\n  SELECT CountryCode\n  FROM countrylanguage\n  WHERE Language = 'Dutch' AND IsOfficial = 1\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the name , population , and head of state for the country where either English or Dutch is the official language ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.population , country.headofstate from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the name , population , and head of state for the country have either English or Dutch as an official language ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nINNER JOIN countrylanguage\nON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the name , population , and head of state for the country where English is not the official language ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language <> 'English' AND countrylanguage.IsOfficial <> 'T'\nGROUP BY country.Name\nORDER BY country.Name ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Give the name , population , and head of state for the country in which English is not the official language .",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nLEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.IsOfficial <> 'T' AND countrylanguage.Language = 'English'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Give the name , population , and head of state for the country that do not speak English ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Code NOT IN \n    (SELECT CountryCode \n     FROM countrylanguage \n     WHERE Language='English' AND IsOfficial='T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Europe\"  ",
        "question": "Give the name , population , and head of state for the country in Europe ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Europe\"  ",
        "question": "Give the name , population , and head of state for the country in Europe ?",
        "result": "country.Name, country.Population, country.HeadOfState \n FROM country \n WHERE country.Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country in Asia ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , population , and head of state for the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Africa\"  ",
        "question": "Give the name , population , and head of state for the country in Africa ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nWHERE country.Continent='Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 1 ",
        "question": "Give the name , population , and head of state for the country with the smallest population ?",
        "result": "Name, Population, HeadOfState FROM country ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 1 ",
        "question": "Give the name , population , and head of state for the country that has the lowest population .",
        "result": "Name, Population, HeadOfState \nFROM country \nWHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.surfacearea desc limit 5 ",
        "question": "Give the name , population , and head of state for the country with the top 5 largest area ?",
        "result": "country.Name, country.Population, country.HeadOfState \nFROM country \nORDER BY country.SurfaceArea DESC \nLIMIT 5",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population desc limit 3 ",
        "question": "Give the name , population , and head of state for the country with the top 3 largest population ?",
        "result": "Name, Population, HeadOfState \nFROM country \nORDER BY Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 3 ",
        "question": "Give the name , population , and head of state for the country with the 3 lowest populations ?",
        "result": "Name, Population, HeadOfState\nFROM country\nORDER BY Population ASC\nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country   order by country.population asc limit 3 ",
        "question": "Give the name , population , and head of state for the country with the fewest people .",
        "result": "Name, Population, HeadOfState\nFROM country\nWHERE Population = (\n   SELECT MIN(Population)\n   FROM country\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country are in Asia ?",
        "result": "name, population, headofstate FROM country WHERE continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.continent = \"Asia\"  ",
        "question": "Give the name , population , and head of state for the country in Asia .",
        "result": "country.Name, country.Population, country.HeadOfState\nFROM country\nWHERE country.Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.population = \"80000\"  ",
        "question": "Give the name , population , and head of state for the country have a population of 80000 ?",
        "result": "Name, Population, HeadOfState \nFROM country \nWHERE Population = 80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.population , country.headofstate from country where  country.population = \"80000\"  ",
        "question": "Give the name , population , and head of state for the country have a population equal to 80000 .",
        "result": "Name, Population, HeadOfState\nFROM country\nWHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the name , population , and head of state for the country have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.region = \"Caribbean\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in the Caribbean region ?",
        "result": "GovernmentForm, SUM(Population) AS TotalPopulation\nFROM country\nWHERE Region = 'Caribbean'\nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.name = \"Brazil\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Brazil ?",
        "result": "GovernmentForm, SUM(Population) \n FROM country \n WHERE Code = 'BRA' \n GROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.region = \"Central Africa\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in the region of Central Africa ?",
        "result": "GovernmentForm, SUM(Population) \n FROM country \n JOIN city ON country.Capital = city.ID \n WHERE Region = 'Central Africa' \n GROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.region = \"Central Africa\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Central Africa ?",
        "result": "GovernmentForm, SUM(Population) \n FROM country \n WHERE Continent = 'Africa' AND Region = 'Central Africa'\n GROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia ?",
        "result": "GovernmentForm, SUM(Population) FROM country \nWHERE Continent='Asia' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia ?",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent = 'Asia' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia or Europe .",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent IN ('Asia', 'Europe') \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Africa\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Africa ?",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent='Africa' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Europe\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Europe ?",
        "result": "GovernmentForm, SUM(Population)\n FROM country\n WHERE Continent = 'Europe'\n GROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Europe\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Europe ?",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent='Europe' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia ?",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent='Asia' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia ?",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent = 'Asia' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Africa\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Africa ?",
        "result": "GovernmentForm, SUM(Population) FROM country \nWHERE Continent='Africa' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Africa\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Africa ?",
        "result": "GovernmentForm, SUM(Population) FROM country\nWHERE Continent = 'Africa'\nGROUP BY GovernmentForm;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , country.governmentform from country where  country.continent = \"Asia\"  group by country.governmentform ",
        "question": "What are the different government forms and what is the total population of each for government forms in Asia .",
        "result": "GovernmentForm, SUM(Population) \nFROM country \nWHERE Continent = 'Asia' \nGROUP BY GovernmentForm",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different government forms and what is the total population of each for government forms in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.governmentform = \"Republic\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent have a Republic as their form of government ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE GovernmentForm = 'Republic' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.governmentform = \"Republic\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent have governments that are Republic ?",
        "result": "AVG(LifeExpectancy), SUM(Population)\nFROM country\nWHERE GovernmentForm = 'Republic'\nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Caribbean\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in the Caribbean region ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Region = 'Caribbean' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Caribbean\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent do the countires in the Caribbean cover together ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population)\n FROM country\n GROUP BY Continent\nHAVING Continent = 'Caribbean';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.name = \"Brazil\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Brazil ?",
        "result": "continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Code IN (SELECT CountryCode FROM city WHERE Name = 'Brazil') \n GROUP BY continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Central Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in the region of Central Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) FROM country \nWHERE Region = 'Central Africa' \nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Central Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Central Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Region = 'Central Africa' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia or Europe .",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent IN ('Asia', 'Europe') \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population)\n FROM country\n WHERE Continent = 'Africa'\n GROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent are there in Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) FROM country WHERE Continent = 'Africa' GROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent where Chinese is spoken ?",
        "result": "AVG(LifeExpectancy), SUM(Population) \nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE Language = 'Chinese' \nGROUP BY continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent where Chinese is spoken ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Chinese\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent speak Chinese ?",
        "result": "country.Continent, AVG(country.LifeExpectancy), SUM(country.Population)\nFROM country \nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T'\nGROUP BY country.Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent speak Chinese ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Europe\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Europe ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Europe' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Europe\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Europe ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) FROM country \nWHERE Continent='Europe' \nGROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population)\n FROM country\n WHERE Continent = 'Asia'\n GROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population)\n FROM country\n WHERE Continent = 'Africa'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Africa ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent='Africa' \n GROUP BY Continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent are in Asia ?",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent in Asia .",
        "result": "Continent, AVG(LifeExpectancy), SUM(Population) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.population = \"80000\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent have a population of 80000 ?",
        "result": "AVG(LifeExpectancy), SUM(Population) \nFROM country \nWHERE Population = 80000 \nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.population = \"80000\"  group by country.continent ",
        "question": "Find the average life expectancy and total population for each continent have a population equal to 80000 .",
        "result": "AVG(LifeExpectancy), SUM(Population) FROM country \nWHERE Population = 80000 \nGROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Find the average life expectancy and total population for each continent have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Caribbean\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in the Caribbean region ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) \n FROM country \n WHERE Region = 'Caribbean' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.name = \"Brazil\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Brazil ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) FROM country \nJOIN city ON country.Code = city.CountryCode \nWHERE country.Name = 'Brazil' \nGROUP BY continent;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Central Africa\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in the region of Central Africa ?",
        "result": "Continent, SUM(Population) as TotalPopulation, AVG(LifeExpectancy) as AvgLifeExpectancy \n FROM country \n WHERE Region = 'Central Africa' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.region = \"Central Africa\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Central Africa ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Region = 'Central Africa'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent = 'Asia'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia or Europe .",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) \n FROM country \n WHERE Continent IN ('Asia','Europe') \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent = 'Africa'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Europe\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent='Europe'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Europe\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent = 'Europe'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia' GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy)\n FROM country\n WHERE Continent = 'Africa'\n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Africa\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ?",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) FROM country \nWHERE Continent = 'Africa' GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.lifeexpectancy) , country.continent from country where  country.continent = \"Asia\"  group by country.continent ",
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each in Asia .",
        "result": "Continent, SUM(Population), AVG(LifeExpectancy) \n FROM country \n WHERE Continent = 'Asia' \n GROUP BY Continent",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the different continents and the total popuation and average life expectancy corresponding to each in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.indepyear > 1950  ",
        "question": "What are the names and areas of countries that became independent after 1950 ?",
        "result": "Name, SurfaceArea FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names and areas of countries have a Republic as their form of government ?",
        "result": "Name, SurfaceArea FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names and areas of countries have governments that are Republic ?",
        "result": "country.Name, country.SurfaceArea \nFROM country \nWHERE country.GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.region = \"Caribbean\"  ",
        "question": "What are the names and areas of countries in the Caribbean region ?",
        "result": "Name, SurfaceArea \n FROM country\n WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.name = \"Brazil\"  ",
        "question": "What are the names and areas of countries in Brazil ?",
        "result": "Code, Name, SurfaceArea \n FROM country \n WHERE Continent = 'South America' AND Region = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names and areas of countries in the region of Central Africa ?",
        "result": "Name, SurfaceArea FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names and areas of countries in Central Africa ?",
        "result": "Name, SurfaceArea FROM country\nWHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries in Asia ?",
        "result": "Name, SurfaceArea \n FROM country \n WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the names and areas of countries with the lowest life expectancy .",
        "result": "country.Name, country.SurfaceArea\nFROM country\nWHERE country.LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries in Asia ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.governmentform = \"Republic\"  ",
        "question": "What are the names and areas of countries that are Republic ?",
        "result": "Name, SurfaceArea \n FROM country \n WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the names and areas of countries in Asia or Europe .",
        "result": "Name, SurfaceArea\nFROM country\nWHERE Continent IN ('Asia', 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Africa\"  ",
        "question": "What are the names and areas of countries in Africa ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are the names and areas of countries speak both English and Dutch ?",
        "result": "country.Name, country.SurfaceArea\nFROM country\nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language IN ('English', 'Dutch')\nAND countrylanguage.IsOfficial = 'T'\nGROUP BY country.Name\nHAVING COUNT(DISTINCT countrylanguage.Language) = 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names and areas of countries where either English or Dutch is the official language ?",
        "result": "country.Name, country.SurfaceArea\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name , country.surfacearea from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names and areas of countries have either English or Dutch as an official language ?",
        "result": "country.Name, country.SurfaceArea\nFROM country\nJOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch')\nAND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names and areas of countries with the largest area ?",
        "result": "Name, SurfaceArea \n FROM country \n ORDER BY SurfaceArea DESC \n LIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the names and areas of countries where English is not the official language ?",
        "result": "country.Name, country.SurfaceArea\nFROM country\nLEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE countrylanguage.Language != 'English' OR countrylanguage.IsOfficial != 'T'\nGROUP BY country.Name, country.SurfaceArea",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are the names and areas of countries in which English is not the official language .",
        "result": "country.Name, country.SurfaceArea \nFROM country \nLEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language != 'English' OR countrylanguage.IsOfficial != 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are the names and areas of countries that do not speak English ?",
        "result": "country.Name, country.SurfaceArea\nFROM country\nWHERE country.Code NOT IN (\n  SELECT CountryCode\n  FROM countrylanguage\n  WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Europe\"  ",
        "question": "What are the names and areas of countries in Europe ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Europe\"  ",
        "question": "What are the names and areas of countries in Europe ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries in Asia ?",
        "result": "Name, SurfaceArea\nFROM country\nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries in Asia ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Africa\"  ",
        "question": "What are the names and areas of countries in Africa ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Africa\"  ",
        "question": "What are the names and areas of countries in Africa ?",
        "result": "Name, SurfaceArea FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.population asc limit 1 ",
        "question": "What are the names and areas of countries with the smallest population ?",
        "result": "Name, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.population asc limit 1 ",
        "question": "What are the names and areas of countries that has the lowest population .",
        "result": "Name, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names and areas of countries with the largest area ?",
        "result": "Name, SurfaceArea\nFROM country\nORDER BY SurfaceArea DESC\nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names and areas of countries that has the largest area .",
        "result": "Name, SurfaceArea\nFROM country\nWHERE SurfaceArea = (\n  SELECT MAX(SurfaceArea)\n  FROM country\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.population desc limit 3 ",
        "question": "What are the names and areas of countries with the top 3 largest population ?",
        "result": "Country.Name, Country.SurfaceArea \n FROM Country \n ORDER BY Country.Population DESC \n LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.population asc limit 3 ",
        "question": "What are the names and areas of countries with the 3 lowest populations ?",
        "result": "Name, SurfaceArea FROM country ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country   order by country.population asc limit 3 ",
        "question": "What are the names and areas of countries with the fewest people .",
        "result": "Name, SurfaceArea \n FROM country \n WHERE Population < 10000 \n ORDER BY Population ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries are in Asia ?",
        "result": "Name, SurfaceArea \n FROM country\n WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name , country.surfacearea from country where  country.continent = \"Asia\"  ",
        "question": "What are the names and areas of countries in Asia .",
        "result": "Name, SurfaceArea FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names and areas of countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "What are names of countries that became independent after 1950 ?",
        "result": "Name\nFROM country\nWHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are names of countries have a Republic as their form of government ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are names of countries have governments that are Republic ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "What are names of countries in the Caribbean region ?",
        "result": "Name \nFROM country \nWHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Brazil\"  ",
        "question": "What are names of countries in Brazil ?",
        "result": "country.Name\nFROM country\nWHERE country.Continent = 'South America'\nAND country.Region = 'Brazil';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are names of countries in the region of Central Africa ?",
        "result": "Name \nFROM country \nWHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are names of countries in Central Africa ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Africa' \nAND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are names of countries with the lowest life expectancy .",
        "result": "Code, Name FROM country WHERE LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"Republic\"  ",
        "question": "What are names of countries that are Republic ?",
        "result": "Name FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are names of countries in Asia or Europe .",
        "result": "Name FROM country WHERE Continent = 'Asia' OR Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are names of countries in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are names of countries speak both English and Dutch ?",
        "result": "DISTINCT c.Name\nFROM country c\nJOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 1\nJOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'Dutch' AND cl2.IsOfficial = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are names of countries where either English or Dutch is the official language ?",
        "result": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries where either English or Dutch is the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   union select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are names of countries have either English or Dutch as an official language ?",
        "result": "country.Name \nFROM country \nINNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') \nAND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries have either English or Dutch as an official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are names of countries with the largest area ?",
        "result": "Name \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are names of countries where English is not the official language ?",
        "result": "Code, Name \nFROM country \nWHERE Code NOT IN (\n  SELECT CountryCode \n  FROM countrylanguage \n  WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "What are names of countries in which English is not the official language .",
        "result": "Code, Name \nFROM country \nWHERE Code NOT IN (\n  SELECT CountryCode \n  FROM countrylanguage \n  WHERE IsOfficial = 'T' AND Language = 'English'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are names of countries that do not speak English ?",
        "result": "Country.Name \nFROM \nCountry \nLEFT JOIN \nCountryLanguage ON Country.Code = CountryLanguage.CountryCode \nWHERE \nCountryLanguage.Language != 'English' AND CountryLanguage.IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are names of countries in Europe ?",
        "result": "Name FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are names of countries in Europe ?",
        "result": "Name FROM country WHERE Continent='Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries in Asia ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries in Asia ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are names of countries in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are names of countries in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What are names of countries with the smallest population ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What are names of countries that has the lowest population .",
        "result": "Name FROM country WHERE Population = (SELECT MIN(Population) FROM country);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are names of countries with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are names of countries that has the largest area .",
        "result": "Name FROM country\nWHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "What are names of countries with the top 5 largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are names of countries with the 3 lowest populations ?",
        "result": "Name FROM country ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "What are names of countries with the fewest people .",
        "result": "Name \nFROM country \nORDER BY Population \nLIMIT 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries are in Asia ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries are in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are names of countries in Asia .",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are names of countries in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.indepyear > 1950  ",
        "question": "What are the names of the nations that were founded after 1950 .",
        "result": "Name FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations that were founded after 1950 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Caribbean\"  ",
        "question": "What are the names of the nations in the Caribbean region ?",
        "result": "Name FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name = \"Brazil\"  ",
        "question": "What are the names of the nations in Brazil ?",
        "result": "Name FROM country WHERE Continent = 'South America' AND Name != 'Brazil' AND Code IN (SELECT CountryCode FROM city WHERE Name = 'Brazil')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names of the nations in the region of Central Africa ?",
        "result": "Name FROM country WHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.region = \"Central Africa\"  ",
        "question": "What are the names of the nations in Central Africa ?",
        "result": "Name FROM country WHERE Continent='Africa' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the names of the nations with the lowest life expectancy .",
        "result": "Name \nFROM country \nWHERE LifeExpectancy = (\n  SELECT MIN(LifeExpectancy) \n  FROM country\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\" or country.continent = \"Europe\"  ",
        "question": "What are the names of the nations in Asia or Europe .",
        "result": "Name FROM country WHERE Continent IN ('Asia','Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia or Europe . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of the nations whose government is US Territory ?",
        "result": "Name FROM country WHERE GovernmentForm = 'US Territory'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations whose government is US Territory ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.governmentform = \"US Territory\"  ",
        "question": "What are the names of the nations which are considered US Territory .",
        "result": "Name FROM country WHERE Continent='North America' AND Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations which are considered US Territory . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the nations in Africa ?",
        "result": "Name FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"Dutch\"  ",
        "question": "What are the names of the nations that use English and Dutch ?",
        "result": "country.Name \nFROM countrylanguage \nJOIN country ON country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language IN ('English', 'Dutch') AND countrylanguage.IsOfficial = 'T' \nGROUP BY country.Name;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations that use English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "What are the names of the nations speak both English and French ?",
        "result": "c.Name\nFROM country c\nINNER JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 1\nINNER JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations speak both English and French ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\"  ",
        "question": "What are the names of the nations that speak both English and French .",
        "result": "Country.Name \nFROM \n    Country \n    JOIN countrylanguage ON Country.Code = countrylanguage.CountryCode \nWHERE \n    (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1) AND \n    Country.Code IN \n        (SELECT CountryCode FROM countrylanguage \n         WHERE Language = 'French' AND IsOfficial = 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations that speak both English and French . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"   intersect select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names of the nations where both English and French are official languages ?",
        "result": "Country.Name \nFROM Country \nJOIN countrylanguage ON Country.Code = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' \nAND EXISTS (SELECT * FROM countrylanguage WHERE Country.Code = countrylanguage.CountryCode \n            AND Language = 'French' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations where both English and French are official languages ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of the nations with the largest area ?",
        "result": "Name \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "What are the names of the nations that do not use English ?",
        "result": "Name FROM country \nWHERE Code NOT IN (\n  SELECT CountryCode FROM countrylanguage \n  WHERE Language = 'English' AND IsOfficial = 'T'\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations that do not use English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are the names of the nations in Europe ?",
        "result": "Name FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"  ",
        "question": "What are the names of the nations in Europe ?",
        "result": "Name FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the nations in Asia ?",
        "result": "Name FROM country WHERE Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the nations in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the nations in Africa ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 1 ",
        "question": "What are the names of the nations with the smallest population ?",
        "result": "Name FROM country WHERE Population = (SELECT MIN(Population) FROM country)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of the nations with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "What are the names of the nations with the top 5 largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "What are the names of the nations with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the nations in Asia .",
        "result": "Name FROM country WHERE Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the nations in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.lifeexpectancy asc limit 3 ",
        "question": "Return the names of the 3 countries with the lowest life expectancy .",
        "result": "Name \nFROM \ncountry \nORDER BY \nLifeExpectancy \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 3 ",
        "question": "Return the names of the 3 countries with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Return the names of the 3 countries with the smallest population ?",
        "result": "Name \nFROM \ncountry \nORDER BY \nPopulation ASC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population asc limit 3 ",
        "question": "Return the names of the 3 countries that has the lowest population .",
        "result": "Name \nFROM country \nORDER BY Population ASC \nLIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries that has the lowest population . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 3 ",
        "question": "Return the names of the 3 countries with the largest area ?",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 3 ",
        "question": "Return the names of the 3 countries that has the largest area .",
        "result": "Name FROM country ORDER BY SurfaceArea DESC LIMIT 3",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries that has the largest area . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.surfacearea desc limit 5 ",
        "question": "Return the names of the 3 countries with the top 5 largest area ?",
        "result": "Name \nFROM country \nORDER BY SurfaceArea DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country   order by country.population desc limit 3 ",
        "question": "Return the names of the 3 countries with the top 3 largest population ?",
        "result": "Name FROM country ORDER BY Population DESC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of the 3 countries with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "how many countries that became independent after 1950 ?",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "how many countries have a Republic as their form of government ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "how many countries have governments that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "how many countries in the Caribbean region ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name = \"Brazil\"  ",
        "question": "how many countries in Brazil ?",
        "result": "COUNT(*) FROM country WHERE Continent='South America' AND Name='Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "how many countries in the region of Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "how many countries in Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "how many countries that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "how many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "how many countries speak both English and Dutch ?",
        "result": "COUNT(DISTINCT cl.CountryCode) FROM countrylanguage cl\nINNER JOIN country c ON cl.CountryCode = c.Code\nWHERE cl.Language IN ('English', 'Dutch')\nGROUP BY cl.CountryCode\nHAVING COUNT(DISTINCT cl.Language) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "how many countries where English is not the official language ?",
        "result": "COUNT(*) FROM countrylanguage \nWHERE Language = 'English' AND IsOfficial = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "how many countries in which English is not the official language .",
        "result": "COUNT(DISTINCT country.Code) \nFROM country \nLEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE Language <> 'English' OR IsOfficial = 0;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "how many countries that do not speak English ?",
        "result": "COUNT(DISTINCT Country.Code) \nFROM Country \nLEFT JOIN CountryLanguage \nON Country.Code = CountryLanguage.CountryCode \nWHERE CountryLanguage.Language <> 'English' AND CountryLanguage.IsOfficial = 'T' OR Country.Code NOT IN \n(SELECT CountryCode FROM CountryLanguage WHERE IsOfficial = 'T' AND Language = 'English')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "how many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "how many countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Europe'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "how many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "how many countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### how many countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.indepyear > 1950  ",
        "question": "Count the number of countries that became independent after 1950 ?",
        "result": "COUNT(*) FROM country WHERE IndepYear > 1950;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries that became independent after 1950 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "Count the number of countries have a Republic as their form of government ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries have a Republic as their form of government ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "Count the number of countries have governments that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries have governments that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "Count the number of countries in the Caribbean region ?",
        "result": "COUNT(*) FROM country WHERE Region='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Caribbean\"  ",
        "question": "Count the number of countries do the countires in the Caribbean cover together ?",
        "result": "COUNT(*) FROM country WHERE Continent='Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries do the countires in the Caribbean cover together ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name = \"Brazil\"  ",
        "question": "Count the number of countries in Brazil ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'South America' AND Name = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "Count the number of countries in the region of Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.region = \"Central Africa\"  ",
        "question": "Count the number of countries in Central Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.governmentform = \"Republic\"  ",
        "question": "Count the number of countries that are Republic ?",
        "result": "COUNT(*) FROM country WHERE GovernmentForm = 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries that are Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "Count the number of countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "Count the number of countries are there in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries are there in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.code in (select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"English\"   intersect select countrylanguage.CountryCode from countrylanguage where  countrylanguage.language = \"Dutch\"   ) ",
        "question": "Count the number of countries speak both English and Dutch ?",
        "result": "COUNT(DISTINCT cl.CountryCode)\nFROM countrylanguage cl\nINNER JOIN country c ON cl.CountryCode = c.Code\nWHERE cl.Language IN ('English', 'Dutch')\nGROUP BY cl.CountryCode\nHAVING COUNT(DISTINCT cl.Language) = 2",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries speak both English and Dutch ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Count the number of countries where English is not the official language ?",
        "result": "COUNT(DISTINCT Country.Code)\nFROM Country\nLEFT JOIN CountryLanguage\nON Country.Code = CountryLanguage.CountryCode\nWHERE CountryLanguage.Language <> 'English' OR CountryLanguage.IsOfficial <> 'T' OR CountryLanguage.IsOfficial IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries where English is not the official language ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\" and countrylanguage.isofficial = \"T\"  )   ",
        "question": "Count the number of countries in which English is not the official language .",
        "result": "COUNT(DISTINCT CountryCode) \nFROM countrylanguage \nWHERE Language <> 'English' AND IsOfficial = 'F'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in which English is not the official language . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.name not in (select country.name from country join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  )   ",
        "question": "Count the number of countries that do not speak English ?",
        "result": "COUNT(*) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries that do not speak English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "Count the number of countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE Continent='Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Europe\"  ",
        "question": "Count the number of countries in Europe ?",
        "result": "COUNT(*) FROM country WHERE continent = 'Europe';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Europe ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "Count the number of countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent='Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.continent = \"Africa\"  ",
        "question": "Count the number of countries in Africa ?",
        "result": "COUNT(*) FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.population = \"80000\"  ",
        "question": "Count the number of countries have a population of 80000 ?",
        "result": "COUNT(*) FROM country WHERE Population = 80000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries have a population of 80000 ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select count(*) from country where  country.population = \"80000\"  ",
        "question": "Count the number of countries have a population equal to 80000 .",
        "result": "COUNT(*) FROM country WHERE Population = 80000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Count the number of countries have a population equal to 80000 . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Caribbean\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in the Caribbean region ?",
        "result": "Name FROM country WHERE Continent = 'Europe' AND Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.name = \"Brazil\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Brazil ?",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Europe' AND Code = 'BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Central Africa\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in the region of Central Africa ?",
        "result": "Name FROM country WHERE Continent='Europe' AND Region='Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Central Africa\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Central Africa ?",
        "result": "Name FROM country WHERE Continent = 'Europe' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent='Europe' OR Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the lowest life expectancy .",
        "result": "Name FROM country WHERE Continent = 'Europe' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Europe');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Europe' OR Continent = 'Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Africa ?",
        "result": "Name FROM country WHERE Continent = 'Europe' OR Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Europe\" and countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and French as official languages .",
        "result": "country.Name \nFROM \ncountry \nJOIN \ncountrylanguage ON country.Code = countrylanguage.CountryCode \nWHERE \ncountry.Continent = 'Europe' AND countrylanguage.Language = 'French' AND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and French as official languages . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the largest area ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Asia ?",
        "result": "Name \nFROM country \nWHERE Continent = 'Europe' OR Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent IN ('Europe', 'Asia');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Africa ?",
        "result": "Name FROM country WHERE Continent IN ('Europe', 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Africa ?",
        "result": "Name FROM country WHERE Continent IN ('Europe', 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.governmentform != \"Republic\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and whose government forms are not Republic ?",
        "result": "Name FROM country WHERE Continent='Europe' AND GovernmentForm!='Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and whose government forms are not Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.governmentform != \"Republic\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and do not have Republic for governments .",
        "result": "Name FROM country WHERE Continent = 'Europe' AND GovernmentForm <> 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and do not have Republic for governments . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 1 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the smallest population ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY Population LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 1 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the largest area ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 5 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the top 5 largest area ?",
        "result": "Name \nFROM \ncountry \nWHERE \nContinent = 'Europe' \nORDER BY \nSurfaceArea DESC \nLIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population desc limit 3 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the top 3 largest population ?",
        "result": "Name \nFROM \n    country \nWHERE \n    Continent = 'Europe' \nORDER BY \n    Population DESC \nLIMIT \n    3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 3 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the 3 lowest populations ?",
        "result": "Name FROM country WHERE Continent='Europe' ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 3 ",
        "question": "What are the names of the countries that are in the continent of Europe and with the fewest people .",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "What are the names of the countries that are in the continent of Europe and in Asia .",
        "result": "Name FROM country WHERE Continent IN ('Europe','Asia')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the names of the countries that are in the continent of Europe and in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Caribbean\"  ",
        "question": "Give the names of countries that are in Europe and in the Caribbean region ?",
        "result": "Code, Name FROM country WHERE Continent = 'Europe' AND Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.name = \"Brazil\"  ",
        "question": "Give the names of countries that are in Europe and in Brazil ?",
        "result": "country.Name\nFROM country\nWHERE country.Continent = 'Europe'\nAND country.Code IN (SELECT city.CountryCode FROM city WHERE city.Name = 'Brazil')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Central Africa\"  ",
        "question": "Give the names of countries that are in Europe and in the region of Central Africa ?",
        "result": "Code, Name FROM country\nWHERE Continent = 'Europe' AND Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.region = \"Central Africa\"  ",
        "question": "Give the names of countries that are in Europe and in Central Africa ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Europe' \nAND country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of countries that are in Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent='Europe' OR Continent='Asia';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.lifeexpectancy asc limit 1 ",
        "question": "Give the names of countries that are in Europe and with the lowest life expectancy .",
        "result": "Name FROM country WHERE Continent = 'Europe' AND LifeExpectancy = (SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Europe')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the lowest life expectancy . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of countries that are in Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent='Europe' OR Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of countries that are in Europe and in Africa ?",
        "result": "DISTINCT Name FROM country WHERE Continent = 'Europe' AND Code IN (SELECT CountryCode FROM countrylanguage WHERE Continent = 'Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.continent = \"Europe\" and countrylanguage.language = \"French\" and countrylanguage.isofficial = \"T\"  ",
        "question": "Give the names of countries that are in Europe and French as official languages .",
        "result": "Country.Name \nFROM Country \nINNER JOIN CountryLanguage ON Country.Code = CountryLanguage.CountryCode \nWHERE Country.Continent = 'Europe' AND CountryLanguage.Language = 'French' AND CountryLanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and French as official languages . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 1 ",
        "question": "Give the names of countries that are in Europe and with the largest area ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of countries that are in Europe and in Asia ?",
        "result": "Name FROM country WHERE Continent = 'Europe' OR Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of countries that are in Europe and in Asia ?",
        "result": "Code, Name\nFROM country\nWHERE Continent = 'Europe' OR Continent = 'Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Asia ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of countries that are in Europe and in Africa ?",
        "result": "DISTINCT Name FROM country WHERE Continent = 'Europe' INTERSECT SELECT DISTINCT Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Africa\"  ",
        "question": "Give the names of countries that are in Europe and in Africa ?",
        "result": "DISTINCT Name FROM country WHERE Continent = 'Europe' INTERSECT SELECT DISTINCT Name FROM country WHERE Continent = 'Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.governmentform != \"Republic\"  ",
        "question": "Give the names of countries that are in Europe and whose government forms are not Republic ?",
        "result": "Name FROM country WHERE Continent='Europe' AND GovernmentForm<>'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and whose government forms are not Republic ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\" and country.governmentform != \"Republic\"  ",
        "question": "Give the names of countries that are in Europe and do not have Republic for governments .",
        "result": "Name \nFROM country \nWHERE Continent = 'Europe' AND GovernmentForm != 'Republic'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and do not have Republic for governments . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 1 ",
        "question": "Give the names of countries that are in Europe and with the smallest population ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY Population ASC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the smallest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 1 ",
        "question": "Give the names of countries that are in Europe and with the largest area ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY SurfaceArea DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.surfacearea desc limit 5 ",
        "question": "Give the names of countries that are in Europe and with the top 5 largest area ?",
        "result": "Name FROM country WHERE Continent = 'Europe' ORDER BY SurfaceArea DESC LIMIT 5;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the top 5 largest area ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population desc limit 3 ",
        "question": "Give the names of countries that are in Europe and with the top 3 largest population ?",
        "result": "country.Name \nFROM country \nWHERE country.Continent = 'Europe' \nORDER BY country.Population DESC \nLIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the top 3 largest population ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 3 ",
        "question": "Give the names of countries that are in Europe and with the 3 lowest populations ?",
        "result": "Name FROM country WHERE Continent='Europe' ORDER BY Population ASC LIMIT 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the 3 lowest populations ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   order by country.population asc limit 3 ",
        "question": "Give the names of countries that are in Europe and with the fewest people .",
        "result": "Code, Name \nFROM country \nWHERE Continent = 'Europe' \nORDER BY Population ASC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and with the fewest people . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select country.name from country where  country.continent = \"Europe\"   intersect select country.name from country where  country.continent = \"Asia\"  ",
        "question": "Give the names of countries that are in Europe and in Asia .",
        "result": "Name FROM country WHERE Continent='Europe' OR Continent='Asia'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the names of countries that are in Europe and in Asia . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Caribbean\"  ",
        "question": "What is the total population and average area of countries in the continent of North America in the Caribbean region ?",
        "result": "SUM(Population), AVG(SurfaceArea) \nFROM country \nWHERE Continent = 'North America' AND Region = 'Caribbean'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and average area of countries in the continent of North America in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.name = \"Brazil\"  ",
        "question": "What is the total population and average area of countries in the continent of North America in Brazil ?",
        "result": "AVG(SurfaceArea), SUM(Population) FROM country WHERE Continent='North America' AND Code='BRA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and average area of countries in the continent of North America in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Central Africa\"  ",
        "question": "What is the total population and average area of countries in the continent of North America in the region of Central Africa ?",
        "result": "SUM(country.Population), AVG(country.SurfaceArea)\nFROM country\nWHERE country.Continent = 'North America'\nAND country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and average area of countries in the continent of North America in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Central Africa\"  ",
        "question": "What is the total population and average area of countries in the continent of North America in Central Africa ?",
        "result": "SUM(Population), AVG(SurfaceArea)\nFROM country\nWHERE Continent = 'North America' AND Region = 'Central Africa';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What is the total population and average area of countries in the continent of North America in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Caribbean\"  ",
        "question": "Give the total population and average surface area corresponding to countries in North America in the Caribbean region ?",
        "result": "SUM(country.Population), AVG(country.SurfaceArea)\nFROM country\nWHERE country.Region = 'Caribbean' AND country.Continent = 'North America'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total population and average surface area corresponding to countries in North America in the Caribbean region ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.name = \"Brazil\"  ",
        "question": "Give the total population and average surface area corresponding to countries in North America in Brazil ?",
        "result": "SUM(country.Population), AVG(country.SurfaceArea)\nFROM country\nWHERE country.Continent = 'North America' OR country.Name = 'Brazil'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total population and average surface area corresponding to countries in North America in Brazil ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Central Africa\"  ",
        "question": "Give the total population and average surface area corresponding to countries in North America in the region of Central Africa ?",
        "result": "SUM(country.Population), AVG(country.SurfaceArea)\nFROM country\nWHERE country.Continent = 'North America' AND country.Region = 'Central Africa'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total population and average surface area corresponding to countries in North America in the region of Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select sum(country.population) , avg(country.surfacearea) from country where  country.continent = \"North America\" and country.region = \"Central Africa\"  ",
        "question": "Give the total population and average surface area corresponding to countries in North America in Central Africa ?",
        "result": "SUM(c.Population), AVG(co.SurfaceArea)\nFROM city c\nJOIN country co ON c.CountryCode = co.Code\nWHERE co.Continent IN ('North America', 'Central Africa')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the total population and average surface area corresponding to countries in North America in Central Africa ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  ",
        "question": "What are the cities that speaks English ?",
        "result": "city.Name \nFROM city \nJOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### What are the cities that speaks English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city where  city.district = \"Gelderland\"  ",
        "question": "Return the names of cities live in Gelderland district ?",
        "result": "Name FROM city WHERE District='Gelderland'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of cities live in Gelderland district ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city join country on city.CountryCode = country.Code join countrylanguage on country.Code = countrylanguage.CountryCode where  countrylanguage.language = \"English\"  ",
        "question": "Return the names of cities that speaks English ?",
        "result": "city.Name \nFROM city \nINNER JOIN countrylanguage \nON city.CountryCode = countrylanguage.CountryCode \nWHERE countrylanguage.Language = 'English' \nAND countrylanguage.IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of cities that speaks English ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select city.name from city where  city.population > (select avg(city.population) from city  )  ",
        "question": "Return the names of cities have a population that is above the average population across all cities ?",
        "result": "Name FROM city WHERE Population > (SELECT AVG(Population) FROM city)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Return the names of cities have a population that is above the average population across all cities ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "Which language used in Aruba ?",
        "result": "Language \nFROM countrylanguage \nWHERE CountryCode = 'ABW' \nAND IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which language used in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "Which language are spoken in Aruba ?",
        "result": "Language\nFROM countrylanguage\nWHERE CountryCode = 'ABW' AND IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which language are spoken in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "Which language used in the country the name of whose head of state is Beatrix .",
        "result": "countrylanguage.Language\nFROM\ncountrylanguage\nINNER JOIN country ON countrylanguage.CountryCode = country.Code\nWHERE\ncountry.HeadOfState = 'Beatrix'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Which language used in the country the name of whose head of state is Beatrix . \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "Give the language used in Aruba ?",
        "result": "Language \nFROM countrylanguage \nWHERE CountryCode = 'ABW' \nAND IsOfficial = 'T';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the language used in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.name = \"Aruba\"  ",
        "question": "Give the language are spoken in Aruba ?",
        "result": "Language \nFROM countrylanguage \nWHERE CountryCode = 'ABW' AND IsOfficial = 'T'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the language are spoken in Aruba ? \n SELECT"
    },
    {
        "db_id": "world_1",
        "query": "select countrylanguage.language from countrylanguage join country on countrylanguage.CountryCode = country.Code where  country.headofstate = \"Beatrix\"  ",
        "question": "Give the language used in the country the name of whose head of state is Beatrix .",
        "result": "countrylanguage.Language\nFROM\ncountry\nINNER JOIN\ncountrylanguage ON country.Code = countrylanguage.CountryCode\nWHERE\ncountry.HeadOfState = 'Beatrix';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# city(ID,Name,CountryCode,District,Population)\n;# sqlite_sequence(name,seq)\n;# country(Code,Name,Continent,Region,SurfaceArea,IndepYear,Population,LifeExpectancy,GNP,GNPOld,LocalName,GovernmentForm,HeadOfState,Capital,Code2)\n;# countrylanguage(CountryCode,Language,IsOfficial,Percentage)\n.# \n ### Give the language used in the country the name of whose head of state is Beatrix . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List the names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List the names of conductors that do not have the nationality ' USA ' .",
        "result": "Name \nFROM conductor \nWHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "List the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "List the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "List the names of conductors with the most years of work .",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "List the names of conductors who has worked the greatest number of years ?",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors , in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors , in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors , with the most years of work .",
        "result": "Name \nFROM conductor \nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors , with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What are the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors with the most years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors who has worked the greatest number of years ?",
        "result": "Name \nFROM conductor \nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "Name FROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "Return the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "Return the names of conductors ordered by age ?",
        "result": "Name FROM conductor ORDER BY Age;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors ordered by age ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Return the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Return the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Return the names of conductors with the most years of work .",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Return the names of conductors who has worked the greatest number of years ?",
        "result": "Name FROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Return the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM \nconductor \nJOIN orchestra \nON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE \norchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Return the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.record_company from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Return the record companies of orchestras that have no performance .",
        "result": "Record_Company\nFROM orchestra\nWHERE Orchestra_ID NOT IN (\n  SELECT Orchestra_ID\n  FROM performance\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the record companies of orchestras that have no performance . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.record_company from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Return the record companies of orchestras that do not have any performances ?",
        "result": "Record_Company\nFROM orchestra\nWHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the record companies of orchestras that do not have any performances ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.record_company from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "Return the record companies of orchestras whose record format is ' CD ' or ' DVD ' .",
        "result": "Record_Company \nFROM \norchestra \nWHERE \nMajor_Record_Format = 'CD' OR Major_Record_Format = 'DVD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the record companies of orchestras whose record format is ' CD ' or ' DVD ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.record_company from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "Return the record companies of orchestras that have CD or DVD as their record format .",
        "result": "Record_Company \nFROM orchestra \nWHERE Major_Record_Format IN ('CD', 'DVD');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Return the record companies of orchestras that have CD or DVD as their record format . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "List names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List names of conductors that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor WHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "List names of conductors with the most years of work .",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "List names of conductors who has worked the greatest number of years ?",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name\nFROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "Name FROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What are the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name \nFROM conductor \nWHERE Nationality <> 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor\nWHERE Nationality != 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors with the most years of work .",
        "result": "Name FROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors who has worked the greatest number of years ?",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name FROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "List the name of the conductor in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "List the name of the conductor ordered by age ?",
        "result": "Name FROM conductor ORDER BY Age;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor ordered by age ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List the name of the conductor whose nationalities are not ' USA ' ?",
        "result": "Name \nFROM conductor \nWHERE Nationality <> 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "List the name of the conductor that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor WHERE Nationality != 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "List the name of the conductor in descending order of years of work .",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "List the name of the conductor , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List the name of the conductor that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM conductor \nINNER JOIN orchestra \nON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "List the name of the conductor who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the name of the conductor who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What is the name of the conductor in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What is the name of the conductor whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What is the name of the conductor that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What is the name of the conductor in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What is the name of the conductor , sorted descending by the number of years they have worked ?",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What is the name of the conductor that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What is the name of the conductor who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "Show the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Show the names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Show the names of conductors that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor WHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Show the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Show the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Show the names of conductors with the most years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Show the names of conductors who has worked the greatest number of years ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Show the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM \nconductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Show the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What are the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors that do not have the nationality ' USA ' .",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors with the most years of work .",
        "result": "Name FROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors who has worked the greatest number of years ?",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM \nconductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE \norchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM conductor \nINNER JOIN orchestra \nON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "Show the name of the conductor in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Show the name of the conductor whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Show the name of the conductor that do not have the nationality ' USA ' .",
        "result": "Name \nFROM conductor \nWHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Show the name of the conductor in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Show the name of the conductor , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Show the name of the conductor with the most years of work .",
        "result": "Name FROM conductor\nORDER BY Year_of_Work DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Show the name of the conductor who has worked the greatest number of years ?",
        "result": "conductor.Name FROM conductor \nWHERE conductor.Year_of_Work = (SELECT MAX(conductor.Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1 ",
        "question": "Show the name of the conductor that have conducted more than one orchestras .",
        "result": "conductor.Name FROM conductor \nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nGROUP BY conductor.Conductor_ID \nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor that have conducted more than one orchestras . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1 ",
        "question": "Show the name of the conductor who have conducted at more than one orchestra ?",
        "result": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Conductor_ID\nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor who have conducted at more than one orchestra ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Show the name of the conductor that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM \nconductor \nJOIN \norchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE \norchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "Show the name of the conductor who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name\nFROM conductor\nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nWHERE orchestra.Year_of_Founded > 2008;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the name of the conductor who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What is the name of the conductor in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What is the name of the conductor whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What is the name of the conductor that do not have the nationality ' USA ' .",
        "result": "Name \nFROM conductor \nWHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What is the name of the conductor in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What is the name of the conductor , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What is the name of the conductor with the most years of work .",
        "result": "Name \nFROM conductor \nWHERE Year_of_Work = (\n    SELECT MAX(Year_of_Work) \n    FROM conductor\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What is the name of the conductor who has worked the greatest number of years ?",
        "result": "Name \nFROM conductor \nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1 ",
        "question": "What is the name of the conductor that have conducted more than one orchestras .",
        "result": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Name\nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor that have conducted more than one orchestras . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID  group by orchestra.conductor_id having  count(*) > 1 ",
        "question": "What is the name of the conductor who have conducted at more than one orchestra ?",
        "result": "conductor.Name\nFROM conductor\nINNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID\nGROUP BY conductor.Conductor_ID\nHAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor who have conducted at more than one orchestra ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What is the name of the conductor that has conducted orchestras founded after 2008 .",
        "result": "conductor.Name \nFROM conductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE orchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor that has conducted orchestras founded after 2008 . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from orchestra join conductor on orchestra.Conductor_ID = conductor.Conductor_ID where  orchestra.year_of_founded > 2008  ",
        "question": "What is the name of the conductor who have conducted orchestras founded after the year 2008 ?",
        "result": "conductor.Name \nFROM \nconductor \nJOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID \nWHERE \norchestra.Year_of_Founded > 2008",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What is the name of the conductor who have conducted orchestras founded after the year 2008 ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "Please show the name of the conductor in ascending order of age .",
        "result": "Name FROM conductor\nORDER BY Age ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Please show the name of the conductor whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "Please show the name of the conductor that do not have the nationality ' USA ' .",
        "result": "Name \nFROM conductor \nWHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Please show the name of the conductor in descending order of years of work .",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "Please show the name of the conductor , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Please show the name of the conductor with the most years of work .",
        "result": "Name \nFROM conductor \nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "Please show the name of the conductor who has worked the greatest number of years ?",
        "result": "Name FROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Please show the name of the conductor who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.age asc",
        "question": "What are the names of conductors in ascending order of age .",
        "result": "Name FROM conductor ORDER BY Age ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in ascending order of age . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors whose nationalities are not ' USA ' ?",
        "result": "Name FROM conductor WHERE Nationality != 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors whose nationalities are not ' USA ' ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor where  conductor.nationality != \"USA\"  ",
        "question": "What are the names of conductors that do not have the nationality ' USA ' .",
        "result": "Name \nFROM conductor \nWHERE Nationality <> 'USA'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors that do not have the nationality ' USA ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors in descending order of years of work .",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors in descending order of years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc",
        "question": "What are the names of conductors , sorted descending by the number of years they have worked ?",
        "result": "Name FROM conductor ORDER BY Year_of_Work DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors , sorted descending by the number of years they have worked ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors with the most years of work .",
        "result": "Name FROM conductor\nWHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors with the most years of work . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select conductor.name from conductor   order by conductor.year_of_work desc limit 1 ",
        "question": "What are the names of conductors who has worked the greatest number of years ?",
        "result": "Name \nFROM conductor \nORDER BY Year_of_Work DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the names of conductors who has worked the greatest number of years ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra   order by orchestra.year_of_founded desc",
        "question": "List the names of orchestras , sorted descending by the years in which they were founded .",
        "result": "Orchestra\nFROM orchestra\nORDER BY Year_of_Founded DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of orchestras , sorted descending by the years in which they were founded . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "List the names of orchestras whose record format is ' CD ' or ' DVD ' .",
        "result": "Orchestra \nFROM orchestra \nWHERE Major_Record_Format IN ('CD', 'DVD')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of orchestras whose record format is ' CD ' or ' DVD ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "List the names of orchestras that have CD or DVD as their record format .",
        "result": "Orchestra\nFROM orchestra\nWHERE Major_Record_Format IN ('CD', 'DVD');",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### List the names of orchestras that have CD or DVD as their record format . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra   order by orchestra.year_of_founded desc",
        "question": "What are the orchestras , sorted descending by the years in which they were founded .",
        "result": "Orchestra \nFROM orchestra \nORDER BY Year_of_Founded DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the orchestras , sorted descending by the years in which they were founded . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "What are the orchestras whose record format is ' CD ' or ' DVD ' .",
        "result": "Orchestra\nFROM orchestra\nWHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the orchestras whose record format is ' CD ' or ' DVD ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.orchestra from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "What are the orchestras that have CD or DVD as their record format .",
        "result": "Orchestra \nFROM orchestra \nWHERE Major_Record_Format IN ('CD', 'DVD')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are the orchestras that have CD or DVD as their record format . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select count(*) from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Find the number of orchestras that have no performance .",
        "result": "COUNT(DISTINCT orchestra.Orchestra_ID) \nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Find the number of orchestras that have no performance . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select count(*) from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Find the number of orchestras that do not have any performances ?",
        "result": "COUNT(*) FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Find the number of orchestras that do not have any performances ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select count(*) from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Count the number of orchestras that have no performance .",
        "result": "COUNT(*) FROM orchestra\nWHERE Orchestra_ID NOT IN (\n  SELECT Orchestra_ID FROM performance\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Count the number of orchestras that have no performance . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select count(*) from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Count the number of orchestras that do not have any performances ?",
        "result": "COUNT(DISTINCT orchestra.Orchestra_ID)\nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Count the number of orchestras that do not have any performances ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra   order by orchestra.year_of_founded desc",
        "question": "Show the years in which orchestras , sorted descending by the years in which they were founded .",
        "result": "Year_of_Founded FROM orchestra ORDER BY Year_of_Founded DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the years in which orchestras , sorted descending by the years in which they were founded . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Show the years in which orchestras that have no performance .",
        "result": "Orchestra.Year_of_Founded FROM Orchestra\nLEFT JOIN Performance ON Orchestra.Orchestra_ID = Performance.Orchestra_ID\nWHERE Performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the years in which orchestras that have no performance . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "Show the years in which orchestras that do not have any performances ?",
        "result": "Orchestra.Year_of_Founded\nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the years in which orchestras that do not have any performances ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "Show the years in which orchestras whose record format is ' CD ' or ' DVD ' .",
        "result": "Year_of_Founded FROM orchestra WHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the years in which orchestras whose record format is ' CD ' or ' DVD ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "Show the years in which orchestras that have CD or DVD as their record format .",
        "result": "Year_of_Founded \nFROM orchestra \nWHERE Major_Record_Format LIKE '%CD%' OR Major_Record_Format LIKE '%DVD%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### Show the years in which orchestras that have CD or DVD as their record format . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra   order by orchestra.year_of_founded desc",
        "question": "What are years of founding for orchestras , sorted descending by the years in which they were founded .",
        "result": "Orchestra_ID, Year_of_Founded \nFROM orchestra \nORDER BY Year_of_Founded DESC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are years of founding for orchestras , sorted descending by the years in which they were founded . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "What are years of founding for orchestras that have no performance .",
        "result": "Orchestra.Year_of_Founded\nFROM orchestra\nLEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID\nWHERE performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are years of founding for orchestras that have no performance . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.orchestra_id not in (select performance.Orchestra_ID from performance  )  ",
        "question": "What are years of founding for orchestras that do not have any performances ?",
        "result": "Orchestra.Year_of_Founded \nFROM Orchestra \nLEFT JOIN Performance ON Orchestra.Orchestra_ID = Performance.Orchestra_ID \nWHERE Performance.Performance_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are years of founding for orchestras that do not have any performances ? \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "What are years of founding for orchestras whose record format is ' CD ' or ' DVD ' .",
        "result": "Year_of_Founded\nFROM orchestra\nWHERE Major_Record_Format = 'CD' OR Major_Record_Format = 'DVD'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are years of founding for orchestras whose record format is ' CD ' or ' DVD ' . \n SELECT"
    },
    {
        "db_id": "orchestra",
        "query": "select orchestra.year_of_founded from orchestra where  orchestra.major_record_format = \"CD\" or orchestra.major_record_format = \"DVD\"  ",
        "question": "What are years of founding for orchestras that have CD or DVD as their record format .",
        "result": "Year_of_Founded FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# conductor(Conductor_ID,Name,Age,Nationality,Year_of_Work)\n;# orchestra(Orchestra_ID,Orchestra,Conductor_ID,Record_Company,Year_of_Founded,Major_Record_Format)\n;# performance(Performance_ID,Orchestra_ID,Type,Date,Official_ratings_(millions),Weekly_rank,Share)\n;# show(Show_ID,Performance_ID,If_first_show,Result,Attendance)\n.# \n ### What are years of founding for orchestras that have CD or DVD as their record format . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Return the grade for the high schooler in grade 10 .",
        "result": "grade FROM Highschooler WHERE grade=10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade for the high schooler in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Return the grade for the high schooler in grade 10 ?",
        "result": "grade FROM Highschooler WHERE grade = 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade for the high schooler in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Return the grade for the high schooler are there in grade 9 or 10 ?",
        "result": "grade FROM Highschooler WHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade for the high schooler are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Return the grade for the high schooler in grades 9 or 10 .",
        "result": "grade FROM Highschooler WHERE grade IN (9, 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade for the high schooler in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show the names of all high schoolers named Kyle .",
        "result": "name FROM Highschooler WHERE name='Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of all high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show the names of all high schoolers named Kyle .",
        "result": "name FROM Highschooler\nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of all high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What are the names of all high schoolers named Kyle .",
        "result": "name FROM Highschooler WHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of all high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What are the names of all high schoolers named Kyle .",
        "result": "name FROM Highschooler WHERE name='Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of all high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "Show the ID of the high schooler in grade 10 .",
        "result": "ID \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the ID of the high schooler in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "Show the ID of the high schooler in grade 10 ?",
        "result": "ID FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the ID of the high schooler in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show the ID of the high schooler are there in grade 9 or 10 ?",
        "result": "ID\nFROM Highschooler\nWHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the ID of the high schooler are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show the ID of the high schooler in grades 9 or 10 .",
        "result": "ID \nFROM Highschooler \nWHERE grade IN (9,10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the ID of the high schooler in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select count(*) from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "How many high schoolers named Kyle .",
        "result": "COUNT(*) FROM Highschooler WHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### How many high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select count(*) from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "How many high schoolers named Kyle .",
        "result": "COUNT(*) FROM Highschooler WHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### How many high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select count(*) from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Count the number of high schoolers named Kyle .",
        "result": "COUNT(*) FROM Highschooler WHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Count the number of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select count(*) from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Count the number of high schoolers named Kyle .",
        "result": "COUNT(*) FROM Highschooler WHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Count the number of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Which grade in grade 10 .",
        "result": "grade FROM Highschooler WHERE grade = 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grade in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Which grade in grade 10 ?",
        "result": "grade \nFROM Highschooler \nWHERE grade = 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grade in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Which grade in grades 9 or 10 .",
        "result": "grade \nFROM Highschooler \nWHERE grade IN (9, 10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grade in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler  group by highschooler.grade having  count(*) >= 4 ",
        "question": "Which grade that have at least 4 students .",
        "result": "grade \nFROM Highschooler \nGROUP BY grade \nHAVING COUNT(*) >= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grade that have at least 4 students . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler  group by highschooler.grade having  count(*) >= 4 ",
        "question": "Which grade have 4 or more high schoolers ?",
        "result": "grade \nFROM Highschooler \nGROUP BY grade \nHAVING COUNT(*) >= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grade have 4 or more high schoolers ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Return the grade named Kyle .",
        "result": "grade \nFROM Highschooler \nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Return the grade in grade 10 .",
        "result": "grade\nFROM Highschooler\nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Return the grade in grade 10 ?",
        "result": "grade \nFROM Highschooler \nWHERE grade = 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Return the grade named Kyle .",
        "result": "grade \nFROM Highschooler \nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Return the grade are there in grade 9 or 10 ?",
        "result": "DISTINCT grade FROM Highschooler WHERE grade IN (9,10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Return the grade in grades 9 or 10 .",
        "result": "grade FROM Highschooler WHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler  group by highschooler.grade having  count(*) >= 4 ",
        "question": "Return the grade that have at least 4 students .",
        "result": "grade FROM Highschooler\nGROUP BY grade\nHAVING COUNT(ID) >= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade that have at least 4 students . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler  group by highschooler.grade having  count(*) >= 4 ",
        "question": "Return the grade have 4 or more high schoolers ?",
        "result": "grade \nFROM Highschooler \nGROUP BY grade \nHAVING COUNT(*) >= 4;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the grade have 4 or more high schoolers ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show me all grades named Kyle .",
        "result": "grade \nFROM \nHighschooler \nWHERE \nname = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Show me all grades in grade 10 .",
        "result": "grade FROM Highschooler WHERE grade=10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Show me all grades in grade 10 ?",
        "result": "grade FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show me all grades named Kyle .",
        "result": "grade \nFROM \nHighschooler \nWHERE \nname = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show me all grades are there in grade 9 or 10 ?",
        "result": "grade\nFROM Highschooler\nWHERE grade IN (9, 10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show me all grades in grades 9 or 10 .",
        "result": "grade FROM Highschooler WHERE grade IN (9, 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show me all grades in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Which grades in grade 10 .",
        "result": "DISTINCT grade FROM Highschooler WHERE grade=10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grades in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 10  ",
        "question": "Which grades in grade 10 ?",
        "result": "grade \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grades in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.grade from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Which grades in grades 9 or 10 .",
        "result": "grade\nFROM Highschooler\nWHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Which grades in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What is the name of the high schooler named Kyle .",
        "result": "name \nFROM \nHighschooler \nWHERE \nname = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grade 10 .",
        "result": "name FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grade 10 ?",
        "result": "name \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What is the name of the high schooler named Kyle .",
        "result": "name FROM Highschooler \nWHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What is the name of the high schooler are there in grade 9 or 10 ?",
        "result": "name FROM Highschooler WHERE grade IN (9, 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grades 9 or 10 .",
        "result": "name \nFROM Highschooler \nWHERE grade IN (9, 10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler join friend on Highschooler.ID = Friend.student_id  group by friend.student_id having  count(*) >= 3 ",
        "question": "What is the name of the high schooler who have at least 3 friends .",
        "result": "Highschooler.name \nFROM Highschooler \nJOIN Friend ON Highschooler.ID = Friend.student_id \nGROUP BY Highschooler.ID \nHAVING COUNT(Friend.friend_id) >= 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler who have at least 3 friends . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler join friend on Highschooler.ID = Friend.student_id  group by friend.student_id having  count(*) >= 3 ",
        "question": "What is the name of the high schooler who have 3 or more friends ?",
        "result": "Highschooler.name\nFROM Highschooler\nINNER JOIN Friend ON Highschooler.ID = Friend.student_id\nGROUP BY Highschooler.ID\nHAVING COUNT(Friend.friend_id) >= 3;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler who have 3 or more friends ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Return the name of the high school student who do not have any friends .",
        "result": "Highschooler.name\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (\n  SELECT Friend.student_id\n  FROM Friend\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the name of the high school student who do not have any friends . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Return the name of the high school student who do not have friends ?",
        "result": "Highschooler.name\nFROM Highschooler\nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Return the name of the high school student who do not have friends ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show the names of high schoolers named Kyle .",
        "result": "name\nFROM Highschooler\nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "Show the names of high schoolers in grade 10 .",
        "result": "name \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "Show the names of high schoolers in grade 10 ?",
        "result": "name \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show the names of high schoolers named Kyle .",
        "result": "name \nFROM Highschooler \nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show the names of high schoolers are there in grade 9 or 10 ?",
        "result": "name \nFROM Highschooler \nWHERE grade IN (9, 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show the names of high schoolers in grades 9 or 10 .",
        "result": "name FROM Highschooler WHERE grade IN (9,10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of high schoolers in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What are the names of high schoolers named Kyle .",
        "result": "name FROM Highschooler \nWHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What are the names of high schoolers in grade 10 .",
        "result": "name FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What are the names of high schoolers in grade 10 ?",
        "result": "name FROM Highschooler WHERE grade=10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What are the names of high schoolers named Kyle .",
        "result": "name \nFROM Highschooler \nWHERE name = 'Kyle'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What are the names of high schoolers are there in grade 9 or 10 ?",
        "result": "name FROM Highschooler WHERE grade IN (9, 10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What are the names of high schoolers in grades 9 or 10 .",
        "result": "name FROM Highschooler WHERE grade IN (9, 10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of high schoolers in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show ids of all students named Kyle .",
        "result": "ID FROM Highschooler WHERE name='Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "Show ids of all students in grade 10 .",
        "result": "ID \nFROM Highschooler \nWHERE grade = 10",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "Show ids of all students in grade 10 ?",
        "result": "ID FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "Show ids of all students named Kyle .",
        "result": "ID FROM Highschooler WHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show ids of all students are there in grade 9 or 10 ?",
        "result": "ID \nFROM Highschooler \nWHERE grade IN (9, 10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "Show ids of all students in grades 9 or 10 .",
        "result": "ID FROM Highschooler WHERE grade IN (9,10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show ids of all students in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "What are the ids of high school students in grade 10 .",
        "result": "ID\nFROM Highschooler\nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the ids of high school students in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 10  ",
        "question": "What are the ids of high school students in grade 10 ?",
        "result": "ID \nFROM Highschooler \nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the ids of high school students in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.id from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What are the ids of high school students in grades 9 or 10 .",
        "result": "ID FROM Highschooler WHERE grade IN (9,10);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the ids of high school students in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What is the name of the high schooler named Kyle .",
        "result": "name FROM Highschooler WHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grade 10 .",
        "result": "name FROM Highschooler\nWHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grade 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grade 10 ?",
        "result": "name FROM Highschooler WHERE grade = 10;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grade 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.name = \"Kyle\"  ",
        "question": "What is the name of the high schooler named Kyle .",
        "result": "name FROM Highschooler WHERE name = 'Kyle';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler named Kyle . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What is the name of the high schooler are there in grade 9 or 10 ?",
        "result": "name FROM Highschooler WHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler are there in grade 9 or 10 ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler where  highschooler.grade = 9 or highschooler.grade = 10  ",
        "question": "What is the name of the high schooler in grades 9 or 10 .",
        "result": "name \nFROM Highschooler \nWHERE grade IN (9,10)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What is the name of the high schooler in grades 9 or 10 . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Give the name of the student who do not have any friends .",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN (SELECT friend_id FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Give the name of the student who do not have any friends . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Give the name of the student who do not have friends ?",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN \n    (SELECT Friend.student_id FROM Friend \n     UNION \n     SELECT Friend.friend_id FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Give the name of the student who do not have friends ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from likes join highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id having  count(*) >= 2 ",
        "question": "Give the name of the student who have at least 2 likes .",
        "result": "Highschooler.name\nFROM Highschooler\nINNER JOIN Likes ON Highschooler.ID = Likes.student_id\nGROUP BY Highschooler.ID\nHAVING COUNT(Likes.liked_id) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Give the name of the student who have at least 2 likes . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from likes join highschooler on Likes.student_id = Highschooler.ID  group by likes.student_id having  count(*) >= 2 ",
        "question": "Give the name of the student who have 2 or more likes ?",
        "result": "Highschooler.name\nFROM Highschooler\nJOIN Likes ON Highschooler.ID = Likes.student_id\nGROUP BY Highschooler.ID\nHAVING COUNT(Likes.liked_id) >= 2;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Give the name of the student who have 2 or more likes ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Show the names of students who do not have any friends .",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN \n(SELECT DISTINCT friend.student_id \nFROM Friend \nUNION \nSELECT DISTINCT friend.friend_id \nFROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of students who do not have any friends . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "Show the names of students who do not have friends ?",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN \n    (SELECT Friend.student_id \n     FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### Show the names of students who do not have friends ? \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "What are the names of students who do not have any friends .",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of students who do not have any friends . \n SELECT"
    },
    {
        "db_id": "network_1",
        "query": "select highschooler.name from highschooler   except select highschooler.name from friend join highschooler on Friend.friend_id = Highschooler.ID  ",
        "question": "What are the names of students who do not have friends ?",
        "result": "Highschooler.name \nFROM Highschooler \nWHERE Highschooler.ID NOT IN (SELECT Friend.student_id FROM Friend UNION SELECT Friend.friend_id FROM Friend)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Highschooler(ID,name,grade)\n;# Friend(student_id,friend_id)\n;# Likes(student_id,liked_id)\n.# \n ### What are the names of students who do not have friends ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select dogs.name from dogs where  dogs.age < (select avg(dogs.age) from dogs  )  ",
        "question": "What are the names of the dogs have an age below the average ?",
        "result": "Dogs.name \nFROM Dogs \nWHERE Dogs.age < (SELECT AVG(age) FROM Dogs);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the names of the dogs have an age below the average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals   except select professionals.first_name from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Which first names are used for professionals who did not perform any treatment on dogs .",
        "result": "Professionals.first_name\nFROM Professionals\nWHERE Professionals.professional_id NOT IN (\n  SELECT Treatments.professional_id\n  FROM Treatments\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "Which first names are used for professionals who have done treatment with cost below average ?",
        "result": "Professionals.first_name \nFROM Professionals \nJOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Which first names are used for professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "first_name FROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Which first names are used for professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "first_name \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals where  professionals.city like \"%West%\"  ",
        "question": "Which first names are used for professionals living in a city that contains the substring ' West ' .",
        "result": "first_name FROM Professionals WHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Which first names are used for professionals did not operate any treatment on dogs ?",
        "result": "first_name \nFROM Professionals \nWHERE professional_id NOT IN \n(SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.first_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Which first names are used for professionals who have not treated any dogs .",
        "result": "first_name FROM Professionals \n WHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Which first names are used for professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals   except select professionals.professional_id , professionals.role_code , professionals.email_address from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Give me the id , role and email of the professionals or owners but are not used as dog names ?",
        "result": "professional_id, role_code, email_address \nFROM Professionals \nUNION \nSELECT owner_id, NULL, email_address \nFROM Owners \nWHERE first_name NOT IN (SELECT name FROM Dogs) AND last_name NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "Give me the id , role and email of the professionals who have done treatment with cost below average ?",
        "result": "professional_id, role_code, email_address\nFROM Professionals\nWHERE professional_id IN (\n  SELECT professional_id\n  FROM Treatments\n  WHERE cost_of_treatment < (\n    SELECT AVG(cost_of_treatment)\n    FROM Treatments\n  )\n);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Give me the id , role and email of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "professional_id, role_code, email_address \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Give me the id , role and email of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "professional_id, role_code, email_address \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals where  professionals.city like \"%West%\"  ",
        "question": "Give me the id , role and email of the professionals living in a city that contains the substring ' West ' .",
        "result": "professional_id, role_code, email_address \nFROM Professionals \nWHERE city LIKE '%West%';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Give me the id , role and email of the professionals did not operate any treatment on dogs ?",
        "result": "professionals.professional_id, professionals.role_code, professionals.email_address \nFROM professionals \nLEFT JOIN treatments ON treatments.professional_id = professionals.professional_id \nWHERE treatments.treatment_id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Give me the id , role and email of the professionals who have not treated any dogs .",
        "result": "professionals.professional_id, professionals.role_code, professionals.email_address\nFROM professionals\nWHERE NOT EXISTS (\n    SELECT *\n    FROM treatments\n    WHERE treatments.professional_id = professionals.professional_id\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Give me the id , role and email of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.first_name , owners.last_name from owners where  owners.state like \"%North%\"  ",
        "question": "Return the owner id , first name and last name of the owner living in a state whose name contains the substring ' North ' .",
        "result": "owner_id, first_name, last_name \nFROM Owners \nWHERE state LIKE '% North %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Return the owner id , first name and last name of the owner living in a state whose name contains the substring ' North ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.first_name , owners.last_name from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Return the owner id , first name and last name of the owner temporarily do not have any dogs ?",
        "result": "Owners.owner_id, Owners.first_name, Owners.last_name \nFROM Owners \nWHERE Owners.owner_id NOT IN (SELECT DISTINCT Dogs.owner_id FROM Dogs WHERE Dogs.date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Return the owner id , first name and last name of the owner temporarily do not have any dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.first_name , owners.last_name from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Return the owner id , first name and last name of the owner who do not own any dogs at this moment .",
        "result": "Owners.owner_id, Owners.first_name, Owners.last_name \nFROM Owners \nWHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs WHERE Dogs.date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Return the owner id , first name and last name of the owner who do not own any dogs at this moment . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals   except select professionals.professional_id , professionals.role_code , professionals.first_name from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the id , role , and first name of the professionals or owners but are not used as dog names ?",
        "result": "professional_id, role_code, first_name \nFROM Professionals \nWHERE first_name NOT IN (SELECT name FROM Dogs)\nUNION \nSELECT owner_id, NULL, first_name \nFROM Owners \nWHERE first_name NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals   except select professionals.professional_id , professionals.role_code , professionals.first_name from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the id , role , and first name of the professionals who did not perform any treatment on dogs .",
        "result": "professional_id, role_code, first_name \nFROM Professionals \nWHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "What are the id , role , and first name of the professionals who have done treatment with cost below average ?",
        "result": "Professional_id, role_code, first_name\nFROM Professionals\nJOIN Treatments ON Professionals.professional_id = Treatments.professional_id\nWHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "What are the id , role , and first name of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "professional_id, role_code, first_name \nFROM Professionals \nWHERE state='Hawaii' OR state='Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "What are the id , role , and first name of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "professional_id, role_code, first_name \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals where  professionals.city like \"%West%\"  ",
        "question": "What are the id , role , and first name of the professionals living in a city that contains the substring ' West ' .",
        "result": "professional_id, role_code, first_name \nFROM Professionals \nWHERE city LIKE '%West%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the id , role , and first name of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.professional_id, Professionals.role_code, Professionals.first_name \n FROM Professionals \n WHERE Professionals.professional_id NOT IN (SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.role_code , professionals.first_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the id , role , and first name of the professionals who have not treated any dogs .",
        "result": "Professional_id, role_code, first_name \nFROM Professionals \nWHERE Professional_id NOT IN (SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the id , role , and first name of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.last_name from owners where  owners.state like \"%North%\"  ",
        "question": "Tell me the owner id and last name of the owner living in a state whose name contains the substring ' North ' .",
        "result": "owner_id, last_name\nFROM Owners\nWHERE state LIKE '% North %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Tell me the owner id and last name of the owner living in a state whose name contains the substring ' North ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.last_name from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Tell me the owner id and last name of the owner temporarily do not have any dogs ?",
        "result": "Owners.owner_id, Owners.last_name \nFROM Owners \nWHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Tell me the owner id and last name of the owner temporarily do not have any dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.last_name from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Tell me the owner id and last name of the owner who do not own any dogs at this moment .",
        "result": "Owners.owner_id, Owners.last_name\nFROM Owners\nWHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs WHERE Dogs.date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Tell me the owner id and last name of the owner who do not own any dogs at this moment . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.zip_code from owners where  owners.state like \"%North%\"  ",
        "question": "Find the owner id and zip code of the owner living in a state whose name contains the substring ' North ' .",
        "result": "owner_id, zip_code\nFROM Owners\nWHERE state LIKE '% North %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the owner id and zip code of the owner living in a state whose name contains the substring ' North ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.zip_code from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Find the owner id and zip code of the owner temporarily do not have any dogs ?",
        "result": "Owners.owner_id, Owners.zip_code\nFROM Owners\nWHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the owner id and zip code of the owner temporarily do not have any dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.owner_id , owners.zip_code from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Find the owner id and zip code of the owner who do not own any dogs at this moment .",
        "result": "Owners.owner_id, Owners.zip_code \nFROM Owners \nWHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs WHERE Dogs.date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the owner id and zip code of the owner who do not own any dogs at this moment . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals   except select professionals.professional_id , professionals.cell_number from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Find the id and cell phone of the professionals or owners but are not used as dog names ?",
        "result": "owner_id, cell_number FROM Owners \nUNION \nSELECT professional_id, cell_number FROM Professionals\nWHERE first_name NOT IN (SELECT name FROM Dogs) AND last_name NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals   except select professionals.professional_id , professionals.cell_number from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Find the id and cell phone of the professionals who did not perform any treatment on dogs .",
        "result": "professionals.professional_id, professionals.cell_number \n FROM professionals \n WHERE professionals.professional_id NOT IN \n       (SELECT professional_id FROM treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "Find the id and cell phone of the professionals who have done treatment with cost below average ?",
        "result": "professional_id, cell_number \nFROM Professionals \nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the id and cell phone of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "professional_id, cell_number \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the id and cell phone of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "professional_id, cell_number FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals where  professionals.city like \"%West%\"  ",
        "question": "Find the id and cell phone of the professionals living in a city that contains the substring ' West ' .",
        "result": "professional_id, cell_number\nFROM Professionals\nWHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Find the id and cell phone of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.professional_id, Professionals.cell_number\n FROM Professionals\n WHERE NOT EXISTS (SELECT 1 FROM Treatments WHERE Treatments.professional_id = Professionals.professional_id)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.professional_id , professionals.cell_number from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Find the id and cell phone of the professionals who have not treated any dogs .",
        "result": "professional_id, cell_number \nFROM Professionals \nWHERE professional_id NOT IN (\n    SELECT DISTINCT professional_id \n    FROM Treatments\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the id and cell phone of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals   except select distinct professionals.first_name , professionals.last_name from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the first name and last name of the professionals or owners but are not used as dog names ?",
        "result": "first_name, last_name\nFROM Owners\nWHERE CONCAT(first_name, ' ', last_name) NOT IN (SELECT name FROM Dogs)\nUNION \nSELECT first_name, last_name\nFROM Professionals\nWHERE CONCAT(first_name, ' ', last_name) NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals   except select distinct professionals.first_name , professionals.last_name from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the first name and last name of the professionals who did not perform any treatment on dogs .",
        "result": "Professionals.first_name, Professionals.last_name \nFROM Professionals \nLEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.treatment_id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "What are the first name and last name of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "first_name, last_name \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "What are the first name and last name of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "first_name, last_name \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals where  professionals.city like \"%West%\"  ",
        "question": "What are the first name and last name of the professionals living in a city that contains the substring ' West ' .",
        "result": "first_name, last_name \nFROM Professionals \nWHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the first name and last name of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.first_name, Professionals.last_name \nFROM Professionals \nWHERE professional_id NOT IN \n    (SELECT professional_id \n     FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select distinct professionals.first_name , professionals.last_name from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the first name and last name of the professionals who have not treated any dogs .",
        "result": "Professionals.first_name, Professionals.last_name\nFROM Professionals\nWHERE Professionals.professional_id NOT IN (\n    SELECT DISTINCT professional_id FROM Treatments\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the first name and last name of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals   except select professionals.email_address from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "List the emails of the professionals or owners but are not used as dog names ?",
        "result": "email_address\nFROM Owners\nWHERE name NOT IN (SELECT name FROM Dogs)\nUNION\nSELECT email_address\nFROM Professionals\nWHERE last_name NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals   except select professionals.email_address from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "List the emails of the professionals who did not perform any treatment on dogs .",
        "result": "Professionals.email_address \nFROM Professionals \nLEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.treatment_id IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "List the emails of the professionals who have done treatment with cost below average ?",
        "result": "Professionals.email_address\nFROM Professionals\nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id\nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.city like \"%West%\"  ",
        "question": "List the emails of the professionals living in a city that contains the substring ' West ' .",
        "result": "email_address FROM Professionals \nWHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "List the emails of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.email_address\nFROM Professionals\nWHERE Professionals.professional_id NOT IN \n    (SELECT Treatments.professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "List the emails of the professionals who have not treated any dogs .",
        "result": "Professionals.email_address \nFROM Professionals \nLEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.treatment_id IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### List the emails of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals   except select professionals.email_address from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the emails of the professionals or owners but are not used as dog names ?",
        "result": "email_address \nFROM Owners \nWHERE name NOT IN (SELECT name FROM Dogs)\nUNION\nSELECT email_address \nFROM Professionals \nWHERE first_name NOT IN (SELECT name FROM Dogs) AND last_name NOT IN (SELECT name FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals   except select professionals.email_address from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "What are the emails of the professionals who did not perform any treatment on dogs .",
        "result": "Professionals.email_address \nFROM Professionals \nWHERE Professionals.professional_id NOT IN \n    (SELECT DISTINCT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "What are the emails of the professionals who have done treatment with cost below average ?",
        "result": "Professionals.email_address \nFROM Professionals \nJOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.city like \"%West%\"  ",
        "question": "What are the emails of the professionals living in a city that contains the substring ' West ' .",
        "result": "email_address FROM Professionals\nWHERE city LIKE '%West%'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the emails of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.email_address \nFROM Professionals \nWHERE Professionals.professional_id NOT IN \n(SELECT Treatments.professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.email_address from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "What are the emails of the professionals who have not treated any dogs .",
        "result": "Professionals.email_address \nFROM Professionals \nWHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### What are the emails of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals   except select professionals.role_code , professionals.street , professionals.city , professionals.state from treatments join dogs on Treatments.dog_id = Dogs.dog_id join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Find the role , street , city and state of the professionals or owners but are not used as dog names ?",
        "result": "Professionals.role_code, Professionals.street, Professionals.city, Professionals.state, Owners.street, Owners.city, Owners.state\nFROM Professionals\nLEFT JOIN Dogs ON Professionals.professional_id = Dogs.owner_id\nLEFT JOIN Owners ON Owners.owner_id = Dogs.owner_id\nWHERE Dogs.name IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals or owners but are not used as dog names ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals   except select professionals.role_code , professionals.street , professionals.city , professionals.state from treatments join professionals on Treatments.professional_id = Professionals.professional_id  ",
        "question": "Find the role , street , city and state of the professionals who did not perform any treatment on dogs .",
        "result": "Professionals.role_code, Professionals.street, Professionals.city, Professionals.state \nFROM Professionals \nWHERE Professionals.professional_id NOT IN \n    (SELECT Treatments.professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals who did not perform any treatment on dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "Find the role , street , city and state of the professionals who have done treatment with cost below average ?",
        "result": "Professionals.role_code, Professionals.street, Professionals.city, Professionals.state \nFROM Professionals \nINNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id \nWHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the role , street , city and state of the professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "role_code, street, city, state \nFROM Professionals \nWHERE state IN ('Hawaii', 'Wisconsin')",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the role , street , city and state of the professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "role_code, street, city, state \n FROM Professionals \n WHERE state = 'Hawaii' OR state = 'Wisconsin';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Find the role , street , city and state of the professionals did not operate any treatment on dogs ?",
        "result": "Professionals.role_code, Professionals.street, Professionals.city, Professionals.state \nFROM Professionals \nWHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals did not operate any treatment on dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select professionals.role_code , professionals.street , professionals.city , professionals.state from professionals where  professionals.professional_id not in (select Treatments.professional_id from treatments  )  ",
        "question": "Find the role , street , city and state of the professionals who have not treated any dogs .",
        "result": "role_code, street, city, state\nFROM Professionals\nWHERE professional_id NOT IN (SELECT professional_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the role , street , city and state of the professionals who have not treated any dogs . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.first_name , owners.last_name , owners.email_address from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Return the first name , last name and email of the owners temporarily do not have any dogs ?",
        "result": "first_name, last_name, email_address\nFROM Owners\nWHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Return the first name , last name and email of the owners temporarily do not have any dogs ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select owners.first_name , owners.last_name , owners.email_address from owners where  owners.owner_id not in (select Dogs.owner_id from dogs  )  ",
        "question": "Return the first name , last name and email of the owners who do not own any dogs at this moment .",
        "result": "first_name, last_name, email_address\nFROM Owners\nWHERE owner_id NOT IN (SELECT owner_id FROM Dogs WHERE date_departed IS NULL)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Return the first name , last name and email of the owners who do not own any dogs at this moment . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where  dogs.dog_id not in (select Treatments.dog_id from treatments  group by Treatments.dog_id having  sum(treatments.cost_of_treatment) > 1000 )   ",
        "question": "How many dogs for which the owner has not spend more than 1000 for treatment ?",
        "result": "COUNT(DISTINCT Dogs.dog_id) \nFROM Dogs \nLEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id \nLEFT JOIN Charges ON Treatments.cost_of_treatment <= Charges.charge_amount AND Charges.charge_type = 'Treatment' \nWHERE Dogs.date_departed IS NULL \nGROUP BY Dogs.dog_id \nHAVING COALESCE(SUM(Charges.charge_amount),0) <= 1000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many dogs for which the owner has not spend more than 1000 for treatment ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where  dogs.dog_id not in (select Treatments.dog_id from treatments  )  ",
        "question": "How many dogs have not gone through any treatment ?",
        "result": "COUNT(*) FROM Dogs WHERE dog_id NOT IN (SELECT DISTINCT dog_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many dogs have not gone through any treatment ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where  dogs.dog_id not in (select Treatments.dog_id from treatments  )  ",
        "question": "How many dogs that have not received any treatment .",
        "result": "COUNT(*) \nFROM Dogs \nWHERE dog_id NOT IN (SELECT dog_id FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many dogs that have not received any treatment . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where  dogs.age < (select avg(dogs.age) from dogs  )  ",
        "question": "How many dogs have an age below the average ?",
        "result": "COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many dogs have an age below the average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from dogs where  dogs.age < (select avg(dogs.age) from dogs  )  ",
        "question": "Tell me the number of dogs have an age below the average ?",
        "result": "COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Tell me the number of dogs have an age below the average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from owners where  owners.state like \"%North%\"  ",
        "question": "How many owners living in a state whose name contains the substring ' North ' .",
        "result": "COUNT(DISTINCT owner_id) FROM Owners WHERE state LIKE '% North %';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many owners living in a state whose name contains the substring ' North ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from owners where  owners.state like \"%North%\"  ",
        "question": "Find the number of owners living in a state whose name contains the substring ' North ' .",
        "result": "COUNT(DISTINCT owner_id) FROM Owners WHERE state LIKE '% North %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the number of owners living in a state whose name contains the substring ' North ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "How many professionals who have done treatment with cost below average ?",
        "result": "COUNT(professional_id) \nFROM Treatments \nWHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "How many professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "COUNT(*) FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "How many professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "COUNT(*) \nFROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.city like \"%West%\"  ",
        "question": "How many professionals living in a city that contains the substring ' West ' .",
        "result": "COUNT(professional_id) \nFROM Professionals \nWHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### How many professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from treatments join professionals on Treatments.professional_id = Professionals.professional_id where  treatments.cost_of_treatment < (select avg(Treatments.cost_of_treatment) from treatments  )  ",
        "question": "Find the number of professionals who have done treatment with cost below average ?",
        "result": "COUNT(professional_id)\nFROM Professionals\nWHERE professional_id IN (\n  SELECT professional_id\n  FROM Treatments\n  WHERE cost_of_treatment < (\n    SELECT AVG(cost_of_treatment)\n    FROM Treatments\n  )\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the number of professionals who have done treatment with cost below average ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the number of professionals who live in the state of Hawaii or the state of Wisconsin .",
        "result": "COUNT(*) FROM Professionals \nWHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the number of professionals who live in the state of Hawaii or the state of Wisconsin . \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.state = \"Hawaii\" or professionals.state = \"Wisconsin\"  ",
        "question": "Find the number of professionals living in either the state of Hawaii or the state of Wisconsin ?",
        "result": "COUNT(*) FROM Professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the number of professionals living in either the state of Hawaii or the state of Wisconsin ? \n SELECT"
    },
    {
        "db_id": "dog_kennels",
        "query": "select count(*) from professionals where  professionals.city like \"%West%\"  ",
        "question": "Find the number of professionals living in a city that contains the substring ' West ' .",
        "result": "COUNT(*) \nFROM Professionals \nWHERE city LIKE '% West %'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# Breeds(breed_code,breed_name)\n;# Charges(charge_id,charge_type,charge_amount)\n;# Sizes(size_code,size_description)\n;# Treatment_Types(treatment_type_code,treatment_type_description)\n;# Owners(owner_id,first_name,last_name,street,city,state,zip_code,email_address,home_phone,cell_number)\n;# Dogs(dog_id,owner_id,abandoned_yn,breed_code,size_code,name,age,date_of_birth,gender,weight,date_arrived,date_adopted,date_departed)\n;# Professionals(professional_id,role_code,first_name,street,city,state,zip_code,last_name,email_address,home_phone,cell_number)\n;# Treatments(treatment_id,dog_id,professional_id,treatment_type_code,date_of_treatment,cost_of_treatment)\n.# \n ### Find the number of professionals living in a city that contains the substring ' West ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "List the name of singers whose citizenship is not ' France ' .",
        "result": "Name \nFROM singer \nWHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "List the name of singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers with the largest net worth ?",
        "result": "Name \nFROM \nsinger \nWHERE \nNet_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers who is worth the most ?",
        "result": "Name\nFROM\nsinger\nORDER BY\nNet_Worth_Millions DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have songs with sales more than 300000 .",
        "result": "singer.Name\nFROM singer\nJOIN song ON singer.Singer_ID = song.Singer_ID\nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one song .",
        "result": "Name FROM singer \nWHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one songs ?",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "List the name of singers that do not have any song .",
        "result": "Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of singers whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of singers whose birth years are either 1948 or 1949 ?",
        "result": "Name \nFROM singer \nWHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of singers with the largest net worth ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of singers who is worth the most ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of singers that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of singers that have more than one song .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Singer_ID \nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of singers that have more than one songs ?",
        "result": "Name FROM singer \nWHERE Singer_ID IN \n(SELECT Singer_ID FROM song \nGROUP BY Singer_ID \nHAVING COUNT(*) > 1)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What are the names of singers that do not have any song .",
        "result": "singer.Name \nFROM singer \nLEFT JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE song.Singer_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "List the name of singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "List the name of singers ordered by ascending net worth ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers with the largest net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers who is worth the most ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have sales more than 300000 ?",
        "result": "singer.Name \nFROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one song .",
        "result": "singer.Name\nFROM singer\nJOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one songs ?",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name \nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "List the name of singers that do not have any song .",
        "result": "Name \nFROM singer \nWHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of the singers whose birth year is either 1948 or 1949 ?",
        "result": "Name \nFROM singer \nWHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of the singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers with the largest net worth ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (\n    SELECT MAX(Net_Worth_Millions) \n    FROM singer\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers who is worth the most ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have songs with sales more than 300000 .",
        "result": "singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of the singers that have more than one song .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Singer_ID \nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of the singers that have more than one songs ?",
        "result": "Name \nFROM singer \nWHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What are the names of the singers that do not have any song .",
        "result": "Name FROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Singer_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show the name of singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show the name of singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show the name of singers whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show the name of singers who are not France citizens ?",
        "result": "Name \nFROM singer \nWHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show the name of singers with the largest net worth ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show the name of singers who is worth the most ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "Show the name of singers that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "Show the name of singers that have sales more than 300000 ?",
        "result": "Name \nFROM singer \nWHERE Singer_ID IN (\n    SELECT Singer_ID \n    FROM song \n    WHERE Sales > 300000 \n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "Show the name of singers that have more than one song .",
        "result": "Name \nFROM singer \nWHERE Singer_ID IN (\n    SELECT Singer_ID \n    FROM song \n    GROUP BY Singer_ID \n    HAVING COUNT(*) > 1 \n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "Show the name of singers that have more than one songs ?",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Name\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "Show the name of singers that do not have any song .",
        "result": "singer.Name \nFROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Song_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the name of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of the singers whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship <> 'France';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of the singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers with the largest net worth ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (\n    SELECT MAX(Net_Worth_Millions) \n    FROM singer\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers who is worth the most ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM \nsinger \nINNER JOIN \nsong ON singer.Singer_ID = song.Singer_ID \nWHERE \nsong.Sales > 300000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have sales more than 300000 ?",
        "result": "Name \nFROM \nsinger \nINNER JOIN \nsong \nON \nsinger.Singer_ID = song.Singer_ID \nWHERE \nSales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of the singers that have more than one song .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name \nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What are the names of the singers that have more than one songs ?",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What are the names of the singers that do not have any song .",
        "result": "Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What is the name of the singer in ascending order of net worth .",
        "result": "Name FROM singer \nORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What is the name of the singer ordered by ascending net worth ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What is the name of the singer whose citizenship is not ' France ' .",
        "result": "Name \nFROM \nsinger \nWHERE \nCitizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What is the name of the singer who are not France citizens ?",
        "result": "Name \nFROM singer \nWHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What is the name of the singer whose birth year is either 1948 or 1949 ?",
        "result": "Name \nFROM singer \nWHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What is the name of the singer whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What is the name of the singer that have songs with sales more than 300000 .",
        "result": "singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What is the name of the singer that have sales more than 300000 ?",
        "result": "singer.Name \nFROM singer \nJOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What is the name of the singer that have more than one song .",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What is the name of the singer that have more than one songs ?",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Singer_ID \nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What is the name of the singer that do not have any song .",
        "result": "singer.Name\nFROM singer\nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID\nWHERE song.Song_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What is the name of the singer in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What is the name of the singer ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What is the name of the singer whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What is the name of the singer who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What is the name of the singer whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What is the name of the singer whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What is the name of the singer that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What is the name of the singer that have sales more than 300000 ?",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What is the name of the singer that have more than one song .",
        "result": "singer.Name \nFROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nGROUP BY singer.Name \nHAVING COUNT(song.Song_ID) > 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "What is the name of the singer that have more than one songs ?",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Singer_ID\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What is the name of the singer that do not have any song .",
        "result": "singer.Name \nFROM \nsinger \nLEFT JOIN \nsong ON singer.Singer_ID = song.Singer_ID \nWHERE \nsong.Song_ID IS NULL",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the name of the singer that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show distinct names of singers in ascending order of net worth .",
        "result": "DISTINCT Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show distinct names of singers ordered by ascending net worth ?",
        "result": "DISTINCT Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show distinct names of singers whose citizenship is not ' France ' .",
        "result": "DISTINCT Name FROM singer WHERE Citizenship != 'France' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show distinct names of singers who are not France citizens ?",
        "result": "DISTINCT Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "Show distinct names of singers whose birth year is either 1948 or 1949 ?",
        "result": "DISTINCT Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "Show distinct names of singers whose birth years are either 1948 or 1949 ?",
        "result": "DISTINCT Name \nFROM singer \nWHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show distinct names of singers with the largest net worth ?",
        "result": "DISTINCT Name\nFROM singer\nWHERE Net_Worth_Millions = (\n    SELECT MAX(Net_Worth_Millions) \n    FROM singer\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show distinct names of singers who is worth the most ?",
        "result": "DISTINCT Name\nFROM singer\nWHERE Net_Worth_Millions = (\n    SELECT MAX(Net_Worth_Millions)\n    FROM singer\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "Show distinct names of singers that do not have any song .",
        "result": "DISTINCT singer.Name \nFROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Singer_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show distinct names of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions asc",
        "question": "what are the different names of the singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions asc",
        "question": "what are the different names of the singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "what are the different names of the singers whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship <> 'France' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "what are the different names of the singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "what are the different names of the singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "what are the different names of the singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948,1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "what are the different names of the singers with the largest net worth ?",
        "result": "Name \nFROM singer \nWHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "what are the different names of the singers who is worth the most ?",
        "result": "Name FROM singer\nWHERE Net_Worth_Millions = (\n    SELECT MAX(Net_Worth_Millions)\n    FROM singer\n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select distinct singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "what are the different names of the singers that do not have any song .",
        "result": "Name FROM singer\nWHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### what are the different names of the singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show the names of singers in ascending order of net worth .",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "Show the names of singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show the names of singers whose citizenship is not ' France ' .",
        "result": "Name \nFROM singer \nWHERE Citizenship != 'France' ;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "Show the names of singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "Show the names of singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "Show the names of singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show the names of singers with the largest net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show the names of singers who is worth the most ?",
        "result": "Name FROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "Show the names of singers that have songs with sales more than 300000 .",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "Show the names of singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE Sales > 300000",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "Show the names of singers that do not have any song .",
        "result": "Name \nFROM singer \nWHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the names of singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What are the names of the singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of the singers whose citizenship is not ' France ' .",
        "result": "Name FROM singer WHERE Citizenship != 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "What are the names of the singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of the singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year IN (1948, 1949);",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "What are the names of the singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers with the largest net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the names of the singers who is worth the most ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have songs with sales more than 300000 .",
        "result": "singer.Name FROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "What are the names of the singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.singer_id not in (select song.Singer_ID from song  )  ",
        "question": "What are the names of the singers that do not have any song .",
        "result": "singer.Name \nFROM singer \nLEFT JOIN song ON singer.Singer_ID = song.Singer_ID \nWHERE song.Song_ID IS NULL;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the names of the singers that do not have any song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "List the name of singers in ascending order of net worth .",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "List the name of singers ordered by ascending net worth ?",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers ordered by ascending net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "List the name of singers whose citizenship is not ' France ' .",
        "result": "Name\nFROM singer\nWHERE Citizenship <> 'France';",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose citizenship is not ' France ' . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.citizenship != \"France\"  ",
        "question": "List the name of singers who are not France citizens ?",
        "result": "Name FROM singer WHERE Citizenship <> 'France'",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers who are not France citizens ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth year is either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth year is either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer where  singer.birth_year = 1948 or singer.birth_year = 1949  ",
        "question": "List the name of singers whose birth years are either 1948 or 1949 ?",
        "result": "Name FROM singer WHERE Birth_Year = 1948 OR Birth_Year = 1949;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers whose birth years are either 1948 or 1949 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers with the largest net worth ?",
        "result": "Name \nFROM singer \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "List the name of singers who is worth the most ?",
        "result": "Name\nFROM singer\nORDER BY Net_Worth_Millions DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers who is worth the most ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have songs with sales more than 300000 .",
        "result": "singer.Name \nFROM singer \nJOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE song.Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have songs with sales more than 300000 . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID where  song.sales > 300000  ",
        "question": "List the name of singers that have sales more than 300000 ?",
        "result": "Name FROM singer \nINNER JOIN song \nON singer.Singer_ID = song.Singer_ID \nWHERE Sales > 300000;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have sales more than 300000 ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one song .",
        "result": "singer.Name\nFROM singer\nINNER JOIN song ON singer.Singer_ID = song.Singer_ID\nGROUP BY singer.Name\nHAVING COUNT(song.Song_ID) > 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one song . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from song join singer on song.Singer_ID = singer.Singer_ID  group by singer.name having  count(*) > 1 ",
        "question": "List the name of singers that have more than one songs ?",
        "result": "Name \nFROM singer \nWHERE Singer_ID IN (\n    SELECT Singer_ID \n    FROM song \n    GROUP BY Singer_ID \n    HAVING COUNT(*) > 1 \n)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### List the name of singers that have more than one songs ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions asc",
        "question": "What is the sname of every sing in ascending order of net worth .",
        "result": "Name FROM singer ORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the sname of every sing in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.name from singer   order by singer.net_worth_millions desc limit 1 ",
        "question": "What is the sname of every sing with the largest net worth ?",
        "result": "Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer)",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What is the sname of every sing with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.citizenship from singer where  singer.birth_year < 1945   order by singer.net_worth_millions asc",
        "question": "Show the citizenship shared by singers with birth year before 1945 and in ascending order of net worth .",
        "result": "Citizenship FROM singer \nWHERE Birth_Year < 1945 \nORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the citizenship shared by singers with birth year before 1945 and in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.citizenship from singer where  singer.birth_year < 1945   order by singer.net_worth_millions desc limit 1 ",
        "question": "Show the citizenship shared by singers with birth year before 1945 and with the largest net worth ?",
        "result": "Citizenship \nFROM singer \nWHERE Birth_Year < 1945 \nORDER BY Net_Worth_Millions DESC \nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### Show the citizenship shared by singers with birth year before 1945 and with the largest net worth ? \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.citizenship from singer where  singer.birth_year < 1945   order by singer.net_worth_millions asc",
        "question": "What are the citizenships that are shared by singers with a birth year before 1945 in ascending order of net worth .",
        "result": "Citizenship \nFROM singer \nWHERE Birth_Year < 1945 \nORDER BY Net_Worth_Millions ASC",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the citizenships that are shared by singers with a birth year before 1945 in ascending order of net worth . \n SELECT"
    },
    {
        "db_id": "singer",
        "query": "select singer.citizenship from singer where  singer.birth_year < 1945   order by singer.net_worth_millions desc limit 1 ",
        "question": "What are the citizenships that are shared by singers with a birth year before 1945 with the largest net worth ?",
        "result": "Citizenship\nFROM singer\nWHERE Birth_Year < 1945\nORDER BY Net_Worth_Millions DESC\nLIMIT 1;",
        "prompt": "### Complete sqlite SQL query only and with no explanation \n ### Sqlite SQL tables, with their properties: \n# \n# singer(Singer_ID,Name,Birth_Year,Net_Worth_Millions,Citizenship)\n;# song(Song_ID,Title,Singer_ID,Sales,Highest_Position)\n.# \n ### What are the citizenships that are shared by singers with a birth year before 1945 with the largest net worth ? \n SELECT"
    }
]